<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 8" />
<title>The Discovery Subsystem</title>
<link rel="StyleSheet" href="../../Bookshelf.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function ehlp_showtip(current,e,text)
{
  if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape'))
  {
    document.tooltip.document.write("<layer bgColor='yellow' style='border:1px solid black;font-size:12px;'>"+ text + "<\/layer>");
    document.tooltip.document.close();
    document.tooltip.left=e.pageX+5;
    document.tooltip.top=e.pageY+5;
    document.tooltip.visibility="show";
  }
}
function ehlp_hidetip()
{
  document.tooltip.visibility="hidden";
}
//]]>
</script>
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
        origWidth = innerWidth;
        origHeight = innerHeight;
        onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
/*<![CDATA[*/
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
/*]]>*/
</style>

<script type="text/javascript" language="javascript1.2" src="../../whmsg.js">
</script>
<script type="text/javascript" language="javascript" src="../../whver.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../whproxy.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../whutils.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../whlang.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../whtopic.js">
</script>
</head>
<body>
<script type="text/javascript" language="javascript1.2">
//<![CDATA[
<!--
if (window.gbWhTopic)
{
        var strUrl = document.location.href;
        var bc = 0;
        var n = strUrl.toLowerCase().indexOf("bc-");
        if(n != -1)
        {
                document.location.href = strUrl.substring(0, n);
                bc = strUrl.substring(n+3);
        }

        if (window.addTocInfo)
        {
        addTocInfo("USING APPLICATIONS\nAuto Discovery\nThe Discovery Subsystem");
addButton("show",BTN_TEXT,"Show Table of Contents","","","","",0,0,"","","");

        }
        if (window.writeBtnStyle)
                writeBtnStyle();

        if (window.writeIntopicBar)
                writeIntopicBar(1);

        
        

        if (window.setRelStartPage)
        {
        setRelStartPage("../../Bookshelf.htm");

                autoSync(0);
                sendSyncInfo();
                sendAveInfoOut();
        }
}
else
        if (window.gbIE4)
                document.location.reload();

//-->
//]]>
</script><script type="text/javascript" language="JavaScript1.2" src="../../ehlpdhtm.js">
</script><script type="text/javascript" language="javascript">
//<![CDATA[
document.write("<p  style=\"text-align:right;color:#0000ff;font-family:Arial;font-size:7pt;font-weight: normal;font-style: normal;text-decoration: none;\">");
AddMasterBreadcrumbs("../../Bookshelf.htm", "color:#0000ff;font-family:Arial;font-size:7pt;font-weight: normal;font-style: normal;text-decoration: none;", "&gt;", "Home", "../../Welcome_to_GroundWork_Monitor/index.htm");
document.write("<a style=\"color:#0000ff;font-family:Arial;font-size:7pt;font-weight: normal;font-style: normal;text-decoration: none;\" href=\"../usingapplications_aboutusingapplications.htm\">USING APPLICATIONS<\/a> &gt; <a style=\"color:#0000ff;font-family:Arial;font-size:7pt;font-weight: normal;font-style: normal;text-decoration: none;\" href=\"ad_aboutautodiscovery.htm\">Auto Discovery<\/a> &gt; The Discovery Subsystem<\/p>");
//]]>
</script>
<p>&#160;</p>
<h1><a name="MiniTOCBookMark1" id="MiniTOCBookMark1"></a><img src="../../Shared_Images/square.gif" alt="square.gif" style="border: none;" width="15" height="15" border="0" /> Auto Discovery</h1>
<h3 align="right"><a href="ad_aboutautodiscovery.htm" title="Topic Home" onmouseover="if ((parseInt(navigator.appVersion) == 4) &amp;&amp; (navigator.appName == 'Netscape')) ehlp_showtip(this,event,'Topic Home');" onmouseout="if ((parseInt(navigator.appVersion) == 4) &amp;&amp; (navigator.appName == 'Netscape')) ehlp_hidetip();"><img src="../../Shared_Images/homeicon.gif" alt="homeicon.gif" style="border: none;" width="33" height="27" border="0" /></a> <img src="../../Shared_Images/printicon.gif" onclick="window.print()" alt="Print Page" title="Print Page" style="border: none;" width="33" height="27" border="0" /> <a href="mailto:support@groundworkopensource.com?subject=The Discovery Subsystem" title="Send Comments"><img src="../../Shared_Images/commentsicon.gif" alt="commentsicon.gif" style="border: none;" width="33" height="27" border="0" /></a></h3>
<span class="PageTitle">The Discovery Subsystem</span>
<p align="left">Table&#160;of&#160;Contents:&#160;<a class="dropspot" href="javascript:TextPopup(this)" id="MTHotSpot18405" name="MTHotSpot18405"><span class="MTText">Show</span><span class="MTText" style="display: none;">Hide</span></a></p>
<script type="text/javascript" language="JavaScript1.2">
//<![CDATA[
TextPopupInit('MTHotSpot18405', 'MTPOPUP18405');
//]]>
</script>
<div align="left" class="droptext" id="MTPOPUP18405" style="display: none;">
<ul style="text-align:left; list-style-type: circle;">
<li><a href="#MiniTOCBookMark2">About The Discovery Subsystem</a>
<ul style="list-style-type: circle;">
<li><a href="#MiniTOCBookMark3">Discovery Definitions</a></li>
</ul>
</li>
<li><a href="#MiniTOCBookMark8">Managing Discovery Definitions</a>
<ul style="list-style-type: circle;">
<li><a href="#MiniTOCBookMark9">Discovery Console Screen</a></li>
</ul>
</li>
<li><a href="#MiniTOCBookMark10">Creating Discovery Definitions</a></li>
<li><a href="#MiniTOCBookMark11">Editing Discovery Definitions</a></li>
<li><a href="#MiniTOCBookMark12">Deleting Discovery Definitions</a></li>
<li><a href="#MiniTOCBookMark13">Managing Address Ranges</a>
<ul style="list-style-type: circle;">
<li><a href="#MiniTOCBookMark14">Create a New Address Range</a></li>
</ul>
</li>
<li><a href="#MiniTOCBookMark15">Managing Discovery Methods</a>
<ul style="list-style-type: circle;">
<li><a href="#MiniTOCBookMark16">Create a New Discovery Method</a></li>
</ul>
</li>
<li><a href="#MiniTOCBookMark17">Nmap Discovery Method</a></li>
<li><a href="#MiniTOCBookMark18">SNMP Discovery Method</a></li>
<li><a href="#MiniTOCBookMark19">WMI Discovery Method</a></li>
<li><a href="#MiniTOCBookMark20">Script Discovery Method</a></li>
<li><a href="#MiniTOCBookMark21">Deleting Discovery Methods</a></li>
<li><a href="#MiniTOCBookMark22">Running Discovery Processes</a></li>
</ul>
</div>
<h2><a name="MiniTOCBookMark2" id="MiniTOCBookMark2"></a>About The Discovery Subsystem</h2>
<p>In practice, the discovery process is relatively straightforward, and usually only requires an administrator to answer a few confirmation prompts. However, there are a large number of options and variables that must be defined before this process can be started.</p>
<h3><a name="MiniTOCBookMark3" id="MiniTOCBookMark3"></a>Discovery Definitions</h3>
<p>In GroundWork Monitor, discovery definitions are used to store the configuration options for a particular discovery process. Once a discovery definition has been created, administrators can simply select the most appropriate discovery definition for the task at hand and immediately begin the associated discovery process, with all of the appropriate options and variables already selected.</p>
<p>In this model, administrators can create separate discovery definitions for each discovery process they may need, with each discrete discovery definition storing the options and variables that are required for a specific discovery process to complete successfully.</p>
<p>For example, administrators can create a discovery definition that simply probes the devices on the local network for a handful of well-known TCP and UDP services, and another discovery definition that probes the devices on a remote network for SNMP management data, with each of these discovery processes subsequently performing different types of synchronization with the configuration database.</p>
<p>Since a discovery definition describes an entire discovery operation from beginning to end, it incorporates all of the options and variables that are needed for the full process to run through completion. More specifically, each discovery definition includes the options and variables that govern the address ranges to be probed, the discovery methods to be used for probing the network addresses, the automation schema definition to be used for processing the results, and the automation action that should be taken upon completion. Some of these options are stored in the discovery definition object itself, while some of them are defined in secondary objects and then referenced by the discovery definition.</p>
<p>This relationship is illustrated in the figure below and discussed in detail in the text that follows, but the important point here is that all of these options and variables must be specified before a discovery definition can be created or executed.</p>
<p class="Caption">Figure: Discovery Definition</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_definition.gif" alt="Discovery Definition" title="Discovery Definition" style="border: none;" width="400" height="122" border="0" /></p>
<p>The major elements of a discovery definition are as follows:</p>
<h4><a name="MiniTOCBookMark4" id="MiniTOCBookMark4"></a>Address Ranges</h4>
<p>Each discovery process is run against one or more IP address specifications. Address ranges are independent objects that are referenced by the discovery definition, but they are defined as part of the discovery definition, or are defined as part of a discovery method that is also associated with the discovery definition (see next section). At least one address range must be specified, but administrators can define as many address ranges as may be needed. Administrators can also enable and disable address ranges on a per-process basis, which is useful for testing a discovery definition against a small network before it is used in production against multiple large networks.</p>
<h4><a name="MiniTOCBookMark5" id="MiniTOCBookMark5"></a>Discovery Methods</h4>
<p>The discovery service is able to use multiple kinds of networking technologies in order to detect the services that are active on each device. Discovery methods are independent objects that are referenced by the discovery definition and are also managed separately. At least one discovery method must be defined for each discovery definition, but multiple discovery methods can be associated with a single discovery definition, and each of the discovery methods can also be enabled or disabled for any given discovery process.</p>
<p>By default, GroundWork Monitor uses a discovery method based on the open source nmap utility to probe well-known TCP ports for common Internet services, and also uses SNMP queries to probe discovered devices for common management data. However, the discovery subsystem can also use nmap to probe for common UDP services, and is also capable of importing WMI discovery data generated elsewhere. Administrators can also create their own discovery methods that use arbitrary scripts and commands if needed.</p>
<h4><a name="MiniTOCBookMark6" id="MiniTOCBookMark6"></a>Automation Schema Definition</h4>
<p>Once the process of probing the selected networks with the selected discovery methods has completed, the process of matching the discovered devices with host and service profiles begins. This process is governed by the automation subsystem, which uses its own configuration options that are stored in a separate schema definition object (refer to the Automation section below for more information about schema definitions). The schema definition is used to tell the matching process about the format of the discovery data, as well as describing the string syntax to use when mapping the discovery output to the appropriate host and service profiles. Each discovery definition must have just one schema definition.</p>
<h4><a name="MiniTOCBookMark7" id="MiniTOCBookMark7"></a>Automation Action</h4>
<p>Once the profile-matching process completes, the Auto-Discovery service can either present the results to the administrator for review, or it can add the discovered nodes to the configuration database automatically, and it can even update the configuration database if so desired. This option is controlled by the automation action setting, which offers a choice between <span style="font-style: italic;"><i>Interactive</i></span>, <span style="font-style: italic;"><i>Automatic</i></span>, and <span style="font-style: italic;"><i>Auto-Commit</i></span> (in the order described above). This option can also be overridden on a per-process basis, thereby allowing the administrator to test a discovery process before having the results automatically committed to GroundWork Monitor's configuration database.</p>
<h2><a name="MiniTOCBookMark8" id="MiniTOCBookMark8"></a>Managing Discovery Definitions</h2>
<p>Discovery definitions are managed with the Discovery console screen. To access the Discovery console screen, select the Auto Discovery menu item from the main menu. The Discovery screen is the default active screen, but you can also explicitly activate this screen by choosing the Discovery menu item in the top menu bar.</p>
<h3><a name="MiniTOCBookMark9" id="MiniTOCBookMark9"></a>Discovery Console Screen</h3>
<p>The default Discovery console screen is shown in the figure below. As can be seen in that figure, GroundWork Monitor provides a default discovery definition called <span style="font-weight: bold;"><b>GroundWork-Discovery-Pro</b></span>.</p>
<p class="Caption">Figure: Discovery Console Screen</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_console.gif" alt="Managing Discovery Definitions" style="border: none;" width="700" height="305" border="0" /></p>
<p>When multiple discovery definitions exist, the currently selected discovery definition is highlighted with a <img src="../../Shared_Images/1green.gif" alt="1green.gif" style="border: none;" width="25" height="25" border="0" />dark yellow background. When only one discovery definition exists, it is always selected and therefore always highlighted.</p>
<p>Some of the <img src="../../Shared_Images/2green.gif" alt="2green.gif" style="border: none;" width="25" height="25" border="0" />run-time options and variables that are used for each discovery process are also shown in the main discovery console screen. For example, the available automation control types (<span style="font-weight: bold;"><b>Interactive</b></span>, <span style="font-weight: bold;"><b>Auto</b></span> or <span style="font-weight: bold;"><b>Auto-Commit</b></span>) are shown in the same row as the discovery definition name and description, with the currently defined setting being pre-selected. Meanwhile, all of the <img src="../../Shared_Images/3green.gif" alt="3green.gif" style="border: none;" width="25" height="25" border="0" />known address ranges are shown in the lower portion of the screen, with the address ranges that are linked to the current discovery definition being pre-selected.</p>
<p>The automation action and the address ranges can be changed before starting the discovery process, simply by selecting the desired options. By providing access to these options in the main discovery console screen, administrators can modify these settings at run-time without having to directly edit the discovery definition. The default selections for the currently selected discovery definition can be permanently changed by clicking the <span style="font-weight: bold;"><b><img src="../../Shared_Images/4green.gif" alt="4green.gif" style="border: none;" width="25" height="25" border="0" />Save</b></span> button in the upper right corner.</p>
<p><span style="font-style: italic;"><i>Bookshelf</i></span> reference for <span style="font-style: italic;"><i>Auto Discovery</i></span> can be access directly using the <span style="font-weight: bold;"><b>Help</b></span> button.</p>
<p>New discovery definitions can be created by clicking the <span style="font-weight: bold;"><b>New</b></span> button. This topic is discussed in the Creating Discovery Definitions section.</p>
<p>Granular modifications to the discovery definition can be made by clicking the <span style="font-weight: bold;"><b>Edit</b></span> button. This topic is discussed in the Editing Discovery Definitions section.</p>
<p>To execute a discovery process using the currently selected discovery definition and run-time options, click the <span style="font-weight: bold;"><b>Go&gt;&gt;</b></span> button. This topic is discussed in the Running Discovery Processes section.</p>
<h2><a name="MiniTOCBookMark10" id="MiniTOCBookMark10"></a>Creating Discovery Definitions</h2>
<ol>
<li class="p-Numbering">
<p class="Numbering">To create a new discovery definition, click the <span style="font-weight: bold;"><b>New</b></span> button on the discovery console screen. A new screen like the one below will be displayed.</p>
</li>
<li class="p-Numbering">
<p class="Numbering">Fill in the fields to suit your requirements.</p>
</li>
<li class="p-Numbering">
<p class="Numbering">Once the fields have been filled in to your satisfaction, click the <span style="font-weight: bold;"><b>Create</b></span> button to continue. At this point the discovery definition editor screen will be displayed, with the new discovery definition values already loaded. If you do not wish to continue creating a new discovery definition, click the <span style="font-weight: bold;"><b>Cancel</b></span> button to return to the main discovery console screen.</p>
</li>
</ol>
<p class="Caption">Figure: New Auto Discovery Definition</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_new1.gif" alt="Creating Discovery Definitions" title="Creating Discovery Definitions" style="border: none; margin-left: 2px; margin-right: 2px; margin-top: 2px; margin-bottom: 2px;" width="700" height="167" border="0" /></p>
<p class="Caption">Table: New Auto Discovery Definition Fields</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Auto discovery definition name</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Enter a short name for your new discovery definition.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Description</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Enter a description of your new discovery definition.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Import/update automation schema</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This drop-down list shows all of the automation schema definitions that have been created. By default, this list will show "GroundWork-Discovery-Pro". If you need to use a different schema, you can cancel the current operation and return to this dialog after the appropriate schema definition has been created, or you can continue with the current operation and change the discovery definition later. You must choose an automation schema definition to continue creating a discovery definition. Note that discovery processes can only use schema definitions that have a host-import schema type, although all of the schema definitions regardless of type will be shown in the drop-down list. Refer to the Automation section for information about automation schema definitions and schema types.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Default control type</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This drop-down list shows the three automation control types that are available. "Interactive" means that the administrator will be required to confirm the results of the discovery process, while "Auto" means that the results will be added to the GroundWork Monitor configuration database (but the configuration will not be automatically committed), while "Auto-Commit" means that the results will be added to the configuration database, the changes will be automatically committed, and GroundWork Monitor will immediately begin monitoring those devices. You must choose an automation action to continue, although you can revise your selection later.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Create from template</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Discovery definitions can be saved as "templates" that allow them to be partially reused (see the discussion in the next section for more details). If you have already saved a discovery definition as a template, you can reuse some of its options and variables by selecting it in the drop-down list. By default, this list box will contain a single entry for the "GroundWork-Default-Pro" template which is a template that is derived from the default discovery definition. If you do not want to inherit any options from any other definitions, leave this drop-down list empty.</p>
</td>
</tr>
</table>
<h2><a name="MiniTOCBookMark11" id="MiniTOCBookMark11"></a>Editing Discovery Definitions</h2>
<ol>
<li class="p-Numbering">
<p class="Numbering">To edit the options and variables associated with a discovery definition, select the discovery definition that you want to edit in the discovery console screen.</p>
</li>
<li class="p-Numbering">
<p class="Numbering">Click the <span style="font-weight: bold;"><b>Edit</b></span> button. This will result in the discovery definition editor screen being displayed with the discovery definition values already loaded (this screen will also be loaded automatically after a new discovery definition is created, as described in the preceding section). The figure below shows the discovery definition editor screen, using the values from the default <span style="font-weight: bold;"><b>GroundWork-Discovery-Pro</b></span> discovery definition.</p>
</li>
<li class="p-Numbering">
<p class="Numbering">Once you have finished making changes to the discovery definition, select one of the following options:</p>
</li>
</ol>
<ol>
<li style="list-style: none; display: inline;">
<ul style="list-style: url('../../Shared_Images/bullet02.gif');">
<li class="p-Bullet2">
<p class="Bullet2">Click the <span style="font-weight: bold;"><b>Save</b></span> button to make the changes permanent.</p>
</li>
<li class="p-Bullet2">
<p class="Bullet2">If you would like to create a template of the discovery definition that can be applied to future definitions, click the <span style="font-weight: bold;"><b>Save As Template</b></span> button. Templates are stored as XML text files in the <span class="CodeInline">/usr/local/groundwork/core/monarch/automation/templates</span> directory on the GroundWork Monitor server. Template files can be copied into the same directory on another GroundWork Monitor server and will be immediately usable on that system.</p>
</li>
<li class="p-Bullet2">
<p class="Bullet2">If you wish to initiate a discovery process using the current settings but without making the changes permanent, click the <span style="font-weight: bold;"><b>Go &gt;&gt;</b></span> button. If you want to cancel your changes and return to the main discovery console screen, click the <span style="font-weight: bold;"><b>Close</b></span> button.</p>
</li>
</ul>
</li>
</ol>
<p class="Caption">Figure: Discovery Definition Editor Screen</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_edit.gif" alt="Editing Discovery Definitions" title="Editing Discovery Definitions" style="border: none;" width="700" height="644" border="0" /></p>
<p class="Caption">Table: Discovery Definition Fields</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Description</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Enter a brief description for this discovery definition.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Import/update automation schema</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This drop-down list shows all of the automation schema definitions that have been created. Note that discovery processes can only use schema definitions that have a host-import schema type, although all of the schema definitions regardless of type will be shown in the drop-down list. Refer to the Automation section below for information about automation schema definitions and schema types.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Default control type</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This drop-down list shows the three automation control types that are available. "Interactive" means that the administrator will be required to confirm the results of the discovery process, while "Auto" means that the results will be added to the GroundWork Monitor configuration database automatically (but the configuration will not be committed), while "Auto-Commit" means that the results will be added and the changes will be committed.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Traceroute Option</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This option allows the discovery service to use the traceroute command to automatically determine the parent device of a discovered device. This option is only useful if remote networks are being probed and if the host entries in Nagios have parent-child relationships that reflect network topology. Note that the traceroute command requires ICMP to be enabled on the discovered devices and the intermediary network devices. Also note that the default hop-count and timeout values are tuned for moderately-sized networks, and you may need to override the default values if you intend to probe for devices across a very large or slow wide-area network.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Methods</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This portion of the editor screen shows the discovery methods that will be used to probe discovered devices for their available network services. All of the discovery methods that have been defined are displayed here (including methods that have been created for other discovery definitions), while the discovery methods that are associated with the current discovery definition will be actively selected. On a new installation, this area will only show the "Nmap TCP" and "SNMP" discovery methods that are provided with the default installation, although additional discovery methods may be created as needed, and the existing discovery methods may also be modified. New discovery definitions will not have any associated discovery methods unless the administrator used a discovery template during the creation process that had one or more methods already selected. Refer to the Managing Discovery Methods section below for information on creating and managing discovery methods.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Ranges and Filters</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This portion of the editor screen shows the address ranges that will be probed. All of the address ranges that have been defined are displayed here, including those that have been created for other discovery definitions. On a new installation, this area will only show a "local subnet" address range that was created during installation, although additional address ranges may be created as needed, and the existing address ranges may also be modified. New discovery definitions will not have any associated address ranges unless the administrator used a discovery template during the creation process that had one or more address ranges already selected. Refer to the Managing Address Ranges section below for information on creating and modifying the address ranges.</p>
</td>
</tr>
</table>
<h2><a name="MiniTOCBookMark12" id="MiniTOCBookMark12"></a>Deleting Discovery Definitions</h2>
<p>If you want to delete a discovery definition, you must do so from inside the discovery definition editor screen. Select the discovery definition that you want to delete from the main discovery console screen, and click the <span style="font-weight: bold;"><b>Edit</b></span> button. Once the discovery definition editor screen has loaded, click the <span style="font-weight: bold;"><b>Delete</b></span> button in the upper right corner. You will then be presented with a confirmation box similar to the following, which will also allow you to delete any discovery methods that may be associated with the discovery definition:</p>
<p class="Caption">Figure: Deleting Discovery Definitions</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_delete.gif" alt="Deleting Discovery Definitions" title="Deleting Discovery Definitions" style="border: none;" width="700" height="256" border="0" /></p>
<p>If you want to delete any of the discovery methods associated with the discovery definition, activate the appropriate check box. Once you are satisfied with your choices, click the <span style="font-weight: bold;"><b>Yes</b></span> button to delete the discovery definition and the selected discovery methods, or click the <span style="font-weight: bold;"><b>No</b></span> button to cancel and return to the discovery definition editor screen.</p>
<h2><a name="MiniTOCBookMark13" id="MiniTOCBookMark13"></a>Managing Address Ranges</h2>
<p>Address ranges are used to specify the IP addresses that should be probed during the discovery process. Address ranges can be specified in the main discovery console screen, the discovery definition editor screen, and the discovery method editor screen. In all these cases, a portion of the screen will have a <span style="font-weight: bold;"><b>Ranges and Filters</b></span> section similar to the figure below.</p>
<p>During installation, GroundWork Monitor examines the server's local IP address and subnet mask and attempts to create a <span style="font-weight: bold;"><b>local subnet</b></span> address range that reflects the local network's properties. This is shown as the <span style="font-weight: bold;"><b>local subnet</b></span> entry with the <span style="font-weight: bold;"><b>Range / filter</b></span> value of <span style="font-weight: bold;"><b>127.0.0.*</b></span> in the example below, although your own entry should reflect the IP addressing in use on your local network.</p>
<p class="Caption">Figure: Ranges and Filters</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_addresses.gif" alt="Managing Address Ranges" title="Managing Address Ranges" style="border: none; margin-left: 2px; margin-right: 2px; margin-top: 2px; margin-bottom: 2px;" width="700" height="146" border="0" /></p>
<h3><a name="MiniTOCBookMark14" id="MiniTOCBookMark14"></a>Create a New Address Range</h3>
<p>You can create as many address ranges as are needed, and multiple address ranges can be assigned to any discovery process. At least one address range must be active in order for a discovery process to execute.</p>
<ol>
<li class="p-Numbering">
<p class="Numbering">To create a new address range, fill in the fields with appropriate values and click the <span style="font-weight: bold;"><b>Add Range/Filter</b></span> button.</p>
</li>
<li class="p">
<p>At this point the newly created address range will appear in the <span style="font-weight: bold;"><b>Ranges and Filters</b></span> section of the current screen. Remember that address ranges must be selected before they will be incorporated into a discovery process.</p>
</li>
<li class="p">
<p>To delete an address range, click the <span style="font-weight: bold;"><b>delete range/filter</b></span> hyperlink next to it. There is no edit function for address ranges. If you wish to change an address range, it must be deleted and recreated.</p>
</li>
</ol>
<p class="Caption">Table: Ranges and Filters</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Name</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Enter a short name for the address range.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Type</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">There are two types of address ranges in Auto-Discovery: an "include" range that specifies a range of addresses that should be probed, and an "exclude" range that specifies a subset of addresses that should not be probed. IP addresses that are not part of an "include" range are never probed, so you do not need to "exclude" any addresses unless they fall within the scope of an "include" range.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Range / Filter</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Address ranges can use any of the following different formats:</p>
<ul>
<li class="P-Bullet2" style="font-size: 8pt;">
<p class="Bullet2" style="font-size: 8pt;">Unqualified hostname (e.g. mybox)</p>
</li>
<li class="P-Bullet2" style="font-size: 8pt;">
<p class="Bullet2" style="font-size: 8pt;">Qualified hostname (e.g. mybox.mydomain.com)</p>
</li>
<li class="P-Bullet2" style="font-size: 8pt;">
<p class="Bullet2" style="font-size: 8pt;">Single address (e.g. 192.168.0.1)</p>
</li>
<li class="P-Bullet2" style="font-size: 8pt;">
<p class="Bullet2" style="font-size: 8pt;">Address range (e.g. 192.168.0.2 - 192.168.0.10)</p>
</li>
<li class="P-Bullet2" style="font-size: 8pt;">
<p class="Bullet2" style="font-size: 8pt;">Abbreviated address range (e.g. 192.168.42-50)</p>
</li>
<li class="P-Bullet2" style="font-size: 8pt;">
<p class="Bullet2" style="font-size: 8pt;">CIDR block (e.g. 192.168.144.0/20)</p>
</li>
<li class="P-Bullet2" style="font-size: 8pt;">
<p class="Bullet2" style="font-size: 8pt;">Comma-separated list of any of the above (e.g. 192.168.0.1, 192.168.0.3)</p>
</li>
</ul>
<p class="NormalTable">In Class C specifications, the network (.0) and broadcast (.255) addresses will be automatically ignored. Equivalent addresses will be ignored in CIDR blocks with a subnet prefix smaller than /31.</p>
<p class="NormalTable">If you are using a discovery script to generate a list of hosts, you need to put a dummy value into this field in order to make the discovery proceed.</p>
</td>
</tr>
</table>
<h2><a name="MiniTOCBookMark15" id="MiniTOCBookMark15"></a>Managing Discovery Methods</h2>
<p>Discovery methods are used to specify the network services that should be probed for on each IP address. During this process, the discovery service iterates through the list of IP addresses that have been associated with the current discovery definition, executes one or more tests against the current address, and then generates one or more lines of output data that catalogs the services that have been discovered. The output data is then subsequently read and analyzed by the automation subsystem, which maps the host and service data to the appropriate Nagios profiles.</p>
<p>Discovery methods can only be associated with a discovery process in the discovery definition editor screen, which has a <span style="font-weight: bold;"><b>Methods</b></span> section similar to the following:</p>
<p class="Caption">Figure: Methods</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_methods.gif" alt="Managing Discovery Methods" title="Managing Discovery Methods" style="border: none;" width="700" height="272" border="0" /></p>
<p>GroundWork Monitor provides two discovery methods by default, both of which are shown in the figure above:</p>
<ul style="list-style: url('../../Shared_Images/bullet01.gif');">
<li class="p-Bullet1">
<p class="Bullet1">The <span style="font-weight: bold;"><b>Nmap TCP</b></span> discovery method is used to probe devices for common TCP/IP network services such as Web and email services.</p>
</li>
<li class="p-Bullet1">
<p class="Bullet1">While the <span style="font-weight: bold;"><b>S</b></span><span style="font-weight: bold;"><b>NMP</b></span> discovery method is used to probe for SNMP management information.</p>
</li>
</ul>
<p>You can modify either of the bundled discovery methods, or you can create your own discovery methods if needed. Multiple discovery method can be assigned to each discovery definition. At least one discovery method must be active in order for a discovery process to execute.</p>
<p><span style="color: #ff0000; font-weight: bold;"><font color="red"><b>Note:</b></font></span> Discovery methods are executed sequentially, and in some cases will only query devices that were discovered by a previous discovery method. For example, in the figure above the <span style="font-weight: bold;"><b>Nmap TCP</b></span> discovery method will be executed before the <span style="font-weight: bold;"><b>SNMP</b></span> discovery method (this relationship is important to the SNMP discovery method, as will be explained later). You cannot currently reorder discovery methods, so they must be created in the order desired.</p>
<h3><a name="MiniTOCBookMark16" id="MiniTOCBookMark16"></a>Create a New Discovery Method</h3>
<ol>
<li class="p-Numbering">
<p class="Numbering">Fill in the fields with appropriate values and click the <span style="font-weight: bold;"><b>Add Method</b></span> button.</p>
</li>
<li class="p">
<p>At this point a discovery method editor screen will be displayed that will allow you to set all of the options and variables associated with the discovery method (the layout of the discovery method editor screen is different for each discovery type).</p>
</li>
<li class="p">
<p>If you want to modify an existing discovery method, click the <span style="font-weight: bold;"><b>Edit Method</b></span> hyperlink next to the discovery method. This will cause the appropriate discovery method editor screen to be loaded with the contents of the selected discovery method.</p>
</li>
</ol>
<p class="Caption">Table: Discovery Method Fields</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Name</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Enter a short name for the discovery method.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Type</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">There are four types of discovery methods available, which are described in more detail below. However, it is important to understand that this field is only used to select the software that actually probes the devices, and additional configuration will be required in a separate screen before the discovery method is fully functional.</p>
<p class="NormalTable">nmap. The "nmap" type is used when you want to have the discovery process probe for TCP or UDP network services on the discovered devices. This is the primary discovery method in GroundWork Monitor, and should be used as the first discovery method in most cases. Note that the nmap utility is sometimes classified as an intrusion tool by some security tools and/or personnel, and you may need to coordinate with other groups before using it.</p>
<p class="NormalTable">SNMP. The "SNMP" type is used when you want to have the discovery process probe for SNMP managementinformation on the discovered devices.</p>
<p class="NormalTable">Script. If you want to create your own probes with your own script commands, use the "Script" type.</p>
<p class="NormalTable">WMI. The "WMI" type is used when you want to import Windows-specific host data into GroundWork Monitor. Note that the WMI data is generated by a separate Windows-based program.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Description</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Enter a brief description of the discovery method.</p>
</td>
</tr>
</table>
<h2><a name="MiniTOCBookMark17" id="MiniTOCBookMark17"></a>Nmap Discovery Method</h2>
<p>The <span style="font-weight: bold;"><b>Nmap</b></span> discovery method uses TCP and UDP connection requests to probe for network services on each discovered device. Whenever a probe succeeds, the discovery method returns a service <span style="font-weight: bold;"><b>match value</b></span> that indicates the service(s) that were discovered, along with host platform identification information (if available). Once all of the probes have completed, the match values will then be subsequently correlated with the appropriate host and service profile(s) for that device by the automation processor.</p>
<p>Multiple nmap service probes can be defined, but they must all be of the same protocol type, and at least one service must be defined.</p>
<p>The figure below shows the discovery method editor for the <span style="font-weight: bold;"><b>Nmap</b></span> type, using the default <span style="font-weight: bold;"><b>Nmap TCP</b></span> discovery method. Also, the options and fields in the nmap discovery method editor screen are shown in the table below (note that different fields will be used for different types of nmap probes).</p>
<p class="Caption">Figure: Discovery Method Nmap TCP</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_methodtcp.gif" alt="Nmap Discovery Method" title="Nmap Discovery Method" style="border: none;" width="700" height="1155" border="0" /></p>
<p class="Caption">Table: Nmap Discovery Method Editor Options and Fields</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Scan Type</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">There are three nmap scan types available, which are as follows:</p>
<p class="NormalTable">TCP SYN Scan. Network services that use TCP require a full synchronization "handshake" before data can be exchanged. With the TCP SYN scan method, nmap generates raw connection request packets for the target service(s), but does not fully complete the handshake procedure. Instead, it only waits to see if the connection request is acknowledged or refused before moving to the next TCP port number in the list. Although this method is very fast, it requires custom packets and as such it is only available when the discovery process is run under an account that has root user privileges (GroundWork Monitor uses the necessary privileges by default).</p>
<p class="NormalTable">TCP Connect Scan. The TCP connect scan method uses standard user-level operating system calls to perform a complete handshake operation with the target TCP service. This method takes longer to successfully determine the results of the connection request, but it works with any user account.</p>
<p class="NormalTable">UDP Scan. The UDP scan method is for detecting UDP based network services. UDP is a stateless transport protocol and does not have a handshake mechanism, so nmap simply looks for data of some kind and assumes that any response activity is from the expected application.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">TCP SNMP Check</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This option determines whether or not a discovered device is also probed with a UDP query to see if SNMP is enabled on the target. If this option is enabled, and if the SNMP discovery method has also been enabled, then only those devices that respond to the UDP query will be probed by the subsequent SNMP discovery method probes. Note that this checkbox is only available when one of the TCP scans have been selected (UDP scans can explicitly probe for SNMP without requiring a separate option).</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">SNMP Match Strings</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">During the TCP scanning process, nmap attempts to identify the host platform and operating system in use on the target device by examining certain characteristics of the TCP protocol handshake, with this information then being recorded in the result data. When this process is successful, the resulting host identifier string can be used as an additional input filter to further limit the number of follow-up SNMP queries. In order to use this option, you must enter a filter string in this field that will match some or all of the device identification strings that you want to use as a limiting filter. Typically, this will be a string such as ”r;cisco” or ”r;hewlett-packard” or some other substring of an nmap host identifier. Multiple strings can be entered but must be separated with a comma. Matches are case-insensitive. Note that this field is only enabled when one of the TCP scans are used (nmap does not have the ability to detect the host operating system with UDP probes, since UDP does not have a handshake).</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Scan Timeout</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This option determines the delay between the connection requests that are generated by nmap. Shorter delay periods result in faster scans, but will also timeout quickly when the local GroundWork Monitor host and the remote systems are separated by a long or slow network path. Aggressive delay periods are also known to set off intrusion alarms. The options for this field are "paranoid," "polite," "normal," "aggressive," and "insane," which range from very slow to very fast in the order presented. The default value is "insane" and will yield the fastest results, but may result in missed probes or security problems on some networks.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Ports</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This section of the nmap discovery method editor screen is used to enumerate the port numbers that should be probed and the "match value" that should be returned when a probe is determined to have succeeded.</p>
<p class="NormalTable">To create a new assignment, enter a port number and a match value to be returned upon success, and click the "Add Port" button. To delete an existing assignment, click the "delete port" hyperlink next to an entry.</p>
</td>
</tr>
</table>
<p>The match value string will be stored in the resulting log file, where it will then be used to correlate service profiles with the host entry. Note that match values are keyed to existing services, service profiles, host profiles and <span style="font-weight: bold;"><b>discover</b></span> values. You are not restricted to these keyed values, though you will be presented with an ordered list of the services, service profiles, host profiles, and discover match values available in your configuration database, or any profiles loaded in the <span class="CodeInline">/usr/local/groundwork/profiles</span> directory on the GroundWork server. The effect of selecting one of the keyed service, service profile, or host profile values is determined by the automation schema used. See the section on Automation for details of editing the schema. The default schema will process these as follows:</p>
<p class="Caption">Table: Match Values and Actions</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">If the match values begins with:</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">The action taken will be:</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">service-&lt;service name&gt;</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Assign the named service to the discovered host.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">service-profile-&lt;service profile name&gt;</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Assign the named service profile to the discovered host.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">host-profile-&lt;host profile name&gt;</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Assign the named host profile to the discovered host.</p>
</td>
</tr>
</table>
<p>The match values will have effect only on subsequent methods. The effect of the different match values is as follows:</p>
<p class="Caption">Table: Match Values and Actions</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">If the match values begins with:</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">The action taken will be:</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">discover-snmp</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Subsequent SNMP methods will be restricted to hosts that match this port signature (as well as those that match the String and UDP scan options described above).</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">discover-script</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">Subsequent script methods will be restricted to hosts that match this port signature.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">discover-wmi</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">No effect. This is reserved for future functions.</p>
</td>
</tr>
</table>
<p>Note that newly created match values will not be useful until the appropriate automation schema definition has also been updated (refer to the Automation Subsystem section for more information on this process).</p>
<p class="Caption">Table: Ranges and Filters</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Ranges and Filters</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This section of the discovery method editor screen allows you to link the discovery method to a specific address range. If a discovery definition will use multiple discovery methods for multiple address ranges, and if the current discovery method is only useful for some of the address ranges, then you may wish to enable a specific address range for this discovery method. However, in those cases where the discovery definition uses all of the defined discovery methods with all of the active address ranges, no address ranges should be explicitly enabled in the discovery method.</p>
</td>
</tr>
</table>
<p>Once the options and fields have been completed to your satisfaction, click the <span style="font-weight: bold;"><b>Save</b></span> button in the upper right to continue. At this point you will be returned to the discovery definition editor screen that you came from. You can also rename or delete the discovery method by clicking on the appropriate button.</p>
<h2><a name="MiniTOCBookMark18" id="MiniTOCBookMark18"></a>SNMP Discovery Method</h2>
<p>The <span style="font-weight: bold;"><b>SNMP</b></span> discovery method uses SNMP queries to see if a device supports the SNMP protocol. If so, additional probes are used to enumerate the network interfaces on that device, with each interface subsequently being assigned an appropriate service profile. If the device does not respond to the SNMP queries, it is ignored.</p>
<p>In addition, devices that respond to SNMP are optionally queried for specific metrics. These metrics are specified outside the user interface in a configuration file, located at <span class="CodeInline">/usr/local/groundwork/core/monarch/automation/conf/snmp_scan_input.cfg</span>.</p>
<p>The format of this file is <span class="CodeInline">OID=matchstring</span> where OID is a numeric SNMP object identifier, and matchstring is an arbitrary string used to map services or service profiles to hosts that are capable of responding to SNMP queries for the specified OID.</p>
<p>This is an advanced option. Configuration requires knowledge of the SNMP MIB on the device to be probed. GroundWork Monitor has several examples supplied in the default file. The necessary schema values required to process these samples are included in the default automation schema for the default discovery definition in GroundWork Monitor.</p>
<p>Note that an SNMP discovery method that is associated with a discovery definition will be used with all of the address ranges associated with the current discovery process. SNMP queries use UDP, which does not provide a handshake mechanism, and therefore requires a timeout interval to detect failure (the default value is 15 seconds). This means that SNMP probes can be very time consuming, especially on large networks.</p>
<p>For this reason, Auto-Discovery allows SNMP discovery methods to be linked to TCP scans, which are much faster. In this arrangement, only those devices that have been successfully discovered with TCP probes are also probed with follow-on SNMP queries (the Nmap TCP method contains a quick UDP scan option for this purpose). Furthermore, administrators can also limit queries to specific types of host platforms, thereby forgoing the need to enumerate the network interfaces on all devices. For more information about this process, refer to the Nmap Discovery Methods section above.</p>
<p>The figure below shows the discovery method editor for the <span style="font-weight: bold;"><b>SNMP</b></span> type, with no preloaded values.</p>
<p><span style="color: #ff0000; font-weight: bold;"><font color="red"><b>Note:</b></font></span> SNMP community strings are not passed from Auto Discovery to Auto Configure since community strings are often security sensitive. It is recommended that custom Auto Discovery mechanisms that need to distinguish between available community strings match against OIDs that are present in one community string but not the other.</p>
<p class="Caption">Figure: Discovery Method SNMP</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_methodsnmp.gif" alt="SNMP Discovery Method" title="SNMP Discovery Method" style="border: none;" width="700" height="506" border="0" /></p>
<p>The options and fields in the SNMP discovery method editor screen are as follows:</p>
<p class="Caption">Table: SNMP Discovery Method Editor Options and Fields</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">SNMP Version</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">The SNMP discovery method supports SNMP versions 1, 2c, and 3. Version 1 of SNMP is the simplest and has the widest support, but also lacks some of the efficiency in version 2c. SNMP version 3 offers the highest security, but is not as widely supported as other versions. By default, the SNMP discovery method uses SNMP version 2c which is the most efficient and has wide support. Version 2c should be used unless you know that your network devices are configured to use version 3.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">SNMP v3</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">The SNMP v3 fields are disabled unless SNMP version 3 is selected. If you use version 3, you will need to provide the authentication information in the SNMP v3 fields.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Community Strings</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This field is disabled unless version 1 or 2 is selected. If you use version 1 or 2, provide one value in the Community Strings field to be used with the lookup queries.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Ranges and Filters</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This section of the discovery method editor screen allows you to link this specific discovery method to a specific address range. If a discovery definition will use multiple discovery methods for multiple address ranges, and if the current discovery method is only useful for some of the address ranges, then you may wish to enable a specific address range for this discovery method. However, in those cases where the discovery definition uses all of the defined discovery methods with all of the active address ranges, no address ranges should be explicitly enabled in the discovery method (they will be included by the discovery definition at run-time instead).</p>
</td>
</tr>
</table>
<p>Once the options and fields have been completed to your satisfaction, click the <span style="font-weight: bold;"><b>Save</b></span> button in the upper right to continue. At this point you will be returned to the discovery definition editor screen that you came from. You can also rename or delete the discovery method by clicking on the appropriate button.</p>
<h2><a name="MiniTOCBookMark19" id="MiniTOCBookMark19"></a>WMI Discovery Method</h2>
<p>The <span style="font-weight: bold;"><b>WMI</b></span> discovery method uses independent scans of the Windows Management Interface to probe Windows devices for their disk, memory, and CPU resources. These scans require a GroundWork Windows Child Server. See the documentation for this optional GroundWork product for details.</p>
<p>The figure below shows the discovery method editor for the <span style="font-weight: bold;"><b>WMI</b></span> type, with no preloaded values:</p>
<p class="Caption">Figure: Discovery Method WMI</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_methodwmi.gif" alt="WMI Discovery Method" title="WMI Discovery Method" style="border: none;" width="700" height="240" border="0" /></p>
<p>The WMI discovery method editor screen only provides one option, which is the WMI Type that should be probed for. There are two WMI scan types available, which are as follows:</p>
<p class="Caption">Table: WMI Discovery Method Editor Options and Fields</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Server</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This scan type loads all discovery output available from GroundWork Windows Child Servers. The Windows Child Server must be independently configured to upload these results to the GroundWork Server.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Proxy</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This option remains unimplemented. Selecting it will have no effect.</p>
</td>
</tr>
</table>
<p><span style="color: #ff0000; font-weight: bold;"><font color="red"><b>Note:</b></font></span> There is no address range management area in the WMI discovery method editor screen, since there is no actual scanning.</p>
<p>Once the options and fields have been completed to your satisfaction, click the <span style="font-weight: bold;"><b>Save</b></span> button in the upper right to continue. At this point you will be returned to the discovery definition editor screen that you came from. You can also rename or delete the discovery method by clicking on the appropriate button.</p>
<h2><a name="MiniTOCBookMark20" id="MiniTOCBookMark20"></a>Script Discovery Method</h2>
<p>The <span style="font-weight: bold;"><b>Script</b></span> discovery method is designed to allow administrators to create their own discovery probes. Although the Auto-Discovery subsystem provides discovery methods that can locate most of the common network services, sometimes an administrator will want to create their own discovery methods. Towards that end, the Script method can be used to look for almost any kind of device characteristic imaginable, with the only requirements being that the Groundwork host is able to execute a command and return the necessary output, and that Nagios is able to use a service definition that appropriately describes the desired resource.</p>
<p>For example, an administrator may want to catalog the hosts that are currently reachable on the network, using a tool such as ping to discover and monitor those hosts, instead of using TCP and SNMP probes to monitor all of the services running on all of the hosts. In this scenario, an administrator could use a simple script that called the ping utility and then generated the necessary output for each IP address, with the result data subsequently being used to associate the correct Nagios host and service profiles with the discovered devices. Once this script was associated with a custom discovery method, the administrator could perform the ping discovery process whenever needed.</p>
<p>By the same token, these same principles can also be used to measure other types of network services, such as discovering devices on AppleTalk or DECnet networks, or discovering local applications that are running on remote hosts, simply by creating the necessary script and mapping the output to the appropriate Nagios profiles.</p>
<p>In order to clarify these points, the script below represents a fully-functional discovery script that uses the Nagios check_icmp utility to ping a target device, looks up hostname data associated with the target, and then generates an appropriately formatted response line based on the discovered data.</p>
<p class="CodeGroup">#!/usr/local/groundwork/bin/perl</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># ping_discovery.pl</p>
<p class="CodeGroup"># v1.0</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># Copyright 2008 GroundWork Open Source, Inc.</p>
<p class="CodeGroup">use strict;</p>
<p class="CodeGroup">use warnings;</p>
<p class="CodeGroup">use Net::hostent;</p>
<p class="CodeGroup">use Socket;</p>
<p class="CodeGroup"># first make sure we got a valid IP address as the first parameter</p>
<p class="CodeGroup">if (! defined $ARGV[0]) {</p>
<p class="CodeGroup">die "Fatal error: input does not include a valid IP address \n";</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup">if ($ARGV[0] !~ /^(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})$/) {</p>
<p class="CodeGroup">die "Fatal error: input does not include a valid IP address \n";</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># predefine all variables</p>
<p class="CodeGroup">my $hostaddr = $ARGV[0];</p>
<p class="CodeGroup">my $ping = "";</p>
<p class="CodeGroup">my $host = "";</p>
<p class="CodeGroup">my $hostname = "";</p>
<p class="CodeGroup">my $hostalias = "";</p>
<p class="CodeGroup">my $hostprofile = "";</p>
<p class="CodeGroup">my $svcprofile = "";</p>
<p class="CodeGroup">my $service = "";</p>
<p class="CodeGroup">my $output = "";</p>
<p class="CodeGroup"># ping the specified IP address and store the results</p>
<p class="CodeGroup">$ping = qx(/usr/local/groundwork/nagios/libexec/check_icmp -H $hostaddr) or die;</p>
<p class="CodeGroup"># if we get an OK or WARNING response, start looking for hostname information</p>
<p class="CodeGroup">if (($ping =~ /^(OK.+)\|/) || ($ping =~ /^(WARNING.+)\|/)) {</p>
<p class="CodeGroup"># clean the test results</p>
<p class="CodeGroup">$ping = $1;</p>
<p class="CodeGroup">chomp ($ping);</p>
<p class="CodeGroup"># see if any hostname information is defined for the host</p>
<p class="CodeGroup">if ($host = gethost($hostaddr)) {</p>
<p class="CodeGroup"># if the hostname is an FQDN, use the short version</p>
<p class="CodeGroup">if ($host-&gt;name =~ /^(\S+?)\./) {</p>
<p class="CodeGroup">$hostname = $1;</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup">else {</p>
<p class="CodeGroup">$hostname = $host-&gt;name;</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># if an alias is defined and is different from the short</p>
<p class="CodeGroup"># hostname, use it</p>
<p class="CodeGroup">if ((@{$host-&gt;aliases}) &amp;&amp; (@{$host-&gt;aliases}[0] ne $hostname)) {</p>
<p class="CodeGroup">$hostalias = @{$host-&gt;aliases}[0];</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># otherwise, if the original hostname is an FQDN, use that</p>
<p class="CodeGroup"># for the alias</p>
<p class="CodeGroup">elsif ($host-&gt;name =~ /^(\S+?)\./) {</p>
<p class="CodeGroup">$hostalias = $host-&gt;name;</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># if all else fails, reuse the hostname for the alias</p>
<p class="CodeGroup">else {</p>
<p class="CodeGroup">$hostalias = $hostname;</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># host does not have a known hostname, so reuse the IP address</p>
<p class="CodeGroup">else {</p>
<p class="CodeGroup">$hostname = $hostaddr;</p>
<p class="CodeGroup">$hostalias = $hostaddr;</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># set the Nagios profile data</p>
<p class="CodeGroup">$hostprofile = "host-profile-service-ping";</p>
<p class="CodeGroup">$svcprofile = "service-ping";</p>
<p class="CodeGroup">$service = "icmp_ping_alive";</p>
<p class="CodeGroup"># generate the appropriate output for the automation schema definition</p>
<p class="CodeGroup"># name;;alias;;address;;description;;parent;;profile;;service profile;;service</p>
<p class="CodeGroup">$output = $hostname . ";;" .</p>
<p class="CodeGroup">$hostalias . ";;" .</p>
<p class="CodeGroup">$hostaddr . ";;" .</p>
<p class="CodeGroup">$ping . ";;" .</p>
<p class="CodeGroup">";;" .</p>
<p class="CodeGroup">$hostprofile . ";;" .</p>
<p class="CodeGroup">$svcprofile . ";;" .</p>
<p class="CodeGroup">$service ;</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># host did not respond to ping, so return empty response data</p>
<p class="CodeGroup"># name;;alias;;address;;description;;parent;;profile;;service profile;;service</p>
<p class="CodeGroup">else {</p>
<p class="CodeGroup">$output = ";;" .</p>
<p class="CodeGroup">";;" .</p>
<p class="CodeGroup">";;" .</p>
<p class="CodeGroup">";;" .</p>
<p class="CodeGroup">";;" .</p>
<p class="CodeGroup">";;" .</p>
<p class="CodeGroup">";;";</p>
<p class="CodeGroup">}</p>
<p class="CodeGroup"># return the output</p>
<p class="CodeGroup">print $output . "\n";</p>
<p class="CodeGroup">exit;</p>
<p>As can be seen, the example script reads the input for an IP address that has been passed to it by Groundwork during the discovery process, and then calls the Nagios <span class="CodeInline">check_icmp</span> command to ping the target address. If the target device responds to any of the probes (as determined by an OK or WARNING command response), then a series of hostname lookups are performed in order to determine the device's name and alias. Finally, the host and service profile attributes are filled in with canned values, and the response data is returned. Meanwhile, devices that did not respond to any of the probes successfully are simply ignored, and a row of empty values are returned.</p>
<p>Note that the example script is intended to be executed separately for each target IP address, with each individual address being passed to the script by GroundWork Monitor according to the address ranges that were registered with the discovery definition.</p>
<p>In order for GroundWork to successfully use the script, the script output must correlate with the field layout defined in the automation schema definition that is associated with the current discovery definition. For example, the script above is intended to be used with the default GroundWork schema definition, which has a pre-defined layout and matching rules. If the default schema definition is used, the output file will contain the same fields as described in the Automation Data Files section below.</p>
<p>In particular, it is crucial that every explicit host record contain a host name and IP address field in order to indicate the specific host that the record applies to, or else the automation processor will infer that the current record is an update to the previous host record and will append or overwrite some of the field data. Similarly, every host that is probed must generate a line of response data in order for the discovery processor to know that the script has performed its task. This may either be a row of completely blank fields (as in the sample script above), or a row that contains the host name and address which indicates that the record data applies to an explicit host. Refer to the discussion in The Automation Process section below for more information about the file layout rules and how the contents of the file are analyzed and used.</p>
<p>Note that the script output is captured by GroundWork and stored in a file in the <span class="CodeInline">/usr/local/groundwork/core/monarch/automation/data</span> directory, with the filename reflecting the name of the discovery definition. The data in the results file will only be processed by the automation subsystem after the discovery process has completed.</p>
<p>Once a script has been created, it must be registered as a discovery method before it can be used.</p>
<p>The figure below shows the discovery method editor for the <span style="font-weight: bold;"><b>Script</b></span> type, with no preloaded values:</p>
<p class="Caption">Figure: Discovery Method Script</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_methodscript.gif" alt="Script Discovery Method" title="Script Discovery Method" style="border: none;" width="700" height="475" border="0" /></p>
<p>The options and fields in the script discovery method editor screen are as follows:</p>
<p class="Caption">Table: Script Method Editor Options and Fields</p>
<table cellspacing="0" width="700">
<col style="width: 25%;" />
<col style="width: 75%;" />
<tr style="vertical-align: top;">
<td style="border: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Script type</p>
</td>
<td style="border-top: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">The only currently supported type is the "Custom" type.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Run Mode</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">The "Run Mode" type determines whether the script is executed for every IP address, or if it is only executed one time during the discovery process. If the "Batch Mode" checkbox is disabled then the script will be executed for every IP address, but if the checkbox is enabled then the script will only be executed one time.</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Command Line</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">You must provide the full path to the command that will be used for the discovery method. The script file must be stored in the <span style="font-style: italic;"><i>/usr/local/groundwork/core/monarch/automation/scripts</i></span> directory, and the <span style="font-style: italic;"><i>nagios</i></span> user account must have sufficient permissions to execute the script.</p>
<p class="NormalTable">Note that you can specify parameters and arguments to the script in this field, either as hard-coded arguments or environment variables that are usually available to the nagios user account. If the script is being executed for each host address, the variables can also refer to Nagios macro definitions such as $HOST$ or $user21$, with these macros being expanded by GroundWork Monitor before they are passed to the command line. However, if the script is being executed in batch mode, the macros are not expanded, and will not be available to the script..</p>
</td>
</tr>
<tr style="vertical-align: top;">
<td style="border-left: Solid 2px #ffffff; border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 25%; padding-right: 10px; padding-left: 10px;" bgcolor="#1B3A83">
<p class="NormalTableBold">Ranges and Filters</p>
</td>
<td style="border-right: Solid 2px #ffffff; border-bottom: Solid 2px #ffffff; width: 75%; padding-right: 10px; padding-left: 10px;" bgcolor="#C0C0C0">
<p class="NormalTable">This section of the discovery method editor screen allows you to link this specific discovery method to a specific address range. If a discovery definition will use multiple discovery methods for multiple address ranges, and if the current discovery method is only useful for some of the address ranges, then you may wish to enable a specific address range for this discovery method. However, in those cases where the discovery definition uses all of the defined discovery methods with all of the active address ranges, no address ranges should be explicitly enabled in the discovery method (they will be included by the discovery definition at run-time instead).</p>
</td>
</tr>
</table>
<p>Once the options and fields have been completed to your satisfaction, click the <span style="font-weight: bold;"><b>Save</b></span> button in the upper right to continue. At this point you will be returned to the discovery definition editor screen that you came from. You can also rename or delete the discovery method by clicking on the appropriate button.</p>
<h2><a name="MiniTOCBookMark21" id="MiniTOCBookMark21"></a>Deleting Discovery Methods</h2>
<p>If you want to delete a discovery method, you must do so from inside the discovery method editor screen.</p>
<ol>
<li class="p-Numbering">
<p class="Numbering">Go to the discovery definition editor screen, and click the <span style="font-weight: bold;"><b>edit method</b></span> hyperlink next to the discovery method that you want to delete.</p>
</li>
<li class="p-Numbering">
<p class="Numbering">Once the discovery method editor screen has loaded, click the <span style="font-weight: bold;"><b>Delete</b></span> button in the upper right corner. You will then be presented with a confirmation box similar to the figure below.</p>
</li>
<li class="p-Numbering">
<p class="Numbering">Click the <span style="font-weight: bold;"><b>Yes</b></span> button to delete the discovery method, or click the <span style="font-weight: bold;"><b>No</b></span> button to cancel and return to the discovery method editor screen.</p>
</li>
</ol>
<p class="Caption">Figure: Delete Discovery Method</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_methoddelete.gif" alt="Deleting Discovery Methods" title="Deleting Discovery Methods" style="border: none;" width="700" height="110" border="0" /></p>
<h2 class="Figure"><a name="MiniTOCBookMark22" id="MiniTOCBookMark22"></a>Running Discovery Processes</h2>
<p>A discovery definition can be executed from either the main discovery console screen or the discovery definition editor screen simply by clicking the <span style="font-weight: bold;"><b>Go&gt;&gt;</b></span> button in the upper right corner. Note that you can change the automation action or enable and disable address range(s) at run-time, and those changes will be incorporated into the selected discovery process when it starts, but all other options can only be changed in the discovery definition editor.</p>
<p>When the discovery process starts, an output file is created in <span class="CodeInline">/usr/local/groundwork/core/monarch/automation/data</span> with a filename that is based on the name of the discovery definition being used. If another instance of the selected discovery process has already been executed but its output data has not yet been fully processed, this file will already exist, and you will be presented with a screen similar to the following. You may choose to discard the previous output and begin a new discovery job, or you may choose to forgo the discovery process and skip directly to the automation process, or you may cancel the request and return to the main discovery console screen.</p>
<p class="Caption">Figure: Discovery Override</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_override.gif" alt="Delete Discovery?" title="Delete Discovery" style="border: none;" width="700" height="118" border="0" /></p>
<p>If you are still proceeding with the discovery execution, you will next be presented with a screen similar to the following, which warns that the discovery operation may trigger intrusion-detection software or set off other kinds of security alarms. Note that you may need to coordinate with network security personnel before conducting these operations in order to avoid undesirable problems that may result from these false alarms. You must acknowledge the warning by activating the <span style="font-weight: bold;"><b>Accept</b></span> toggle and clicking the <span style="font-weight: bold;"><b>Go&gt;&gt;</b></span> button before the discovery operation will proceed.</p>
<p class="Caption">Figure: Discovery Confirm</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_confirm.gif" alt="Start Discovery?" title="Start Discovery" style="border: none;" width="700" height="136" border="0" /></p>
<p>Once the discovery process begins, you will then be presented with a status screen similar to the following. This screen will be updated in real-time as each host is probed. At this point, you will be unable to change any details unless you cancel the current operation and start over. The amount of time required to complete the discovery process will depend on numerous factors, such as the size of the address range(s) and the type of discovery method(s) in use, the network latency between the GroundWork Monitor server and the remote devices, and a variety of other factors. As a general rule of thumb, it takes approximately 10 minutes to scan a small network with the default discovery definition and all of its associated options.</p>
<p class="Caption">Figure: Discovery Process</p>
<p class="Figure"><img src="Assets/The_Discovery_Subsystem/ad_ds_process.gif" alt="Discovery Process" title="Discovery Process" style="border: none;" width="700" height="417" border="0" /></p>
<p>After all of the IP addresses have been probed, the <span style="font-weight: bold;"><b>Next&gt;&gt;</b></span> button will become accessible, and you may then proceed with the automation process that will match the discovered devices to their appropriate host and service profiles and perform any necessary database updates. This subject is discussed in the Automation Subsystem section.</p>
<div style="width: 100%; position: relative;" id="footer">
<p class="Footer" style="font-size: 7pt; line-height: Normal; margin-top: 6pt; margin-bottom: 4pt;">GroundWork, Inc. ©2011</p>
</div>
<script type="text/javascript" language="JavaScript">
//<![CDATA[
 if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape'))
  document.write("<div id='tooltip' class='WebHelpPopupMenu'><\/div>");
//]]>
</script><script type="text/javascript" language="javascript1.2">
//<![CDATA[
<!--
if (window.writeIntopicBar)
        writeIntopicBar(0);


highlightSearch();
//-->
//]]>
</script>
</body>
</html>
