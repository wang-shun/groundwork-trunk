<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 8" />
<title>Creating Remote RRD Graphs</title>
<link rel="StyleSheet" href="../../../../Bookshelf.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function ehlp_showtip(current,e,text)
{
  if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape'))
  {
    document.tooltip.document.write("<layer bgColor='yellow' style='border:1px solid black;font-size:12px;'>"+ text + "<\/layer>");
    document.tooltip.document.close();
    document.tooltip.left=e.pageX+5;
    document.tooltip.top=e.pageY+5;
    document.tooltip.visibility="show";
  }
}
function ehlp_hidetip()
{
  document.tooltip.visibility="hidden";
}
//]]>
</script>
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
        origWidth = innerWidth;
        origHeight = innerHeight;
        onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
/*<![CDATA[*/
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
/*]]>*/
</style>

<script type="text/javascript" language="javascript1.2" src="../../../../whmsg.js">
</script>
<script type="text/javascript" language="javascript" src="../../../../whver.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../../../whproxy.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../../../whutils.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../../../whlang.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../../../../whtopic.js">
</script>
</head>
<body>
<script type="text/javascript" language="javascript1.2">
//<![CDATA[
<!--
if (window.gbWhTopic)
{
        var strUrl = document.location.href;
        var bc = 0;
        var n = strUrl.toLowerCase().indexOf("bc-");
        if(n != -1)
        {
                document.location.href = strUrl.substring(0, n);
                bc = strUrl.substring(n+3);
        }

        if (window.addTocInfo)
        {
        addButton("show",BTN_TEXT,"Show Table of Contents","","","","",0,0,"","","");

        }
        if (window.writeBtnStyle)
                writeBtnStyle();

        if (window.writeIntopicBar)
                writeIntopicBar(1);

        
        

        if (window.setRelStartPage)
        {
        setRelStartPage("../../../../Bookshelf.htm");

                autoSync(0);
                sendSyncInfo();
                sendAveInfoOut();
        }
}
else
        if (window.gbIE4)
                document.location.reload();

//-->
//]]>
</script><script type="text/javascript" language="JavaScript1.2" src="../../../../ehlpdhtm.js">
</script>
<p style="margin-top: 0pt; color: #0000ff; font-size: 7pt;" align="right"><a href="../../../../Welcome_to_GroundWork_Monitor/index.htm" style="color: #0000ff; font-size: 7pt; text-decoration: none;">Home</a> &gt; <a href="../../../usingapplications_aboutusingapplications.htm" style="color: #0000ff; font-size: 7pt; text-decoration: none;">USING APPLICATIONS</a> &gt; <a href="../../configuration_aboutconfiguration.htm" style="color: #0000ff; font-size: 7pt; text-decoration: none;">Configuration</a> &gt; <a href="../configuration_configurationscenarios.htm" style="color: #0000ff; font-size: 7pt; text-decoration: none;">Configuration Scenarios</a>&#160;&gt;&#160;Creating Remote RRD Graphs</p>
<p>&#160;</p>
<h1><a name="MiniTOCBookMark1" id="MiniTOCBookMark1"></a><img src="../../../../Shared_Images/square.gif" alt="square.gif" style="border: none;" width="15" height="15" border="0" /> Configuration Scenarios</h1>
<h3 align="right"><a href="../configuration_configurationscenarios.htm" title="Topic Home" onmouseover="if ((parseInt(navigator.appVersion) == 4) &amp;&amp; (navigator.appName == 'Netscape')) ehlp_showtip(this,event,'Topic Home');" onmouseout="if ((parseInt(navigator.appVersion) == 4) &amp;&amp; (navigator.appName == 'Netscape')) ehlp_hidetip();"><img src="../../../../Shared_Images/homeicon.gif" alt="Topic Home" title="Topic Home" style="border: none;" width="33" height="27" border="0" /></a> <img src="../../../../Shared_Images/printicon.gif" onclick="window.print()" alt="Print Page" title="Print Page" style="border: none;" width="31" height="27" border="0" /> <a href="mailto:support@groundworkopensource.com?subject=Performance Graphs - Creating Remote RRD Graphs" title="Send Comments"><img src="../../../../Shared_Images/commentsicon.gif" alt="Send Comments" title="Send Comments" style="border: none;" width="33" height="27" border="0" /></a></h3>
<h2><a name="MiniTOCBookMark2" id="MiniTOCBookMark2"></a>Creating Remote RRD Graphs</h2>
<p align="left">Table&#160;of&#160;Contents:&#160;<a class="dropspot" href="javascript:TextPopup(this)" id="MTHotSpot43223" name="MTHotSpot43223"><span class="MTText">Show</span><span class="MTText" style="display: none;">Hide</span></a></p>
<script type="text/javascript" language="JavaScript1.2">
//<![CDATA[
TextPopupInit('MTHotSpot43223', 'MTPOPUP43223');
//]]>
</script>
<div align="left" class="droptext" id="MTPOPUP43223" style="display: none;">
<ul style="text-align:left; list-style-type: circle;">
<li><a href="#MiniTOCBookMark3">Background</a></li>
<li><a href="#MiniTOCBookMark4">Requirements</a></li>
<li><a href="#MiniTOCBookMark5">Configuration Steps</a>
<ul style="list-style-type: circle;">
<li><a href="#MiniTOCBookMark6">GroundWork Server</a></li>
<li><a href="#MiniTOCBookMark7">Setup Forwarding of RRD Locations</a></li>
<li><a href="#MiniTOCBookMark8">Set Up Heartbeat Operation</a></li>
<li><a href="#MiniTOCBookMark9">Set Up Forwarding of State Changes and Heartbeats Via Spooler - [Optional]</a></li>
</ul>
</li>
<li><a href="#MiniTOCBookMark10">Considerations</a>
<ul style="list-style-type: circle;">
<li><a href="#MiniTOCBookMark11">perfdata.properties</a></li>
<li><a href="#MiniTOCBookMark12">Encryption</a></li>
</ul>
</li>
<li><a href="#MiniTOCBookMark13">Maintenance</a></li>
<li><a href="#MiniTOCBookMark14">References</a>
<ul style="list-style-type: circle;">
<li><a href="#MiniTOCBookMark15">perfdata.properties</a></li>
</ul>
</li>
</ul>
</div>
<h3><a name="MiniTOCBookMark3" id="MiniTOCBookMark3"></a>Background</h3>
<p><span style="font-style: italic;"><i>GroundWork Monitor</i></span> includes a feature known as the <span style="font-style: italic;"><i>Remote RRD Graph Web Service</i></span> (<span style="font-style: italic;"><i>RRGWS</i></span>). This section describes this web service, its uses, and configuration.</p>
<p>The <span style="font-style: italic;"><i>RRGWS</i></span> was developed to support large configurations spanning multiple <span style="font-style: italic;"><i>GroundWork</i></span> monitoring servers. In large configurations, the volume of data transferred can become an issue. The largest volumes of data are those associated with performance measures, as this information is useful only if collected regularly. Status information, by contrast, is generated only when the state of the object changes. In the context of multiple <span style="font-style: italic;"><i>GroundWork</i></span> servers, we can leverage this dynamic to greatly reduce the data transfers between child (polling) servers and parent systems.</p>
<p class="Caption">Figure: State Changes</p>
<p align="center"><img src="Assets/performance_remoterrd1.gif" alt="performance_remoterrd1.gif" style="border: none;" width="369" height="315" border="0" /></p>
<p>In this scenario, the polling servers are doing all the active checks, and are collecting performance data. When a host or service changes state, this information is forwarded to the <span style="font-style: italic;"><i>GroundWork Monitor</i></span> server, but the results of individual checks that do not contain a state change (the vast majority) are not forwarded. All the performance graphs are created and hosted on the child server, yet the user primarily (or even exclusively) uses the <span style="font-style: italic;"><i>GroundWork</i></span> server to interact with the system. The graphs are displayed from the child server on the <span style="font-style: italic;"><i>GroundWork</i></span> server by means of the <span style="font-style: italic;"><i>RRGWS</i></span>.</p>
<p class="Caption">Figure: Graphs</p>
<p class="Caption" align="center"><img src="Assets/performance_remoterrd2.gif" alt="performance_remoterrd2.gif" style="border: none;" width="600" height="456" border="0" /></p>
<p>This approach entails several components. The child must publish the location of the <span style="font-style: italic;"><i>RRD</i></span> graphs to the <span style="font-style: italic;"><i>GroundWork</i></span> server for display. This is done by configuring the child server to forward the location of the <span style="font-style: italic;"><i>RRDs</i></span>, and the graph commands to the <span style="font-style: italic;"><i>GroundWork</i></span> server.</p>
<p>The <span style="font-style: italic;"><i>GroundWork</i></span> server will similarly be configured, for those services whose graphs are hosted on a child server, to not store the local <span style="font-style: italic;"><i>RRD</i></span> graph commands or path locations. It will store this information only for checks it performs locally, such as the local <span style="font-style: italic;"><i>GroundWork</i></span> server checks. This is done automatically.</p>
<p>The child server must be configured to send only changes of state to the <span style="font-style: italic;"><i>GroundWork</i></span> server. This is done using the state changes detected by the status feeder, and by periodically sending heartbeat messages from the child to the <span style="font-style: italic;"><i>GroundWork</i></span> <span>server</span>, posting the current state of all objects. The heartbeat portion of this operation is expensive, but the interval and rate of transmission can be tuned, so it is deemed acceptable considering the benefit. No one wants to be looking at stale data, so the system should be able to accommodate the trade-off between performance and data age. In any case, state changes will always be forwarded immediately, so critical data will remain up-to-date.</p>
<h3><a name="MiniTOCBookMark4" id="MiniTOCBookMark4"></a>Requirements</h3>
<p>You must have <span style="font-style: italic;"><i>GroundWork Monitor</i></span> set up and operating as a child server, accepting configuration files from a <span style="font-style: italic;"><i>GroundWork</i></span> server. It is helpful to configure the child server to forward results to the <span style="font-style: italic;"><i>GroundWork</i></span> <span>server</span>, as well, although we will not cover this in detail, as the commands are changed.</p>
<p>The child server must be able to contact the <span style="font-style: italic;"><i>GroundWork</i></span> server on the following network ports:</p>
<ul>
<li class="P-Bullet1">
<p class="Bullet1">5667/tcp (for posting results)</p>
</li>
<li class="P-Bullet1">
<p class="Bullet1">4913/tcp (for posting RRD graph locations)</p>
</li>
</ul>
<p>The <span style="font-style: italic;"><i>GroundWork</i></span> server must be able to contact the child server on the following network ports:</p>
<ul>
<li class="P-Bullet1">
<p class="Bullet1">22/tcp (ssh for configuration transfers)</p>
</li>
<li class="P-Bullet1">
<p class="Bullet1">80/tcp or 443/tcp for web services</p>
</li>
</ul>
<h3><a name="MiniTOCBookMark5" id="MiniTOCBookMark5"></a>Configuration Steps</h3>
<h4><a name="MiniTOCBookMark6" id="MiniTOCBookMark6"></a>GroundWork Server</h4>
<p>There is no special configuration to be done on the <span style="font-style: italic;"><i>GroundWork</i></span> server.</p>
<h4><a name="MiniTOCBookMark7" id="MiniTOCBookMark7"></a>Setup Forwarding of RRD Locations</h4>
<p>The child server is configured with the following procedure:</p>
<ol>
<li>
<p class="Numbering">Edit the file:</p>
</li>
</ol>
<p class="GroupCode2">/usr/local/groundwork/config/perfdata.properties</p>
<ol start="2" type="1">
<li>
<p class="Numbering">Un-comment the section:</p>
</li>
</ol>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;"># &#160;&#160;&#160;&lt;foundation_host MYPARENTHOST&gt;</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;"># &#160;&#160;&#160;&#160;&#160;&#160;foundation_port = 4913</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;"># &#160;&#160;&#160;&#160;&#160;&#160;child_host &#160;&#160;&#160;&#160;&#160;= MYHOST</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;"># &#160;&#160;&#160;&#160;&#160;&#160;send_RRD_data &#160;&#160;= true</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;"># &#160;&#160;&#160;&#160;&#160;&#160;send_perf_data &#160;= false</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;"># &#160;&#160;&#160;&lt;/foundation_host&gt;</p>
<p style="margin-left: 40px;">to:</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;">&#160;&#160;&#160;&#160;&#160;&lt;foundation_host MYPARENTHOST&gt;</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foundation_port = 4913</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;child_host &#160;&#160;&#160;&#160;&#160;= <span style="font-weight: bold;"><b>MYCHILDHOST</b></span></p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send_RRD_data &#160;&#160;= true</p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send_perf_data &#160;= <span style="font-weight: bold;"><b>true</b></span></p>
<p class="CodeGroup" style="margin-left: 64px; font-weight: normal;">&#160;&#160;&#160;&#160;&#160;&lt;/foundation_host&gt;</p>
<p style="margin-left: 40px;">where:</p>
<p style="margin-left: 40px;"><span class="CodeInline">MYPARENTHOST</span> is the DNS name of the parent server (must be resolveable from the child server).</p>
<p style="margin-left: 40px;"><span class="CodeInline">MYCHILDHOST</span> is the DNS name of the child server.</p>
<p style="margin-left: 40px;"><span style="font-weight: bold; color: #ff0000;"><font color="red"><b>Note:</b></font></span> This CANNOT be <span class="Code">localhost</span> or <span class="Code">127.0.0.1</span>. It must be resolveable from the parent server.</p>
<p>Optionally, you may decide not to send the <span class="Code">perf_data</span> to the parent. If you send it, this data is posted directly to <span style="font-style: italic;"><i>Foundation</i></span>, and is used in the performance reports under the <span style="font-style: italic;"><i>Reports</i></span> tab. (These are the EPR reports found under <span style="font-weight: bold;"><b>Reports</b></span>&gt;<span style="font-weight: bold;"><b>Report tree</b></span>&gt;<span style="font-weight: bold;"><b>Reports</b></span>&gt;<span style="font-weight: bold;"><b>Performance Reports</b></span>: <span style="font-style: italic;"><i>epr host</i></span>, <span style="font-style: italic;"><i>epr host multi variable</i></span>, <span style="font-style: italic;"><i>epr hostgroup</i></span>, <span style="font-style: italic;"><i>epr hostgroup multi variable</i></span>, and <span style="font-style: italic;"><i>epr hostgroup topfive</i></span>. In contrast, the <span style="font-weight: bold;"><b>Reports</b></span>&gt;<span style="font-weight: bold;"><b>Performance View</b></span> tool does not support the <span style="font-style: italic;"><i>Remote RRD</i></span> configuration, as it relies on direct local access to <span style="font-style: italic;"><i>RRD</i></span> files.) There is a performance load introduced on the parent by sending the detailed <span class="Code">perf_data</span>; however, this is not anticipated to be a large load, since the data is bundled. The advantage is that reports run on the parent will have all performance data from the child. You may also choose to keep the performance data on the child, or not to post it at all.</p>
<p>The recommended configuration is to send the <span class="Code">perf_data</span> to the parent if you have one or two child servers. If you have more than two child servers, you should probably consider another configuration where this data is not sent, as the load on the parent will likely be significant.</p>
<p>To <span style="text-decoration: underline;"><u>not</u></span> send the <span class="Code">perf_data</span> to the parent, change the line in the section above:</p>
<p style="margin-left: 40px;">from</p>
<p style="color: #008000; margin-left: 80px; font-weight: normal;"><span class="Code" style="font-weight: normal;">send_perf_data &#160;&#160;= true</span></p>
<p style="margin-left: 40px;"><span style="code: ;">to</span></p>
<p style="color: #008000; margin-left: 80px; font-weight: normal;"><span class="Code" style="font-weight: normal;">send_perf_data &#160;&#160;=</span> <span class="Code">false</span></p>
<p style="code: ;"><span style="color: #ff0000; font-weight: bold;"><font color="red"><b>Note:</b></font></span> DO NOT remove the following section as it is required for operation. You can, however, choose to set <span class="Code">send_perf_data=false</span> if you do not want the perf data to be sent to <span style="font-style: italic;"><i>Foundation</i></span> on the server on which that data originates.</p>
<p class="CodeGroup" style="margin-left: 64px;"><span><span style="code: ;">&#160;&#160;&#160;&#160;&#160;&lt;foundation_host localhost&gt;</span></span></p>
<p class="CodeGroup" style="margin-left: 64px;"><span><span style="code: ;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foundation_port = 4913</span></span></p>
<p class="CodeGroup" style="margin-left: 64px;"><span><span style="code: ;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;child_host &#160;&#160;&#160;&#160;&#160;= ""</span></span></p>
<p class="CodeGroup" style="margin-left: 64px;"><span><span style="code: ;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send_RRD_data &#160;&#160;= true</span></span></p>
<p class="CodeGroup" style="margin-left: 64px;"><span><span style="code: ;">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send_perf_data &#160;= true</span></span></p>
<p class="CodeGroup" style="margin-left: 64px; code: ;">&#160;&#160;&#160;&#160;&#160;&lt;/foundation_host&gt;</p>
<p><span><span style="code: ;">To have these changes take effect, you can:</span></span></p>
<ol>
<li>
<p class="Numbering"><span><span style="code: ;">Perform a configuration change (build instance for the group for this child server on the <span style="font-style: italic;"><i>GroundWork</i></span> server) or,</span></span></p>
</li>
<li>
<p class="Numbering">Kill the process for the <span class="Code">process_service_perfdata_file</span> program, at the command prompt, type:</p>
</li>
</ol>
<p class="GroupCode2"><span><span style="code: ;">ps -ef | grep process_service_perfdata_file</span></span></p>
<p><span><span style="code: ;">You will see output similar to the following:</span></span></p>
<p class="CodeGroup"><span><span style="code: ;">nagios &#160;&#160;23260 &#160;&#160;&#160;&#160;1 &#160;0 Jun14 ? &#160;&#160;&#160;&#160;&#160;&#160;&#160;00:00:42 /groundwork/perl/bin/.perl.bin -I/usr/local/groundwork/perl/lib/5.8.8 -I/usr/local/groundwork/perl/lib/site_perl/5.8.8 -I/usr/local/groundwork/nagios/libexec -I/usr/local/groundwork/perl/custom/lib/5.8.8 -I/usr/local/groundwork/perl/custom/lib/site_perl/5.8.8 -w -- /usr/local/groundwork/nagios/eventhandlers/process_service_perfdata_file</span></span></p>
<p class="CodeGroup"><span><span style="code: ;">root &#160;&#160;&#160;&#160;28917 &#160;4118 &#160;0 14:06 pts/1 &#160;&#160;&#160;00:00:00 grep process_service_perfdata_file</span></span></p>
<p>In this case, the <span style="font-style: italic;"><i>PID</i></span> is <span class="Code">23260</span> for the process. Kill it by typing:</p>
<p class="CodeGroup"><span><span style="code: ;">kill 23260</span></span></p>
<p><span><span style="code: ;">The process will automatically restart in a few minutes. After approximately 10 minutes, the <span style="font-style: italic;"><i>GroundWork</i></span> server interface will begin to show you graphs generated on the child server.</span></span></p>
<h4><a name="MiniTOCBookMark8" id="MiniTOCBookMark8"></a><span style="code: ;">Set Up Heartbeat Operation</span></h4>
<p><span><span style="code: ;">The child server must be set up to forward periodic updates for all hosts and services. This is done with the following procedure:</span></span></p>
<p><span><span style="code: ;">Edit the file: <span class="CodeInline">/usr/local/groundwork/config/status-feeder.properties</span></span></span></p>
<ol type="1">
<li><span><span style="code: ;">Change the following lines:</span></span></li>
</ol>
<p class="GroupCode2" style="code: ; font-weight: normal;">send_state_changes_by_nsca=false</p>
<p style="margin-left: 40px;"><span><span style="code: ;">to</span></span></p>
<p class="GroupCode2" style="code: ; font-weight: normal;">send_state_changes_by_nsca=<span style="font-weight: bold;"><b>true</b></span></p>
<p class="GroupCode2">&#160;</p>
<p class="GroupCode2" style="code: ; font-weight: normal;">primary_parent=""</p>
<p style="margin-left: 40px;"><span><span style="code: ;">to</span></span></p>
<p class="GroupCode2" style="code: ; font-weight: normal;">primary_parent="<span style="font-weight: bold;"><b>MYPARENTHOST</b></span>"</p>
<p style="margin-left: 40px;">where <span class="CodeInline">MYPARENTHOST</span> is the DNS name of the parent that will be receiving this data. <span style="color: #ff0000; font-weight: bold;"><font color="red"><b>DO NOT</b></font></span> neglect the quotes.</p>
<ol start="2" type="1">
<li><span style="code: ;">Optionally set up any secondary servers by changing the appropriate lines. If you are not using secondary servers, just leave these alone. You do not need to change any of the remaining parameters, but of course, you can tune them to fit your installation.</span></li>
</ol>
<p style="margin-left: 40px;"><span><span style="code: ;">The defaults are:</span></span></p>
<p style="margin-left: 40px;"><span><span style="code: ;">Send heartbeats every hour:</span></span></p>
<p class="GroupCode2"><span><span style="code: ;">nsca_heartbeat_interval = 60 * 60</span></span></p>
<p style="margin-left: 40px;"><span><span style="code: ;">Send full dumps every 8 hours:</span></span></p>
<p class="GroupCode2"><span><span style="code: ;">nsca_full_dump_interval = 8 * 60 * 60</span></span></p>
<p style="margin-left: 40px;"><span><span style="code: ;">Send a maximum of 100 messages at a time:</span></span></p>
<p class="GroupCode2"><span><span style="code: ;">max_messages_per_send_nsca = 100</span></span></p>
<p style="margin-left: 40px;"><span><span style="code: ;">Wait for 2 seconds between batches of results:</span></span></p>
<p class="GroupCode2"><span><span style="code: ;">nsca_batch_delay = 2</span></span></p>
<p style="margin-left: 80px; code: ;">You may want these less frequently (for large configurations) or more frequently. It depends on the bandwidth available, and the load on the <span style="font-style: italic;"><i>GroundWork</i></span> server. You can also elect to send the heartbeat in small batches, rather than the default of 100 results, and to open a larger gap between the batches. Be advised that the feeding of results to the database on the child server will be affected if you make the sending of heartbeats too frequent or too long (with many batches and long batch delays), but you may not be concerned about this, as child servers are often not accessed at all by users.</p>
<ol start="3" type="1">
<li>
<p class="Numbering"><span><span style="code: ;">Save the file when you are finished editing. You will need to restart gwservices on the child server when you are done. This can be done by typing the following command:</span></span></p>
</li>
</ol>
<p class="GroupCode2"><span><span style="code: ;">/etc/init.d/groundwork restart gwservices</span></span></p>
<h4 style="code: ;"><a name="MiniTOCBookMark9" id="MiniTOCBookMark9"></a>Set Up Forwarding of State Changes and Heartbeats Via Spooler - [Optional]</h4>
<p><span><span style="code: ;">The child server can optionally spool results to be forwarded to the parent. This can be useful if, for example, the network link from the child to the parent is intermittent. It also provides a small amount of enhanced reliability for the data transfers.</span></span></p>
<p style="code: ;">The spooler works in the same way as the <span style="font-style: italic;"><i>GDMA</i></span> spooler code. It will keep a programmable number of results for a programable interval, and will transmit the saved results when the parent becomes available after an interval of downtime.</p>
<p style="code: ;">Note that the spooler is actually a separate method of sending results for the <span style="font-style: italic;"><i>NSCA</i></span> method. You probably do not want to use both methods to send results to the same server. You can also send results to one server with <span style="font-style: italic;"><i>NSCA</i></span> and another with the spooler. It's up to you. Generally, though, if you use the spooler, you will be disabling the <span style="font-style: italic;"><i>NSCA</i></span> method.</p>
<p>If you monitor the child server from the parent, you should consider setting up a passive service named <span class="Code">gdma_spooler</span> on the child host. This will show you the spooler statistics. There's no harm if you do not set it up, but it is sometimes useful to know how much data is flowing in from a given child server.</p>
<p style="code: ;">To configure the spooler option, make the following additional changes to the file:</p>
<p class="CodeGroup"><span><span style="code: ;"><span class="Code">/usr/local/groundwork/config/status-feeder.properties</span></span></span></p>
<ol>
<li>
<p class="Numbering"><span><span style="code: ;">Change:</span></span></p>
</li>
</ol>
<p class="GroupCode2" style="code: ; font-weight: normal;">send_state_changes_by_gdma=false</p>
<p style="margin-left: 40px;"><span><span style="code: ;">to:</span></span></p>
<p class="GroupCode2" style="code: ; font-weight: normal;">send_state_changes_by_gdma=<span style="font-weight: bold;"><b>true</b></span></p>
<p style="margin-left: 40px; code: ;">Optionally change the defaults for <span class="Code">gdma_heartbeat_interval</span><span style="font-style: italic;"><i>,</i></span> <span class="Code">gdma_full_dump_interval</span>, and <span class="Code">max_unspooled_results_to_save</span>. These values are explained in the comments, and are analogous to those for the similarly named <span style="font-style: italic;"><i>NSCA</i></span> settings.</p>
<ol start="2">
<li class="P-Numbering">
<p class="Numbering">Next, find the file called <span class="Code">gwmon_HOSTNAME.cfg</span>, in <span class="Code">/usr/local/groundwork/gdma/config</span> where <span class="Code">HOSTNAME</span> is the name of this child server host. Edit this file and change:</p>
</li>
</ol>
<p class="GroupCode2" style="code: ; font-weight: normal;">Spooler_Status=off</p>
<p style="margin-left: 40px;"><span><span style="code: ;">to:</span></span></p>
<p class="GroupCode2" style="code: ; font-weight: normal;">Spooler_Status=<span style="font-weight: bold;"><b>on</b></span></p>
<p style="margin-left: 40px;"><span><span style="code: ;">and</span></span></p>
<p class="GroupCode2" style="code: ; font-weight: normal;">Target_Server="http://gdma-autohost"</p>
<p style="margin-left: 40px;"><span><span style="code: ;">to:</span></span></p>
<p class="GroupCode2" style="code: ; font-weight: normal;">Target_Server="<span style="font-weight: bold;"><b>http://PARENTHOSTNAME</b></span>"</p>
<p style="margin-left: 40px; code: ;">where <span class="CodeInline">PARENTHOSTNAME</span> is the name of the parent host to send to. Note that you can specify more than one, in a comma separated list. The name must be specified as a URL. Be sure to uncomment the <span class="CodeInline">Target_Server</span> line.</p>
<p style="margin-left: 40px;"><span><span style="code: ;">Adjustment of other parameters is optional, and should be done only if necessary. Refer to the <span style="font-style: italic;"><i>GDMA</i></span> documentation for explanations of the parameters in this file that control the spooler.</span></span></p>
<ol start="3">
<li class="P-Numbering">
<p class="Numbering"><span><span style="code: ;">Save the file.</span></span></p>
</li>
<li class="P-Numbering">
<p style="code: ;">Restart <span style="font-style: italic;"><i>gwservices</i></span> on the child to make this configuration active:</p>
</li>
</ol>
<p class="GroupCode2"><span><span style="code: ;">service groundwork restart gwservices</span></span></p>
<h3><a name="MiniTOCBookMark10" id="MiniTOCBookMark10"></a><span><span style="code: ;">Considerations</span></span></h3>
<h4><a name="MiniTOCBookMark11" id="MiniTOCBookMark11"></a><span><span style="code: ;">perfdata.properties</span></span></h4>
<p>The <span class="Code">perfdata.properties</span> file contains a mixture of scalar-value settings and some XML-like sections. It must be edited manually to preserve this structure. It is listed in the <span style="font-weight: bold;"><b>Administration</b></span>&gt;<span style="font-weight: bold;"><b>Foundation</b></span>&gt;<span style="font-weight: bold;"><b>Manage Configuration</b></span> screen as a file that can be edited there, but attempting to do so will effectively destroy the content of this file. A bug report (GWMON-10097) has been filed to remove this filename from the list of edit-able files in this screen.&#160;A copy of the original file is included in the reference section of this document.</p>
<p>Editing of the <span class="Code">perfdata.properties</span> file should be done on the child server, not on the parent server, as it is the child server that needs to know what data to send and where to send it.&#160;&#160;You will need to either do a configuration push to the child (build instance for the child group on the <span style="font-style: italic;"><i>Groundwork</i></span> server), or restart the <span class="Code">process_service_perfdata_file</span> process on the child to have these changes take effect. See above.</p>
<h4><a name="MiniTOCBookMark12" id="MiniTOCBookMark12"></a><span><span style="code: ;">Encryption</span></span></h4>
<p style="code: ;">Using either the <span style="font-style: italic;"><i>NSCA</i></span> or <span style="font-style: italic;"><i>GDMA</i></span> spooler methods makes use of the <span style="font-style: italic;"><i>NSCA</i></span> program, and the <span style="font-style: italic;"><i>Bronx</i></span> event broker. These programs are capable of sending and receiving encrypted data, but are set up by default not to do so. Also, the <span style="font-style: italic;"><i>Bronx</i></span> event broker (which processes the data received at the parent) can support what is known as <span style="font-style: italic;"><i>wide packets</i></span>, or an enhancement to <span style="font-style: italic;"><i>NSCA</i></span> that makes it much faster in high-load configurations. Wide packets support is enabled by default.</p>
<p><span><span style="code: ;">If you set up encryption, you should note that:</span></span></p>
<ul>
<li class="P-Bullet1">
<p class="Bullet1" style="code: ;">Encryption must be the same on the parent and all child servers, as well as any system that sends data to the parent via <span style="font-style: italic;"><i>NSCA</i></span> (for example a <span style="font-style: italic;"><i>GDMA</i></span> system)</p>
</li>
<li class="P-Bullet1">
<p class="Bullet1" style="code: ;">Encryption adds overhead, and may slow down the data transfer process</p>
</li>
<li class="P-Bullet1">
<p class="Bullet1"><span style="code: ;">Encryption is more secure, which can be important in some environments</span></p>
</li>
</ul>
<h3><a name="MiniTOCBookMark13" id="MiniTOCBookMark13"></a><span><span style="code: ;">Maintenance</span></span></h3>
<p style="code: ;">There is no special maintenance for this feature. However, keeping track of performance on the <span style="font-style: italic;"><i>GroundWork</i></span> server is a good idea. If things seem to be slow, it may be a good idea to consider adjusting the heartbeat frequency to a less frequent interval.&#160;If you do so, ensure that any freshness checks on the <span style="font-style: italic;"><i>GroundWork</i></span> server hosts and services are synchronized with this interval. Freshness intervals for passive checks should always be kept longer than the update cycles to avoid false positive results.</p>
<h3><a name="MiniTOCBookMark14" id="MiniTOCBookMark14"></a><span><span style="code: ;">References</span></span></h3>
<h4><a name="MiniTOCBookMark15" id="MiniTOCBookMark15"></a><span><span style="code: ;">perfdata.properties</span></span></h4>
<p><span><span style="code: ;">This is the default file contents (with comments).</span></span></p>
<p class="CodeGroup"><span style="code: ;"># perfdata.properties</span></p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># Copyright 2010 GroundWork Open Source, Inc. ("GroundWork")</p>
<p class="CodeGroup"># All rights reserved. &#160;This program is free software; you can</p>
<p class="CodeGroup"># redistribute it and/or modify it under the terms of the GNU</p>
<p class="CodeGroup"># General Public License version 2 as published by the Free</p>
<p class="CodeGroup"># Software Foundation.</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># This program is distributed in the hope that it will be useful,</p>
<p class="CodeGroup"># but WITHOUT ANY WARRANTY; without even the implied warranty of</p>
<p class="CodeGroup"># MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. &#160;See the</p>
<p class="CodeGroup"># GNU General Public License for more details.</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># You should have received a copy of the GNU General Public License</p>
<p class="CodeGroup"># along with this program; if not, write to the Free Software</p>
<p class="CodeGroup"># Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</p>
<p class="CodeGroup"># 02110-1301, USA.</p>
<p class="CodeGroup">######################################################################</p>
<p class="CodeGroup">## GroundWork Performance Data Processing Configuration Properties</p>
<p class="CodeGroup">######################################################################</p>
<p class="CodeGroup"># The values specified here are used to control the behavior of the</p>
<p class="CodeGroup"># process_service_perfdata_file script.</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Possible debug_level values:</p>
<p class="CodeGroup"># 0 = no info of any kind printed, except for startup/shutdown</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;messages and major errors</p>
<p class="CodeGroup"># 1 = print just error info and summary statistical data</p>
<p class="CodeGroup"># 2 = also print basic debug info</p>
<p class="CodeGroup"># 3 = print detailed debug info</p>
<p class="CodeGroup">debug_level = 1</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Create and update RRD files. &#160;[true/false]</p>
<p class="CodeGroup">process_rrd_updates = true</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Use the newer XML web-service API to post performance data to the</p>
<p class="CodeGroup"># Foundation databases configured below. &#160;Highly recommended, for</p>
<p class="CodeGroup"># efficiency. &#160;[true/false]</p>
<p class="CodeGroup">post_performance_using_xml = true</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># How many performance data updates to bundle together in a single</p>
<p class="CodeGroup"># message to Foundation, when the XML web-service API is used. &#160;This</p>
<p class="CodeGroup"># is a loose limit; it is only checked after adding all the data for</p>
<p class="CodeGroup"># a {host, service}, which might contain multiple performance values.</p>
<p class="CodeGroup">max_performance_xml_bundle_size = 20</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># A limit on the number of items sent to Foundation in a single</p>
<p class="CodeGroup"># packet.</p>
<p class="CodeGroup">max_bulk_send = 200</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Timeout, specified in seconds, if the older HTTP API is used</p>
<p class="CodeGroup"># to post performance data to the Foundation database.</p>
<p class="CodeGroup">foundation_http_submission_timeout = 2</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Timeout, specified in seconds, to address GWMON-7407.</p>
<p class="CodeGroup"># The usual value is 30; set to 0 to disable.</p>
<p class="CodeGroup">socket_send_timeout = 30</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Specify whether to use a shared library to implement RRD file</p>
<p class="CodeGroup"># access, or to fork an external process for such work (the legacy</p>
<p class="CodeGroup"># implementation). &#160;Set to true (recommended) for high performance,</p>
<p class="CodeGroup"># to false only as an emergency fallback or for special purposes.</p>
<p class="CodeGroup"># [true/false]</p>
<p class="CodeGroup">use_shared_rrd_module_for_create = true</p>
<p class="CodeGroup">use_shared_rrd_module_for_update = true</p>
<p class="CodeGroup">use_shared_rrd_module_for_info &#160;&#160;= true</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Where the rrdtool binary lives.</p>
<p class="CodeGroup">rrdtool = /usr/local/groundwork/common/bin/rrdtool</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># What file to read for results to be processed. &#160;This file path is</p>
<p class="CodeGroup"># now defined by the launch_perf_data_processing script, so it cannot</p>
<p class="CodeGroup"># be changed here arbitrarily.</p>
<p class="CodeGroup">service_perfdata_file = /usr/local/groundwork/nagios/var/service-perfdata.dat.being_processed</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Where the log file is to be written.</p>
<p class="CodeGroup">debuglog = /usr/local/groundwork/nagios/var/log/process_service_perfdata_file.log</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># The wait time between cycles of the process_service_perfdata_file</p>
<p class="CodeGroup"># script, which runs as a daemon. &#160;Specified in seconds.</p>
<p class="CodeGroup">loop_wait_time = 15</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Whether to emit a log message to Foundation at the end of every processing</p>
<p class="CodeGroup"># cycle where errors or warnings were detected. &#160;This is disabled by default</p>
<p class="CodeGroup"># because it can generate a large number of messages when the setup is broken.</p>
<p class="CodeGroup"># But it can be valuable to provide very visible notice that processing problems</p>
<p class="CodeGroup"># are occurring, so you know to look in the debug log for details. &#160;[true/false]</p>
<p class="CodeGroup">emit_status_message = false</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># Specify whether to log messages that tell exactly what the script is doing</p>
<p class="CodeGroup"># at the moment that a termination signal is received. &#160;We don't enable</p>
<p class="CodeGroup"># these messages by default because logging i/o routines are not necessarily</p>
<p class="CodeGroup"># re-entrant, which could cause difficulties. &#160;But the messages can be enabled</p>
<p class="CodeGroup"># during troubleshooting trials to identify which areas of the script need</p>
<p class="CodeGroup"># improvement in the speed of handling termination signals. &#160;[true/false]</p>
<p class="CodeGroup">spill_current_action = false</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup"># This section contains the configuration for all access to Foundation</p>
<p class="CodeGroup"># databases. &#160;It must include one group of lines for the Foundation</p>
<p class="CodeGroup"># associated with this server (with the child_host value set to an</p>
<p class="CodeGroup"># empty string). &#160;Additional groups of lines are needed for parent</p>
<p class="CodeGroup"># servers if you want RRD graphs generated on this child server</p>
<p class="CodeGroup"># (where the process_service_perfdata_file script is running) to be</p>
<p class="CodeGroup"># integrated into Status Viewer on a parent server, or if you want</p>
<p class="CodeGroup"># EPR reports to be created on a server.</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># The foundation_host value, specified inside the angle-brackets, is</p>
<p class="CodeGroup"># a qualified or unqualified hostname, or IP address, for a network</p>
<p class="CodeGroup"># interface on which the Foundation of the respective standalone,</p>
<p class="CodeGroup"># child, parent, parent-standby, or report server can be accessed.</p>
<p class="CodeGroup"># Substitute for MYPARENTHOST or MYSTANDBYHOST in the lines below</p>
<p class="CodeGroup"># as needed. &#160;The foundation_port is the port number on that network</p>
<p class="CodeGroup"># interface through which Foundation can be contacted.</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># The child_host value is a qualified or unqualified hostname, or</p>
<p class="CodeGroup"># IP address, of the machine on which the performance data handling</p>
<p class="CodeGroup"># script (process_service_perfdata_file) is running, as seen by that</p>
<p class="CodeGroup"># particular Foundation server. &#160;The specified value must not be</p>
<p class="CodeGroup"># 127.0.0.1 or localhost, and it may be different for access from</p>
<p class="CodeGroup"># different Foundation servers (substitute for MYHOST in the lines</p>
<p class="CodeGroup"># below as needed). &#160;This value must be left empty for the child</p>
<p class="CodeGroup"># (or standalone) server's own Foundation.</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># The send_RRD_data value [true/false] specifies whether this</p>
<p class="CodeGroup"># Foundation should receive information about RRD graphs.</p>
<p class="CodeGroup"># If child_host is empty, this information will include details</p>
<p class="CodeGroup"># on RRD filenames and graph commands, so graphs can be directly</p>
<p class="CodeGroup"># generated as needed. &#160;If child_host is non-empty, this information</p>
<p class="CodeGroup"># will instead include just the child_host value, so this copy of</p>
<p class="CodeGroup"># Foundation will know where to reach to obtain the graph.</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># The send_perf_data value [true/false] specifies whether this</p>
<p class="CodeGroup"># Foundation should receive a copy of the detailed performance data.</p>
<p class="CodeGroup"># It should be enabled if and only if this Foundation may be used to</p>
<p class="CodeGroup"># produce EPR reports.</p>
<p class="CodeGroup">#</p>
<p class="CodeGroup"># Lines in this section may be commented out with a leading "#"</p>
<p class="CodeGroup"># character. &#160;Uncomment and customize groups of lines here as needed.</p>
<p class="CodeGroup">&lt;foundation&gt;</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;# Local Foundation. &#160;It is not a parent server for this data,</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;# so the child_host is set to an empty string to distinguish</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;# this case. &#160;send_RRD_data must be true for this entry.</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;&lt;foundation_host localhost&gt;</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;foundation_port = 4913</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;child_host &#160;&#160;&#160;&#160;&#160;= ""</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send_RRD_data &#160;&#160;= true</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;send_perf_data &#160;= true</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;&lt;/foundation_host&gt;</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;# Parent-server Foundation, if any.</p>
<p class="CodeGroup"># &#160;&#160;&#160;&lt;foundation_host MYPARENTHOST&gt;</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;foundation_port = 4913</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;child_host &#160;&#160;&#160;&#160;&#160;= "MYHOST"</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;send_RRD_data &#160;&#160;= true</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;send_perf_data &#160;= false</p>
<p class="CodeGroup"># &#160;&#160;&#160;&lt;/foundation_host&gt;</p>
<p class="CodeGroup">&#160;</p>
<p class="CodeGroup">&#160;&#160;&#160;&#160;# Parent-standby-server Foundation, if any.</p>
<p class="CodeGroup"># &#160;&#160;&#160;&lt;foundation_host MYSTANDBYHOST&gt;</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;foundation_port = 4913</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;child_host &#160;&#160;&#160;&#160;&#160;= "MYHOST"</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;send_RRD_data &#160;&#160;= true</p>
<p class="CodeGroup"># &#160;&#160;&#160;&#160;&#160;&#160;send_perf_data &#160;= false</p>
<p class="CodeGroup"># &#160;&#160;&#160;&lt;/foundation_host&gt;</p>
<p class="CodeGroup">&lt;/foundation&gt;</p>
<div style="width: 100%; position: relative;" id="footer">
<p class="Footer" style="font-size: 7pt; line-height: Normal; margin-top: 6pt; margin-bottom: 4pt;">GroundWork, Inc. ©2011</p>
</div>
<script type="text/javascript" language="JavaScript">
//<![CDATA[
 if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == 'Netscape'))
  document.write("<div id='tooltip' class='WebHelpPopupMenu'><\/div>");
//]]>
</script><script type="text/javascript" language="javascript1.2">
//<![CDATA[
<!--
if (window.writeIntopicBar)
        writeIntopicBar(0);


highlightSearch();
//-->
//]]>
</script>
</body>
</html>
