<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0014)about:internet -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="generator" content="Adobe RoboHelp 8" />
<title>Monitoring Concepts</title>
<link rel="StyleSheet" href="../Bookshelf.css" type="text/css" />
<script type="text/javascript" language="JavaScript">
//<![CDATA[
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
        origWidth = innerWidth;
        origHeight = innerHeight;
        onresize = reDo;
}
onerror = null; 
//]]>
</script>
<style type="text/css">
/*<![CDATA[*/
<!--
div.WebHelpPopupMenu { position:absolute;
left:0px;
top:0px;
z-index:4;
visibility:hidden; }
-->
/*]]>*/
</style>

<script type="text/javascript" language="javascript1.2" src="../whmsg.js">
</script>
<script type="text/javascript" language="javascript" src="../whver.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../whlang.js">
</script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js">
</script>
</head>
<body>
<script type="text/javascript" language="javascript1.2">
//<![CDATA[
<!--
if (window.gbWhTopic)
{
        var strUrl = document.location.href;
        var bc = 0;
        var n = strUrl.toLowerCase().indexOf("bc-");
        if(n != -1)
        {
                document.location.href = strUrl.substring(0, n);
                bc = strUrl.substring(n+3);
        }

        if (window.addTocInfo)
        {
        addButton("show",BTN_TEXT,"Show Table of Contents","","","","",0,0,"","","");

        }
        if (window.writeBtnStyle)
                writeBtnStyle();

        if (window.writeIntopicBar)
                writeIntopicBar(1);

        
        

        if (window.setRelStartPage)
        {
        setRelStartPage("../Bookshelf.htm");

                autoSync(0);
                sendSyncInfo();
                sendAveInfoOut();
        }
}
else
        if (window.gbIE4)
                document.location.reload();

//-->
//]]>
</script><script type="text/javascript" language="JavaScript1.2" src="../ehlpdhtm.js">
</script><script type="text/javascript" language="javascript">
//<![CDATA[
document.write("<p  style=\"text-align:right;color:#0000ff;font-family:Arial;font-size:7pt;font-weight: normal;font-style: normal;text-decoration: none;\">");
AddMasterBreadcrumbs("../Bookshelf.htm", "color:#0000ff;font-family:Arial;font-size:7pt;font-weight: normal;font-style: normal;text-decoration: none;", "&gt;", "Home", "index.htm");
document.write("Monitoring Concepts<\/p>");
//]]>
</script>
<p>&#160;</p>
<h1><a name="MiniTOCBookMark1" id="MiniTOCBookMark1"></a><img src="../Shared_Images/square.gif" alt="square.gif" style="border: none;" width="15" height="15" border="0" /> Welcome to GroundWork Monitor 6.6</h1>
<h3 align="right"><a href="index.htm"><img src="../Shared_Images/homeicon.gif" alt="homeicon.gif" style="border: none;" width="33" height="27" border="0" /></a> <img src="../Shared_Images/printicon.gif" onclick="window.print()" alt="Print Page" title="Print Page" style="border: none;" width="31" height="27" border="0" /> <a href="mailto:support@groundworkopensource.com?subject=Monitoring Concepts" title="Send Comments"><img src="../Shared_Images/commentsicon.gif" alt="commentsicon.gif" style="border: none;" width="33" height="27" border="0" /></a></h3>
<h2><a name="MiniTOCBookMark2" id="MiniTOCBookMark2"></a>Monitoring concepts</h2>
<p align="left">Table&#160;of&#160;Contents:&#160;<a class="dropspot" href="javascript:TextPopup(this)" id="MTHotSpot41358" name="MTHotSpot41358"><span class="MTText">Show</span><span class="MTText" style="display: none;">Hide</span></a></p>
<script type="text/javascript" language="JavaScript1.2">
//<![CDATA[
TextPopupInit('MTHotSpot41358', 'MTPOPUP41358');
//]]>
</script>
<div align="left" class="droptext" id="MTPOPUP41358" style="display: none;">
<ul style="text-align:left; list-style-type: circle;">
<li><a href="#MiniTOCBookMark3">Monitoring Process</a></li>
<li><a href="#MiniTOCBookMark4">GroundWork Architecture</a></li>
<li><a href="#MiniTOCBookMark5">Key Definitions and Concepts</a></li>
</ul>
</div>
<h3><a name="MiniTOCBookMark3" id="MiniTOCBookMark3"></a>Monitoring Process</h3>
<p>The diagram below displays the basic monitoring process.</p>
<p>The MONITORING ENGINE shown in the center of the diagram, has four functions:</p>
<ul style="list-style: url('../Shared_Images/bullet01.gif');">
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">The scheduler, which schedules and runs monitors.</p>
</li>
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">The alarm engine, which generates alarms on problems.</p>
</li>
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">The location where Notifications and Escalations are managed.</p>
</li>
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">Area where Reports are generated.</p>
</li>
</ul>
<p style="font-weight: normal;">The DATA INPUT to the Monitoring Engine comes from Plugins and Agents which run from a command line to check the status of a Host or Service. The Monitoring Engine CONTROL INPUT comes from configuration files (directives that affect how Nagios operates) and from command line (external applications) data input. The CONTROL OUTPUT uses Event Handlers which run during Host or Service events to trigger other system actions for proactive problem resolution. Then, based on the Service check and Host check logic, Notifications are sent as DATA OUTPUT to get resolved via email, pager, or user-defined methods. In addition to Notifications, output can also be in the form of Reports, and Dashboards.</p>
<p class="Caption"><span style="font-weight: normal;">Figure: Monitoring Process</span></p>
<p class="Figure"><img src="Assets/welcome_monitoringprocess.gif" alt="Monitoring Process" title="Monitoring Process" style="border: none; margin-top: 5px; margin-bottom: 5px; margin-left: 0px; margin-right: 0px;" width="500" height="267" border="0" /></p>
<h3><a name="MiniTOCBookMark4" id="MiniTOCBookMark4"></a>GroundWork Architecture</h3>
<p>GroundWork's integrated open source architecture includes three tiers of functionality. This architecture is completely open and extensible for developers seeking to incorporate additional data sources or build presentation layer applications, views, and reports.</p>
<ul style="list-style: url('../Shared_Images/bullet01.gif');">
<li class="p-Bullet1smallspace" style="font-weight: bold;">
<p class="Bullet1smallspace">Presentation Tier - AJAX PHP Framework</p>
</li>
</ul>
<p class="NormalIndentBullet1">And the Presentation tier features a PHP Framework as GroundWork's Web user interface, which displays data needed by Operators and managers to monitor and manage their IT infrastructure. Data is presented via status screens, performance graphs, an event console, reports and dashboards.</p>
<ul style="list-style: url('../Shared_Images/bullet01.gif');">
<li class="p-Bullet1smallspace" style="font-weight: bold;">
<p class="Bullet1smallspace">Service Tier - GroundWork Foundation</p>
</li>
</ul>
<p class="NormalIndentBullet1">This tier features GroundWork Foundation which normalizes and stores IT monitoring and management data (from the Monitor Data Collector) in a database. This tier includes application programming interfaces (APIs) and Web Services for writing presentation layer applications and views.</p>
<ul style="list-style: url('../Shared_Images/bullet01.gif');">
<li class="p-Bullet1" style="font-weight: bold;">
<p class="Bullet1">Monitor Data Collection Tier - Open Source Tools, Add Ons, Applications Integration</p>
</li>
</ul>
<p class="NormalIndentBullet1">This component extracts data from IT monitoring and management tools such as Nagios, Syslog-NG, SNMPTT and third-party commercial monitoring systems, and prepares messages for delivery to GroundWork Foundation. The Application Integration component is an abstraction for the inclusion of arbitrary 3rd party applications.</p>
<p class="Caption">Figure: GroundWork Monitor Architecture</p>
<p class="Figure"><img src="Assets/welcome_gwmarchitecture.gif" alt="GroundWork Monitor Architecture" title="GroundWork Monitor Architecture" style="border: none;" width="700" height="447" border="0" /></p>
<h3><a name="MiniTOCBookMark5" id="MiniTOCBookMark5"></a>Key Definitions and Concepts</h3>
<p>Here we'll discuss some key definitions and concepts used in the monitoring environment.</p>
<p><span style="font-weight: bold;"><b>Hosts</b></span> - An element (physical server, workstation, network device, etc.) for which the availability status is to be tracked or mapped.</p>
<p><span style="font-weight: bold;"><b>Services</b></span> - A monitor, of a particular parameter or status, associated with a Host. This can be an actual Service that runs on the Host (POP, SMTP, HTTP, etc.) or some other type of metric associated with the Host (response to a ping, number of logged in users, etc.).</p>
<p><span style="font-weight: bold;"><b>Host Groups</b></span> - An arbitrary collection of Hosts into named sets. The uses for Host Groups include access control, drawing layering, status displays, Notifications, scheduling maintenance, multi-server commands, and reports. A simple example of Host Groups might be collections of Hosts based on their physical location, e.g. london, newyork, and sanfrancisco. Grouping Hosts in this way would allow for staff responsible for just one location to display those Hosts. A key concept is that Hosts can belong to one or more Host Groups and must be a member of at least one Host Group.</p>
<p>Of particular importance is the use of Host Groups for controlling Notifications and Escalations. Usually it is groups of Hosts, and not individual Hosts, that Administrators are responsible for. Defining the Host Groups for which Notifications will be sent to a particular collection of Administrators is more efficient than to do so for individual Hosts and Services. Escalations can be configured against the same Host Groups.</p>
<p><span style="font-weight: bold;"><b>Plugins</b></span> - External (to Nagios) programs that are executed whenever there is a need to check a Host or Service that is being monitored.</p>
<p><span style="font-weight: bold;"><b>Flapping</b></span> - Flapping occurs when a Host or Service changes state too frequently, resulting in a storm of problem and recovery Notifications. Flapping can be indicative of configuration problems (i.e. thresholds set too low) or real network problems.</p>
<p><span style="font-weight: bold;"><b>Notifications</b></span> - Communications to contacts or contact groups about the status of a monitored element. Notifications can be configured for circumstances including any hard state change, if a Host or Service remains in a non-OK state, and for acknowledgments.</p>
<p><span style="font-weight: bold;"><b>Event Handlers</b></span> - Event handlers are optional commands that are executed whenever a Host or Service state change occurs. An obvious use for Event Handlers (especially with Services) is the ability for Nagios to pro actively fix problems before anyone is notified. Another potential use for Event Handlers might be to log Service or Host events to an external database.</p>
<p><span style="font-weight: bold;"><b>Time Periods</b></span> - A time period definition identifies a list of times during various days that are considered to be valid times for Notifications and Service checks.</p>
<p><span style="font-weight: bold;"><b>Commands</b></span> - Commands that can be defined and executed by Nagios include Host and Service checks, Host and Service Notifications, and Host and Service event handlers. Command definitions can contain Macros which enable the usage of generic commands to be easier.</p>
<p><span style="font-weight: bold;"><b>Contacts</b></span> - Contacts are defined and used to identify someone who should be contacted in the event of a problem on your network. Contact Groups are one or more Contacts grouped together for the purpose of sending out alert/recovery Notifications. All Contacts in a Contact Group are notified upon a Host or Service problem or recovery.</p>
<p><span style="font-weight: bold;"><b>Profiles</b></span> - A Profile is a collection of multiple Services or Hosts. Configuration uses device-specific Profiles that contain both pre-defined and user-definable monitoring parameter settings. Using Profiles, Administrators can quickly configure GroundWork Monitor to monitor groups of similar devices and benefit from GroundWork's deep expertise in monitoring design recommended practices.</p>
<p><span style="font-weight: bold;"><b>Dependencies</b></span> - When a monitored item is not on the same subnet as the monitoring server, monitoring is dependent upon the intervening switches and routers. GroundWork's standard dependency relationships include:</p>
<ul style="list-style: url('../Shared_Images/bullet01.gif');">
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">Monitoring on upstream switches and routers</p>
</li>
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">Status of Services on Hosts</p>
</li>
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">Availability of port based monitoring agents</p>
</li>
</ul>
<p><span style="font-weight: bold;"><b>State and State Changes</b></span> - In order to prevent false alarms, Nagios allows you to define how many times a Host or a Service check will be retried before the Host or Service is considered to have a real problem. The maximum number of retries before a Host or Service check is considered to have a real problem is controlled by the &lt;max_check_attempts&gt; option in the Host and Service definitions, respectively. What attempt a Host or Service check is currently on determines what type of state it is in.</p>
<p>State types are used to determine when Event Handlers are executed and when Notifications are sent out. The current state of Services and Hosts is determined by two components: 1) The status of a Host or Service. Host status can be UP, DOWN, UNREACHABLE, or PENDING. Service status can be OK, WARNING, CRITICAL, UNKNOWN, or PENDING, and 2) The type of state it is in. There are two state types in Nagios: 1) Soft states, and 2) Hard states.</p>
<p><span style="font-weight: bold;"><b>Notifications</b></span> - Communications to Contacts or Contact Groups about the status of a monitored element. Notifications can be configured for circumstances including any hard state change, if a Host or Service remains in a non-OK state, and for acknowledgments.</p>
<p><span style="font-weight: bold;"><b>Monitoring GUIs</b></span> - Various CGIs are distributed with Nagios. By default the CGIs require that you have authenticated to the web server and are authorized to view any information. You will need to set up the web interface and CGI authorization. GroundWork Monitor has a replacement for the entire Nagios web interface called, Status. Status provides the complete status of all Hosts and Services that are being monitored. Status is a user-friendly way of peering into Nagios data for troubleshooting and problem resolution.</p>
<p><span style="font-weight: bold;"><b>Basic Authentication</b></span> - A Username and Password are required for access to GroundWork Monitor. They are independent of the operating system's login accounts and unique to the monitoring system. The system is role-based and the login ID determines which applications a user has access. An authenticated user is someone who has authenticated to the GroundWork web based framework using either local authentication or LDAP based authentication. The web based framework supports a single sign on capability for both system access and access to the underlying Nagios GUIs. User IDs are configured by the Administrator.</p>
<p><span style="font-weight: bold;"><b>Notification Alarm Message Format</b></span> - In the text below you can see the format for a Notification alarm. The Host and Service are displayed along with the IP Address. The state is clearly displayed: here it is Critical. The date and time of the alarm, any additional information, and a link to the location where the Operator can acknowledge the alarm are also included. Notification commands are typically found in <span class="Code">/usr/local/groundwork/nagios/etc/misccommands.cfg</span>. This file can be edited to change the content of the notification. Following is an example of a Service email notification;</p>
<p class="CodeGroup">Service: myapp_url_port Host: myapp Address: 10.0.0.10 State: CRITICAL</p>
<p class="CodeGroup">Date/Time: Tue Aug 6 3:54:07 PDT 2006</p>
<p class="CodeGroup">Additional Info: Socket timeout after 10 seconds</p>
<p><span style="font-weight: bold;"><b>Downtime or Maintenance</b></span> - Nagios allows you to schedule periods of planned downtime for Hosts and Services that you are monitoring. This is useful in the event that you actually know you're going to be taking a server down for an upgrade, etc. When a Host and Service is in a period of scheduled downtime, Notifications for that Host or Service will be suppressed. Why use scheduled downtime?</p>
<ul style="list-style: url('../Shared_Images/bullet01.gif');">
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">Avoids alarm fatigue</p>
</li>
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">Provides more accurate reports</p>
</li>
<li class="p-Bullet1smallspace">
<p class="Bullet1smallspace">Reinforces change control discipline</p>
</li>
</ul>
<div style="width: 100%; position: relative;" id="footer">
<p class="Footer" style="font-size: 7pt; line-height: Normal; margin-top: 6pt; margin-bottom: 4pt;">GroundWork, Inc. ©2011</p>
</div>
<script type="text/javascript" language="javascript1.2">
//<![CDATA[
<!--
if (window.writeIntopicBar)
        writeIntopicBar(0);


highlightSearch();
//-->
//]]>
</script>
</body>
</html>
