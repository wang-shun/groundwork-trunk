<?xml version='1.0' encoding='utf-8' ?>
<!-- saved from url=(0014)about:internet -->
<glossarydata>
 <entry name="Service Dependencies" value="Service Dependencies allow you to suppress Notifications and active checks of Services  based on the status of one or more other Services." />
 <entry name="Service Extended Info" value="Service Extended Info Templates are basically used to make the output from the status and extinfo CGIs look good. They have no effect on monitoring and are completely  optional." />
 <entry name="Service Externals" value="The Externals feature enables you to add your own configuration data that is not related to Nagios but can be useful when integrating other tools. When Externals are enabled, you can add this data to Host and Service Profiles, which can then be applied to instantiated Host and Service definitions." />
 <entry name="Service Groups" value="A Service Group definition is used to group one or more Services together for the  purposes of simplifying Notifications. When a Service goes down, becomes unreachable,  or recovers, Nagios will find which Service Group(s)) the Service is a member of,  get the Contact Group for each of those Service Groups, and notify all Contacts associated with those Contact Groups." />
 <entry name="Service Templates" value="A Service Template is useful when you have common attributes for multiple Services. A Service Template incorporates multiple Service detail directives and Service Check definitions." />
 <entry name="Services" value="A monitor, of a particular parameter or status, associated with a Host. This can  be an actual Service that runs on the Host (POP, SMTP, HTTP, etc.) or some other  type of metric associated with the Host (response to a ping, number of logged in  users, etc.)." />
 <entry name="SNMP Trap Adapter" value="When the snmptt daemon needs to pass a converted trap message to the GroundWork Foundation event database, it passes the output to the Foundation network listener on TCP port 4913 on the loopback interface (127.0.0.1), and flags the data as an SNMPTRAP event with an appropriate severity level. In turn, the SNMPTRAP Foundation adapter examines the data and adds the event to the GroundWork Foundation LogMessage database table." />
 <entry name="SNMP Trap Listener" value="GroundWork Monitor incorporates the full Net-SNMP software package, including the snmptrapd daemon that monitors for incoming trap messages on UDP port 162. snmptrapd is enabled by default, and will be automatically started after installation." />
 <entry name="SNMP Trap Translator" value="The raw form of an SNMP trap message uses an opaque binary syntax that is not directly usable by GroundWork Monitor or Nagios. For that reason, GroundWork Monitor relies on the open source SNMP Trap Translator (SNMPTT) package to convert the raw SNMP traps into structured textual messages that can be manipulated more easily." />
 <entry name="SNMP Traps" value="All editions of GroundWork Monitor offer direct support for SNMP polling, while commercial  editions of GroundWork Monitor have additional support for SNMP traps.    In simple terms, SNMP polling allows GroundWork Monitor to query network devices  for common operational statistics such as memory usage and network traffic levels,  while SNMP traps allow the network devices to unilaterally notify GroundWork Monitor  of critical events whenever they occur." />
 <entry name="SNMPTT" value="GroundWork Monitor Professional uses SNMP trap translator (SNMPTT) to parse incoming SNMP traps and format them in a human readable fashion for display in alarms and the web interface.  It also allows for customizing the severities of each trap based on customer requirements." />
 <entry name="State and State Changes" value="In order to prevent false alarms, Nagios allows you to define how many times a Host or a Service check will be retried before the Host or Service is considered to have a real problem. The maximum number of retries before a Host or Service check is considered to have a real problem is controlled by the &lt;max_check_attempts&gt; option in the Host and Service definitions, respectively. What attempt a Host or Service check is currently on determines what type of state it is in." />
 <entry name="Status" value="GroundWork Monitor application. A user Interface for monitoring network data." />
 <entry name="Sub Pages" value="A Portal object. Just like a Portal Instance can contain several Pages, a Page can  contain several Sub Pages, and Windows." />
 <entry name="Subscription Modes" value="Describes the required tasks for registering a user. By default the subscription  modes are set to automatic (no email validation, no admin approval)." />
 <entry name="SYSLOGNG" value="SYSLOGNG, as the name shows, is a syslogd replacement, but with new functionality for the new generation. The original syslogd allows messages only to be sorted based on priority/facility pairs; syslog-ng adds the possibility to filter based on message contents using regular expressions. The new configuration scheme is intuitive and powerful. Forwarding logs over TCP and remembering all forwarding hops makes it ideal for firewalled environments.    GroundWork Monitor Professional uses syslog-ng to parse incoming syslog messages from remote systems. Syslog-ng is used to suppress uninteresting messages and pass critical messages directly into Nagios and into the Foundation database for alarming and reporting." />
 <entry name="Time Periods" value="Defines a list of times during various days that are considered to be valid times for notifications and service checks. Time Period definitions are used in Host and Service Templates, Profiles, and Contacts." />
 <entry name="Tools" value="Application option to access MIB Validator, Profiles Tools, and Monitoring Server." />
 <entry name="User Management" value="User Management Portlet page. Enables access to user related actions." />
 <entry name="Users" value="Users are defined GroundWork Monitor system users. User attributes such as username, account status, and password are managed in Administration Once a User (e.g. matt) is established it needs to be added to a Role (e.g. Users). A role is then associated with applications or portal pages (e.g. Status,  Event Console)." />
 <entry name="Web Services API" value="The Web Services framework is able to scale and distribute the API more easily, than the previous API, which results in higher throughput and therefore better overall performance of large installations. The Advanced Reporting feature uses the Foundation Web Service API to access data stored in the Foundation persistent store." />

</glossarydata>
