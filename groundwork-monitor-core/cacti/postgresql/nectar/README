The Cacti "nectar" 0.35a plugin has now been ported by GroundWork to
support the PostgreSQL database in addition to its prior support for
the MySQL database.  It is now a built-in part of GroundWork Monitor,
starting with the 7.1.1 release.

================================================================

Documentation
-------------

Useful documentation on the "nectar" plugin is somewhat sparse. 
You should start with the advice on the plugin's official page, here:

    http://docs.cacti.net/plugin:nectar

Here is practical advice for setting up and using this plugin under
GroundWork Monitor:

(1) Go to the Cacti plugins page:  Advanced > Network Graphing > Plugin
    Management.

(2) Install and Enable the "Nectar" plugin by clicking on the blue-arrow
    button for that plugin, then the green-arrow button for that plugin. 
    A new blue "nectar" tab will show up at the top of the Cacti screen
    once the plugin is enabled.

(3) Read the Installation instructions found in the
    /usr/local/groundwork/cacti/htdocs/plugins/nectar/GROUNDWORK_NOTES
    file, and complete the installation of the plugin using those notes.

    NOTE:  It will be necessary to run the steps in the GROUNDWORK_NOTES
    file again after any subsequent upgrade to a newer release of
    GroundWork Monitor.

(4) Go to User Management > {user name} > Realm Permissions, and verify
    that you have given access to "Plugin -> Nectar Reports Admin"
    and/or "Plugin -> Nectar Reports User" to the users who will be
    operating this plugin.  If you make a change, Save it.  Admin access
    encompasses everything allowed by User access, along with the ability
    to access the "nectar" tab.  It's not clear what the utility of just
    User access is, since with just that level of permission, one cannot
    access anything under the "nectar" tab.

(5) Click on the "nectar" tab.  On the right side of the screen, click on
    "Add", then fill in the Details for the report you desire.  For the
    moment, leave the "Enable Report" checkbox unchecked.  When you're
    done with all the other choices, click the Create button at the
    bottom of the page.

(6) Click on the "Items" tab.  On the right side of the screen, click on
    "Add", then make your desired selections and click the Save button
    at the bottom of the page.

(7) Click on the "Preview" tab, to see what a sample email would look
    like.  Adjust the Detail and Items to your taste.

(8) On the right side of the screen, click on "Send Report".  This will
    generate and send an email, as configured.  You should see "Nectar
    Report 'My Sample Report' Sent Successfully" at the top of the screen.
    If you see an error message (such as "Problems sending Nectar Report
    'My Sample Report'."), you will need to debug the problem by adjusting
    either your report settings or some system issue.

(9) Click on the "Events" tab.  If you don't like the set of scheduled
    events, go back and edit the "Next Timestamp for Sending Mail Report"
    field under Details, and Save.  Check again under the Events tab.

(10) If you want this report to be sent out automatically on the schedule
    you see under the "Events" tab, go back under the "Details" tab,
    check the "Enable Report" checkbox, and Save.

(11) You can experiment with the other on-screen configuration data for
    email reports.  We won't describe any of that further here.

(12) That's the extent of this plugin.

================================================================

The files in this directory are currently:

README
    The file you are now reading.

cacti_htdocs_plugins_nectar-0.35a.tar.gz
    The Cacti "nectar" plugin code, version 0.35a, including the
    GroundWork changes to allow use with PostgreSQL.  Created by
    running the following command against a system with the ported
    plugin installed:

	tar cvfz cacti_htdocs_plugins_nectar-0.35a.tar.gz \
	    -C /usr/local/groundwork cacti/htdocs/plugins/nectar

    This tarball can be used with any PostgreSQL-based GroundWork release
    before 7.1.1.

dump_cacti_nectar_plugin_tables
    Script to generate nectar_tables_for_migration_to_postgresql.sql.tar.gz
    from a PostgreSQL-based system with the Cacti "nectar" plugin available
    and installed.

make_nectar_plugin_porting_patches
    A script to generate the nectar-0.35a-patch-for-postgres9.tar.gz
    tarball from the original plugin files and our ported files.

nectar-0.35a-patch-for-postgres9.tar.gz
    The patches to port the 0.35a version of the "nectar" plugin code
    to also work with a PostgreSQL-based Cacti distribution, as created
    by the make_nectar_plugin_porting_patches script.  Our build
    process uses this file.

nectar_tables_for_migration_to_postgresql.sql.tar.gz
    This file is to be used in migrating data from a MySQL-based Cacti
    to a PostgreSQL-based Cacti.  It creates the two tables needed by
    the "nectar" plugin, but does not populate them.  The tables are
    then ready to receive data during the migration process.  See the
    instructions below.

plugin:nectar-v0.35a.tgz
    The official Cacti "nectar" plugin code, version 0.35a.  This version
    works only with a MySQL-based Cacti installation.  Our build process
    uses this file.

================================================================

Porting notes
-------------

The PostgreSQL port of the Cacti "nectar" plugin makes one critical
change to the plugin_nectar table, by necessity.  The MySQL version
of this table contains a plugin_nectar.offset column.  Trouble is,
"offset" is a reserved word in PostgreSQL, and to use it as a column name
requires that it be double-quoted everywhere it is used, to prevent its
interpretation as a keyword.  That is highly problematic in a stack
of code that assumes you don't have to quote column names.  So in
the PostgreSQL version of this table, we have renamed this column to
"start_offset", and adjusted the plugin code to match.

The software operates just fine this way, but that might potentially
make for an incompatibility during a conversion from MySQL to PostgreSQL.
Fortunately, the GroundWork Monitor migration scripts that copy data from
MySQL to PostgreSQL depend only on the column structure in the source
and target tables, and not on the specific column names.  So no mismatch
between the two sides will be detected, and the migration will succeed
without any need to rename columns on one side to match the other for
the duration of the data copying.

================================================================

Upgrading a MySQL-based GroundWork release using the "nectar" plugin
--------------------------------------------------------------------

If a customer was using the "nectar" plugin in a MySQL-based Cacti
and now wants to migrate to the PostgreSQL-based Cacti in our recent
GroundWork Monitor releases, some extra steps are needed to make sure
that empty versions of the two "cacti"-database tables used by the
"nectar" plugin are available on the PostgreSQL side to receive
data during the migration process.  The following extra steps must be
run at the very beginning of the "MySQL to PostgreSQL Data Migration"
section in the "Installing or Upgrading to GroundWork Monitor X.X.X"
document you are using.

Before running the "master_migration_to_pg.pl" script in this section,
download the nectar_tables_for_migration_to_postgresql.sql.tar.gz
file from GroundWork and place it into the /tmp directory.  Then run
these commands to add the necessary tables to the "cacti" database:

    cd /tmp
    tar xvfz nectar_tables_for_migration_to_postgresql.sql.tar.gz

    /usr/local/groundwork/postgresql/bin/psql -U postgres -d cacti \
	-f /tmp/nectar_tables_for_migration_to_postgresql.sql

You might need to take similar steps at this point to also create
empty Cacti tables for other plugins (e.g., "aggregate" and "realtime")
that GroundWork has historically not bundled with Cacti.

You may then proceed with the rest of the "MySQL to PostgreSQL Data
Migration" section, as documented.

================================================================

Installing the "nectar" plugin on older GroundWork releases
-----------------------------------------------------------

NOTE:  If you were upgrading from a MySQL-based release, first take the
steps in the previous section during the migration process.  Once the
GroundWork system is fully up and running, come back here and take these
steps to complete the process.

To install the "nectar" plugin on a PostgreSQL-based GroundWork release
before 7.1.1, download this one file from GroundWork and place it into
the /tmp directory:

    cacti_htdocs_plugins_nectar-0.35a.tar.gz

Then run the following commands:

    su nagios
    cd /usr/local/groundwork
    tar xvfz /tmp/cacti_htdocs_plugins_nectar-0.35a.tar.gz
    exit

The "Nectar" plugin should now appear in the "Plugin Management" section
of the Cacti screens.  Be sure to follow the Documentation steps above
to complete the installation, including the instructions found in the
GROUNDWORK_NOTES file.

NOTE:  It will be necessary to run the steps in the GROUNDWORK_NOTES
file again after any subsequent upgrade to a newer release of GroundWork
Monitor.

NOTE:  In older GroundWork releases (before 7.0.2 SP01), support for
the REQUEST_URI parameter is broken (see GWMON-11724 and GWMON-9191).
This affects the nectar plugin, making it impossible to observe and
edit the Details for a report.  That can be remedied by means of the
following fixup to one file:

% diff -c plugins/nectar/setup.php.orig plugins/nectar/setup.php
*** plugins/nectar/setup.php.orig	Mon Dec  5 11:59:26 2011
--- plugins/nectar/setup.php	Sun Sep 11 15:48:55 2016
***************
*** 66,71 ****
--- 66,80 ----
  
  define("NECTAR_DEFAULT_MAX_SIZE", 10485760);
  
+ // Begin REQUEST_URI fix
+ if (!isset($_SERVER['REQUEST_URI']))
+ {
+ $_SERVER['REQUEST_URI'] = substr($_SERVER['PHP_SELF'],1 );
+ if (isset($_SERVER['QUERY_STRING']) AND $_SERVER['QUERY_STRING'] != "")
+     { $_SERVER['REQUEST_URI'] .= '?'.$_SERVER['QUERY_STRING']; }
+ }
+ // End REQUEST_URI fix
+ 
  function plugin_nectar_install () {
  	# graph setup all arrays needed for automation
  	api_plugin_register_hook('nectar', 'config_arrays',         'nectar_config_arrays',         'setup.php');

