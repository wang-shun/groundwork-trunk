##########GROUNDWORK#############################################################################################
#GW
#GW	misccommands.cfg generated 2017-09-07 15:50:42 by admin from monarch.cgi nagios v 3.x
#GW
##########GROUNDWORK#############################################################################################

# 'host-notify-by-email' command definition
define command {
	command_name			host-notify-by-email
	command_line			/usr/bin/printf "%b" "GroundWork Host Status Notification:\n\nType:        $NOTIFICATIONTYPE$\nHost:        $HOSTNAME$ ($HOSTADDRESS$)\nHost State:  $HOSTSTATE$\nHost Info:   $HOSTOUTPUT$\nTime:        $LONGDATETIME$\nHost Notes:  `echo '$HOSTNOTES$' | sed 's/<br>/\\n/g'`\n" | /usr/local/groundwork/common/bin/mail -s "[GW] $NOTIFICATIONTYPE$ alert: $HOSTNAME$ is $HOSTSTATE$" $CONTACTEMAIL$
}

# 'host-notify-by-epager' command definition
define command {
	command_name			host-notify-by-epager
	command_line			/usr/bin/printf "%b" "Host $HOSTNAME$ is $HOSTSTATE$\nInfo: $HOSTOUTPUT$\nTime: $LONGDATETIME$\n" | /usr/local/groundwork/common/bin/mail -s "$NOTIFICATIONTYPE$ alert: $HOSTNAME$ is $HOSTSTATE$" $CONTACTPAGER$
}

# 'host-notify-by-noma' command definition
define command {
	command_name			host-notify-by-noma
	command_line			/usr/local/groundwork/noma/notifier/alert_via_noma.pl -c h -s "$HOSTSTATE$" -H "$HOSTNAME$" -G "$HOSTGROUPNAMES$" -n "$NOTIFICATIONTYPE$" -i "$HOSTADDRESS$" -o "$HOSTOUTPUT$" -t "$TIMET$" -u "$$(( $HOSTPROBLEMID$ ? $HOSTPROBLEMID$ : $LASTHOSTPROBLEMID$ ))" -A "$NOTIFICATIONAUTHORALIAS$" -C "$NOTIFICATIONCOMMENT$" -R "$NOTIFICATIONRECIPIENTS$"
}


define command {
	command_name			host-notify-by-sendemail
	command_line			/usr/bin/printf "%b" "<html>\n<table width='auto' style='background-color: #E6DBC3"\;" min-width: 350px'>\n<caption style='font-weight: bold"\;" background-color: #B39962'><b>GroundWork Host<br>$NOTIFICATIONTYPE$ Notification</b></caption>\n<tr>\n<td style='background-color: #CCB98F'>Host:</td>\n<td><b><a href='http://$USER32$/portal-statusviewer/urlmap?host=$HOSTNAME$'>$HOSTNAME$</a> ($HOSTADDRESS$)</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Host State:</td>\n<td style='background-color: #F3EDE1'><b>$HOSTSTATE$</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Host Info:</td>\n<td><b>$HOSTOUTPUT$</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Time:</td>\n<td><b>$LONGDATETIME$</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Host Notes:</td>\n<td><b>`echo '$HOSTNOTES$' | sed 's/<br>/\\n/g'`</b></td>\n</tr>\n</table>\n</html>\n" | /usr/local/groundwork/common/bin/sendEmail -s $USER13$ -q -f $ADMINEMAIL$ -t $CONTACTEMAIL$ -u "[GW] $NOTIFICATIONTYPE$ alert: $HOSTNAME$ is $HOSTSTATE$"
}


define command {
	command_name			launch_perfdata_process
	command_line			$USER2$/launch_perf_data_processing
}


define command {
	command_name			process_service_perfdata_db
	command_line			$USER2$/process_service_perf_db.pl "$LASTSERVICECHECK$" "$HOSTNAME$" "$SERVICEDESC$" "$SERVICEOUTPUT$" "$SERVICEPERFDATA$"
}

# 'notify-by-email' command definition
define command {
	command_name			service-notify-by-email
	command_line			/usr/bin/printf "%b" "GroundWork Service Status Notification:\n\nType:           $NOTIFICATIONTYPE$\nHost:           $HOSTNAME$ ($HOSTADDRESS$)\nHost State:     $HOSTSTATE$\nService:        $SERVICEDESC$\nService State:  $SERVICESTATE$\nService Info:   $SERVICEOUTPUT$\nTime:           $LONGDATETIME$\nService Notes:  `echo '$SERVICENOTES$' | sed 's/<br>/\\n/g'`\n" | /usr/local/groundwork/common/bin/mail -s "[GW] $NOTIFICATIONTYPE$ alert: $HOSTNAME$/$SERVICEDESC$ is $SERVICESTATE$" $CONTACTEMAIL$
}

# 'notify-by-epager' command definition
define command {
	command_name			service-notify-by-epager
	command_line			/usr/bin/printf "%b" "Host $HOSTNAME$ is $HOSTSTATE$\nService $SERVICEDESC$ is $SERVICESTATE$\nInfo: $SERVICEOUTPUT$\nTime: $LONGDATETIME$\n" | /usr/local/groundwork/common/bin/mail -s "$NOTIFICATIONTYPE$ alert: $HOSTNAME$/$SERVICEDESC$ is $SERVICESTATE$" $CONTACTPAGER$
}

# 'service-notify-by-noma' command definition
define command {
	command_name			service-notify-by-noma
	command_line			/usr/local/groundwork/noma/notifier/alert_via_noma.pl -c s -s "$SERVICESTATE$" -H "$HOSTNAME$" -G "$HOSTGROUPNAMES$" -E "$SERVICEGROUPNAMES$" -S "$SERVICEDESC$" -o "$SERVICEOUTPUT$" -n "$NOTIFICATIONTYPE$" -a "$HOSTALIAS$" -i "$HOSTADDRESS$" -t "$TIMET$" -u "$$(( $SERVICEPROBLEMID$ ? $SERVICEPROBLEMID$ : $LASTSERVICEPROBLEMID$ ))" -A "$NOTIFICATIONAUTHORALIAS$" -C "$NOTIFICATIONCOMMENT$" -R "$NOTIFICATIONRECIPIENTS$"
}


define command {
	command_name			service-notify-by-sendemail
	command_line			/usr/bin/printf "%b" "<html>\n<table width='auto' style='background-color: #E6DBC3"\;" min-width: 350px'>\n<caption style='font-weight: bold"\;" background-color: #B39962'>GroundWork Service<br>$NOTIFICATIONTYPE$ Notification</caption>\n<tr>\n<td style='background-color: #CCB98F'>Host:</td>\n<td><b><a href='http://$USER32$/portal-statusviewer/urlmap?host=$HOSTNAME$'>$HOSTNAME$</a> ($HOSTADDRESS$)</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Host State:</td>\n<td><b>$HOSTSTATE$</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Service:</td>\n<td><b><a href='http://$USER32$/portal-statusviewer/urlmap?host=$HOSTNAME$&service=$SERVICEDESC$'>$SERVICEDESC$</a></b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Service State:</td>\n<td style='background-color: #F3EDE1'><b>$SERVICESTATE$</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Service Info:</td>\n<td><b>$SERVICEOUTPUT$</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Time:</td>\n<td><b>$LONGDATETIME$</b></td>\n</tr>\n<tr>\n<td style='background-color: #CCB98F'>Service Notes:</td>\n<td><b>`echo '$SERVICENOTES$' | sed 's/<br>/\\n/g'`</b></td>\n</tr>\n</table>\n</html>\n" | /usr/local/groundwork/common/bin/sendEmail -s $USER13$ -q -f $ADMINEMAIL$ -t $CONTACTEMAIL$ -u "[GW] $NOTIFICATIONTYPE$ alert: $HOSTNAME$/$SERVICEDESC$ is $SERVICESTATE$"
}
