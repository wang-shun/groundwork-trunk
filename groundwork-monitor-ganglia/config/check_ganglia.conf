# Configuration file for the check_ganglia.pl script.

#######################################################
#
#   General Program Execution Options
#
#######################################################

# Process Ganglia XML streams?  If not, just sleep forever.
# This option is turned off (the value "no", but without quotes) in the default
# configuration file simply so the script can be safely installed before it is
# locally configured.  To get the software to run, it must be turned on here
# (the value "yes", but without quotes) once the rest of the setup is correct
# for your site.
enable_processing = no

# Auto-flush the logging output.
#  no = normal processing, for efficiency
# yes = autoflush the log output on every single write, for debugging mysterious failures
autoflush_log_output = no

# Global Debug Level Flag;  No debug = 0, Statistics = 5, Normal debug = 6,
#                           Detail debug = 7 (gmond XML and metric attribute parsing)
# More precisely, specify one of the following numbers:
# NONE    = 0; turn off all debug info
# FATAL   = 1; the application is about to die
# ERROR   = 2; the application has found a serious problem, but will attempt to recover
# WARNING = 3; the application has found an anomaly, but will try to handle it
# NOTICE  = 4; the application wants to inform you of a significant event
# STATS   = 5; the application wants to log statistical data for later analysis
# INFO    = 6; the application wants to log a potentially interesting event
# DEBUG   = 7; the application wants to log detailed debugging data
debug_level = 5

# Send to Nagios?
# [yes/no]
send_to_nagios = yes

# Send updates to the database and Nagios even when the state does not change?
# (If not, update in any case on the next iteration after maximum_service_non_update_time.)
# [yes/no]
send_updates_even_when_state_is_persistent = no

# Avoid sending updates to the database and Nagios when the state is not changing?
# (Even if so, send them in any case on the next iteration after maximum_service_non_update_time.)
# [yes/no]
suppress_most_updates_for_persistent_non_okay_states = yes

# Absolute pathname of the Nagios command pipe.
nagios_cmd_pipe = "/usr/local/groundwork/nagios/var/spool/nagios.cmd"

# Consolidate metric results?
#  no = send individual metric results
# yes = send all metric results as a single service
consolidate_metrics = yes

# Service name used for consolidated metrics.
consolidate_metrics_service_name = "ganglia"

# Detail for metric service output.
# [yes/no]; yes = show more detail, no = low detail
consolidate_metrics_service_output_detail = yes

# How to group writes of service results to Nagios.
#  no = send all results in a single write
# yes = send to Nagios after each service result
send_after_each_service = no

# How to select the part of a hostname to report out, if the host is not an IP address.
# This pattern must include exactly one part enclosed in parentheses.
# If you don't want any hostname stripping, set this pattern to "".
# For example, to strip the full domain, and only use an unqualified name, use:
# short_hostname_pattern = "(\S+?)\."
short_hostname_pattern = ""

# What external package to call to process custom metrics.
# Set to an empty string if you have no such external package.
# If you don't know what these are, set this to "".
custom_metrics_package = ""

# Output a warning if the host has rebooted since the last reporting cycle?
output_reboot_warning = yes

# Set to the number of seconds to continue to report a reboot warning, if $output_reboot_warning is set.
# Anything shorter than the value for cycle_time (below) is effectively equal to zero.
# Simple arithmetic (e.g., 5*60) is allowed in this expression.
output_reboot_warning_duration = 10*60

# Output the mem_free_percent calculated metric?
output_mem_free_percent = no

# Output the mem_cached_percent calculated metric?
output_mem_cached_percent = no

# Output the swap_free_percent calculated metric?
output_swap_free_percent = yes

# Output the time since Ganglia received an update for each host?
output_time_since_last_update = yes

#######################################################
#
#   Performance Throttling Parameters
#
#######################################################

# Time interval for each ganglia poll, in seconds.
# Standard period is 5 minutes.
# Simple arithmetic (e.g., 5*60) is allowed in this expression.
cycle_time = 5*60

# Maximum time interval in seconds between service checks sent to Nagios.
# That is, we will always send a service check result to Nagios on the next
# iteration after this time period has elapsed.
# Simple arithmetic (e.g., 15*60) is allowed in this expression.
maximum_service_non_update_time = 10*60

# Maximum number of state changes that will be sent for each write to Nagios.
# If the number of outstanding state changes is greater than this, check_ganglia
# will wait for throttle_state_change_threshold_wait seconds before sending the
# remaining messages.
throttle_state_change_threshold = 500

# When throttle_state_change_threshold is exceeded, time in seconds to wait
# before sending the remaining state change message buffer.
# Simple arithmetic (e.g., 2*60) is allowed in this expression.
throttle_state_change_threshold_wait = 6

# The number of slots to pre-allocate for queueing Nagios service messages
# before they are sent to the command pipe.  This number should be a little
# more than the total number of hosts in your grid.
initial_bulk_messages_size = 15000

# The number of slots to pre-allocate for queueing metric-instance update rows before
# they are sent to the database.  This number should be a little more than the total
# number of metrics you expect to process in each cycle.  Bear in mind that you will
# typically have configured at least several metrics to be thresholded per host.
initial_metric_values_size = 100000

# The maximum number of metric value rows you want to have updated in one database
# statement.  For efficient updates, it should be at least several thousand.
max_bulk_update_rows = 5000

# The maximum time in seconds to wait for any single write to the output command pipe
# to complete.
max_command_pipe_wait_time = 3*60

# The maximum size in bytes for any single write operation to the output command pipe.
# The value chosen here must be no larger than PIPE_BUF (getconf -a | fgrep PIPE_BUF)
# on your platform, unless you have an absolute guarantee that no other process will
# ever write to the command pipe.
max_command_pipe_write_size = 4096

# Send a check_ganglia service check result at the end of each polling cycle?
# [yes/no]
send_check_ganglia_service_check = yes

#######################################################
#
#   Ganglia Parameters
#
#######################################################

# Where to talk to the Ganglia gmond to fetch node-state data.
# Default gmond port is 8649.
GANGLIA_GMOND_PORT = 8649

# Where to talk to the Ganglia gmetad to fetch node-state data.
# Default gmetad port is 8651.
GANGLIA_GMETAD_PORT = 8651

# List of Ganglia gmond or gmetad hosts to query.
# For convenience, to disable a given entry you need only comment out
# its port definition, not the entire <host ...></host> block.
# You may also refer to symbols defined above, like $GANGLIA_GMOND_PORT,
# to document your choices.
<ganglia_hosts>

    <host localhost>
	port = $GANGLIA_GMOND_PORT
    </host>
    <host mygmetadhost>
	# port = $GANGLIA_GMETAD_PORT
    </host>
    <host 192.168.1.99>
	# port = 8648
    </host>

</ganglia_hosts>

# Clusters to monitor.
# Define as many as you need, on separate lines; enclose each value in "double quotes".
# If you define some ganglia_cluster values here, only the clusters listed will be monitored.
# If you don't define any ganglia_cluster values, then all clusters will be monitored.
# Examples:
# ganglia_cluster = "GroundWork Cluster 002"
# ganglia_cluster = "GroundWork Compute Farm"
ganglia_cluster = "GroundWork Cluster 001"

# Ganglia thresholds database connection parameters.
# ganglia_dbtype can be either "mysql" or "postgresql".
ganglia_dbtype = "postgresql"
ganglia_dbhost = "localhost"
ganglia_dbname = "ganglia"
ganglia_dbuser = "ganglia"
ganglia_dbpass = "gwrk"

#######################################################
#
#   Foundation Options (used if send_to_foundation=yes)
#
#######################################################

# Send host/service status updates to Foundation?
# [yes/no]
send_to_foundation = no

# This monitoring server name; used as update content (message source).
this_server = "localhost"

# Where to connect to Foundation to send the updates.
# Usual foundation_port is 4913.
foundation_host = "localhost"
foundation_port = 4913
