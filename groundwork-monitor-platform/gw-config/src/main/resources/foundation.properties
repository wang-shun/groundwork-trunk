#Copyright (C) 2004-2007  GroundWork Open Source Solutions info@groundworkopensource.com
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of version 2 of the GNU General Public License
#    as published by the Free Software Foundation and reprinted below;
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program; if not, write to the Free Software
#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
# Settings for the GroundWork adapters which are a part of the
# Feeder framework.
# The adapters defined in the list will be loaded when the listener
# starts.

# When updating the state of an entity, if this flag is set to true and we
# encounter a PropertyType name that has not been defined in the metadata, the
# PropertyType is automatically created and assigned; otherwise the system
# complains and fails the status update. 
# Unless you know for a fact that this flag should be set to 'true', you should
# probably use the default 'false' value.
org.groundwork.collage.AutoCreateUnknownProperties = false

###############################################################################
# Settings for the Listener service (service.properties)
###############################################################################

# Settings for port listener receiving XML fragements
default.listener.port = 4913

# Main Listening Thread settings
# Timeout of no input in seconds before a listener thread is removed
# Note:  This timeout period indicates that if the client has not posted anything to the
# socket by the timeout specified we release the listening thread and close the socket.
# Clients should create connections, use them and then close them
thread.timeout.idle = 10

# Main Listening Thread - Core Thread Pool Size - Typically, configure based on number of feeders
thread.executor.core.pool.size = 5

# Accepting maximum number of requests before giving higher priority to thread running adapters
max.request.size = 1800

#Time to wait before accepting new requests when max size is reached
throttle.request.wait  = 2

#Block size to read from Socket default 64k
block.read.size  = 65535

#Statistics properties
statistics.hoststatus = DOWN;UNREACHABLE;PENDING;UP;SCHEDULED DOWN;UNSCHEDULED DOWN
statistics.servicestatus = CRITICAL;WARNING;UNKNOWN;OK;PENDING;SCHEDULED CRITICAL;UNSCHEDULED CRITICAL
statistics.nagios = isNotificationsEnabled;isEventHandlersEnabled;ScheduledDowntimeDepth;isChecksEnabled;Acknowledged;PassiveChecks;isFlapDetectionEnabled

########################################
# Foundation JMS Configuration
########################################

# JNDI Server Configuration
jndi.factory.initial=org.jboss.naming.remote.client.InitialContextFactory
jndi.factory.host=localhost
jndi.factory.port=4447


# JMS  user and password
# We should encrypt password. These values has to match in application-users.properties
jms.admin.user=admin
jms.admin.password=groundwork


# JMS server ip / domain name
# This property should be changed to the server name / ip and should not be localhost.
# When clients retrieve the server context (cf0) it needs to be related to the proper server and not to localhost
# unless all clients are on the same host as Foundation
jms.server.name=localhost

#JMS Server Id
jms.server.id=0

#Location of server persistence path relative to the start up directory
jms.server.persistence.path=./s0

# Context JNDI Lookup Name 
# This context is used by all destinations
jms.server.context.id=jms/RemoteConnectionFactory



########################################
# Foundation Feeder JMS Configuration
########################################

# JMS listener. configuration. It's the preferred way to insert messages from
# Java applications or any JMS 'able' application to feed data.
feeder.jms.enabled = true

# Destination JNDI Lookup Name
feeder.jms.queue.name = /queue/groundwork
		
########################################
# Foundation Event Service Configuration
########################################

# Name of topic destination events will be published
fes.topic.name = /topic/foundation_events

# Number of events to batch before a publish is required
# If <= 0 then this setting is ignored
fes.batch.size = 50

# If true this property indicates that for each publish batch all events should be concatenated and
# sent in one JMS text message.  If set to false all events will result in individual JMS text messages.
fes.batch.concatenate = true

# Time interval in milliseconds to queue and batch events before a publish is required
#  This value should be greater than or equal fes.check.interval. Setting this value to less than check interval 
# will void this property usage and the system will always look for the batch size.
fes.batch.interval = 30000

# This is the time that the publish sleeps between batches.  This value should be greater than
# zero.
fes.check.interval = 10000

#######################################
# Foundation Action Service Configuration
#######################################

# Action Thread Pool
fas.executor.core.pool.size = 5
fas.executor.max.pool.size = 25
fas.executor.queue.size = 100
fas.executor.interrupt = 30

# Keep Thread Alive In Seconds
fas.executor.keep.alive = 30

#######################################
# Foundation Dispatcher Configuration
#######################################

# Maximum number of messages placed on message queue.  Once this limit is reached the
# dispatcher will stop reading messages from the JMS queue until it is caught up
fmd.message.queue.max=500

# Coordinate all incoming messages on the following attributes
fmd.msgkeys.HOST_STATUS=Host,Device
fmd.msgkeys.SERVICE_STATUS=Host,Device,ServiceDescription
fmd.msgkeys.NAGIOS_LOG=Device
fmd.msgkeys.COLLAGE_LOG=Device
fmd.msgkeys.GENERICLOG=Device
fmd.msgkeys.SYSTEM_CONFIG=Host,Device
fmd.msgkeys.SNMPTRAP=Device
fmd.msgkeys.SYSLOG=Device
fmd.msgkeys.SYSTEMADMIN=Host,HostId,Device,DeviceId,HostGroup,HostGroupId,ServiceDescription,ServiceId

# If any of the attributes listed appear in the message then all messages of the same type
# with the same attribute value will be executed serially
fmd.msgserialkeys.NAGIOS_LOG=consolidation
fmd.msgserialkeys.GENERICLOG=consolidation
fmd.msgserialkeys.COLLAGE_LOG=consolidation
fmd.msgserialkeys.SYSTEMADMIN=consolidation,Host,HostId,Device,DeviceId,HostGroup,HostGroupId,ServiceDescription,ServiceId
fmd.msgserialkeys.SYSLOG=consolidation
fmd.msgserialkeys.SNMPTRAP=consolidation

# Foundation Message Dispatcher Request Executor Pool Configuration
# Note:  fmd.executor.max.pool.size should be equal or more than with the max number of db connections
# in the database connection pool (db.properties)
fmd.executor.core.pool.size = 15
fmd.executor.max.pool.size = 100
fmd.executor.queue.size = 500

# Keep Thread Alive In Seconds
fmd.executor.keep.alive = 60


##########################################
# Foundation PerformanceData Configuration
##########################################
# Foundation PerformanceData rollup
# possible values: day, hour, minute
fp.data.rollup=day

########################################
# RRD creation settings
########################################

#Creating an RRD graph should not take more than a second per graph.
#Calls will be interruppted if they take more than 5 seconds per RRD graph
rrdtool.thread.timeout = 5

##############################################################
# Delimiters for the cacti interface to parse the label and url send by the feeder
# since 6.0.1
##############################################################
cacti.interface.delimiter = !!
cacti.interface.labelurl.delimiter =;;
###########################################################################
# Enables/Disables event message pre-processing for NAGIOS application types.
# since 6.3. Valid values for event.pre.process.enabled property values true,false.
# Valid values for event.pre.process.opstatus property are ACCEPTED, OPEN, CLOSED, NOTIFY.
# Starting with Release GWMEE 6.6 pre-processing will be enabled by default
###########################################################################
event.pre.process.enabled = true
event.pre.process.opstatus=ACCEPTED


# For performance, do not display/fetch events older than this many hours unless specifically requested. Zero disables this feature.
event.maxQueryAgeHours=0

##############################################################################################
# Preprocess for OTHER application types. All fields case-sensitive.
# Enables/Disables event message pre-processing for OTHER application types.
# DONOT SPECIFY NAGIOS APP TYPE HERE.
# since 6.4.1. Valid values for event.pre.process.<applicationType>.enabled property values true,false.
#Valid values for event.pre.process.<applicationType>.fields property are ReportDate,Device,TextMessage,ApplicationType,
# ApplicationSeverity,LastInsertDate,FirstInsertDate and Dynamic Properties for that application type. 
# For dynamic properties please refer to PropertyType & ApplicationEntityProperty. Each field is delimited by comma.
# Valid values for event.pre.process.<applicationType>.opstatus property are ACCEPTED, OPEN, CLOSED, NOTIFY.
##############################################################################################
#event.pre.process.SYSLOG.enabled = true
#event.pre.process.SYSLOG.fields = Device
#event.pre.process.SYSLOG.opstatus= ACCEPTED
#event.pre.process.SNMPTRAP.enabled = true
#event.pre.process.SNMPTRAP.fields = Device,Event_OID_numeric
#event.pre.process.SNMPTRAP.opstatus= ACCEPTED

###################################
# Flag for consolidating all fields
##################################
consolidate.all.fields=false

############################################################################
#portal proxy user name and password
portal.proxy.user=user
portal.proxy.password=96aCtUhYcGfdMVd3GmfVQg
##############################################
# Enable manage plugin UI. Valid values are true or false.
gdma.plugin.upload.enable=false

# perf data JMS queue name
perfdata.vema.jms.queue.name=/queue/vema_perf_data

# Enable logperf processing in standard/biz APIs by comma-separated appname (disabled by default)
#perfdata.logperf.appnames=Nagios performance data feeder

# perfdata.backend.default
# - if this is blank or anything other than 'influxdb', then GETs from /api/perfdata will go looking to OpenTSDB for data
# - if this is 'influxdb', then:
# -    GETs from /api/perfdata will be from InfluxDB
# -    POSTs to /api/perfdata will be to InfluxDB
perfdata.backend.default=rrd

# perfdata.vema.writers
# - if this is set to blank, then
# -    data will be written to InfluxDB if perfdata.backend.default = influxdb
# -    perf data will not be put on the queue for any other writers
# - if it's not blank, then it must be a comma list of classes which define which backend writers to use
perfdata.vema.writers=com.groundwork.feeder.service.RRDPerfDataWriter


# CollageRest API Asynchronous Settings
collagerest.threads = 15
collagerest.queueSize = 1000
collagerest.throttleThreshold = 500
collagerest.throttleWaitMs = 500

# CollageRest Session Management
collagerest.sessions.max = 500

jasypt.mainkey=3PHpHhaYzuc=R3IwdW5kVzByazEyMw==

# CollageRest Downtime Throttle controls the frequency of updating of the Log Message table
# when running the Downtime REST API
# This is required only when you have very large updates of services or hosts to downtime
# The LogMessage can become cpu and database intensive, and this throttle
# provides a knob for controlling how long you want
# to yield processing after writing each LogMessage record
# after processing a setDowntime or clearDowntime REST API
# (set to 0 to turn off throttling, recommend minimum of 20ms throttle setting)
collagerest.downtime.throttleWaitMs = 0
# enable running downtime log message updates in background
collagerest.downtime.background.enable = false

############################################################################
# Remote RRD Service Credentials
#
# Array of properties per host, (array index starts at 1). If not
# set for a host, local ws_client.properties credentials are used.
############################################################################
#remote.rrd.1.host=localhost:8080
#remote.rrd.1.credentials=RESTAPIACCESS/7UZZVvnLbuRNk12Yk5H33zeYdWQpnA7j9shir7QfJgwh
#remote.rrd.1.credentials.encryption.enabled=true

############################################################################
# Collectors Configurations
############################################################################
collectors.configurations.directory=/usr/local/groundwork/config/collectors/configurations
collectors.templates.directory=/usr/local/groundwork/config/collectors/templates

############################################################################
# Performance Data Cache
############################################################################
performancedata.cache.enabled=true

############################################################################
# Metrics configuration
############################################################################
collage.metrics.enabled=false
# Collect jvm (threads, gc, memory, etc.) metrics
collage.metrics.jvm.enabled=false
# Period (in seconds) of colalge metrics reporters.  Reporters disabled by default.  0=disabled
collage.metrics.log.period=0
collage.metrics.csv.period=0
collage.metrics.influxdb.period=0
# collage.metrics.influxdb.period=300
collage.metrics.influxdb.url=http://localhost:8086
collage.metrics.influxdb.db=_groundwork_metrics

############################################################################
# Multiple LDAP Aggregator Endpoint Configurations
############################################################################

# Whether LDAP Aggregator should require a domain prefix on login
core.security.ldap.domain_prefix_required = false

# Whether LDAP Mapper should be enabled
core.security.ldap.mapping_enabled = false

# Last license page update timestamp for LDAP domain credentials
core.security.ldap.lastupdate.timestamp = 03/26/2017 12:31:13 PM

# Multiple domains are configured by copying sets of properties
# for AD or OpenLDAP below. Only properties that need to be
# overridden need to be copied, (the rest will default as below
# based on the type of domain). If any domains are configured here,
# the JOSSO endpoint configuration in josso-gateway-ldap-stores.xml
# is ignored. Otherwise, the JOSSO configuration is loaded into the
# LDAP Aggregator as the default domain.
#
# Note that domain names have no relationship to the actual DN
# domain. In fact, the domain names these endpoints are known
# by cannot contain the '.' character. Valid names might be
# 'Demo' or 'Windows2012'. These generally look like Windows
# NetBios domain names and are used as prefixes on the principle
# name during login. These are valid login principals:
#
#   demo\user
#   windows2012/user
#
# UPN forms are not currently supported. The default domain can
# also be configured with no domain specified in the properties
# below. The default domain, if defined, will be used to lookup
# users that are not authenticated with a domain prefix.
# Otherwise, when a login prefix is not entered for authentication,
# the named domains are searched in the order they are defined in
# this file.
#
# Configuring the properties for a specific name or default domain
# must utilize the following forms:
#
#   a named domain, (no '.' allowed in domain name):
#
#   core.security.ldap.config.<domain name>.<property name> = ...
#
#   the default domain:
#
#   core.security.ldap.config.<property name> = ...
#
# The following property names can be configured per domain:
#
#   credential_query_string
#   enable_start_tls
#   initial_context_factory
#   ldap_search_scope
#   principal_uid_attribute_id
#   principle_lookup_attribute_id
#   provider_url
#   role_attribute_id
#   role_matching_mode
#   roles_ctx_dn
#   security_authentication
#   security_credential
#   security_principal
#   security_protocol
#   server_type
#   trust_store
#   trust_store_password
#   uid_attribute_id
#   updatable_credential_attribute_id
#   user_certificate_attribute_id
#   user_properties_query_string
#   users_ctx_dn
#
# Normally, the server_type, provider_url, security_principal,
# security_credential, users_ctx_dn, and roles_ctx_dn need to be
# configured per domain endpoint. Base context DN properties,
# (users_ctx_dn and roles_ctx_dn), have been extended to support
# a list of DNs separated by a '|' delimiter.
#
# AD domain endpoint configurations and defaults
#
#   core.security.ldap.config.MyADDomain.credential_query_strings = sAMAccountName=username,unicodePwd=password
#   core.security.ldap.config.MyADDomain.enable_start_tls = false
#   core.security.ldap.config.MyADDomain.initial_context_factory = com.sun.jndi.ldap.LdapCtxFactory
#   core.security.ldap.config.MyADDomain.ldap_search_scope = SUBTREE
#   core.security.ldap.config.MyADDomain.principal_uid_attribute_id = sAMAccountName
#   core.security.ldap.config.MyADDomain.principle_lookup_attribute_id = 
#   core.security.ldap.config.MyADDomain.provider_url = ldap://10.0.0.1:389
#   core.security.ldap.config.MyADDomain.role_attribute_id = sAMAccountName
#   core.security.ldap.config.MyADDomain.role_matching_mode = UDN
#   core.security.ldap.config.MyADDomain.roles_ctx_dn = ou=GWRoles,dc=my,dc=org
#   core.security.ldap.config.MyADDomain.security_authentication = simple
#   core.security.ldap.config.MyADDomain.security_credential = ldapauth
#   core.security.ldap.config.MyADDomain.security_principal = cn=ldapauth,cn=Users,dc=my,dc=org
#   core.security.ldap.config.MyADDomain.security_protocol =
#   core.security.ldap.config.MyADDomain.server_type = AD
#   core.security.ldap.config.MyADDomain.trust_store =
#   core.security.ldap.config.MyADDomain.trust_store_password =
#   core.security.ldap.config.MyADDomain.uid_attribute_id = member
#   core.security.ldap.config.MyADDomain.updatable_credential_attribute_id = userPassword
#   core.security.ldap.config.MyADDomain.user_certificate_attribute_id = userCertificate
#   core.security.ldap.config.MyADDomain.user_properties_query_string = givenName=firstname,sn=lastname,userPrincipalName=mail
#   core.security.ldap.config.MyADDomain.users_ctx_dn = cn=Users,dc=my,dc=org
#
# OpenLDAP domain endpoint configurations and defaults
#
#   core.security.ldap.config.MyOpenLDAPDomain.credential_query_strings = uid=username,userPassword=password
#   core.security.ldap.config.MyOpenLDAPDomain.enable_start_tls = false
#   core.security.ldap.config.MyOpenLDAPDomain.initial_context_factory = com.sun.jndi.ldap.LdapCtxFactory
#   core.security.ldap.config.MyOpenLDAPDomain.ldap_search_scope = SUBTREE
#   core.security.ldap.config.MyOpenLDAPDomain.principal_uid_attribute_id = uid
#   core.security.ldap.config.MyOpenLDAPDomain.principle_lookup_attribute_id = 
#   core.security.ldap.config.MyOpenLDAPDomain.provider_url = ldaps://10.0.0.1:636
#   core.security.ldap.config.MyOpenLDAPDomain.role_attribute_id = cn
#   core.security.ldap.config.MyOpenLDAPDomain.role_matching_mode = UDN
#   core.security.ldap.config.MyOpenLDAPDomain.roles_ctx_dn = ou=Groups,dc=my,dc=org
#   core.security.ldap.config.MyOpenLDAPDomain.security_authentication = simple
#   core.security.ldap.config.MyOpenLDAPDomain.security_credential = ldapauth
#   core.security.ldap.config.MyOpenLDAPDomain.security_principal = cn=ldapauth,dc=my,dc=org
#   core.security.ldap.config.MyOpenLDAPDomain.security_protocol = SSL
#   core.security.ldap.config.MyOpenLDAPDomain.server_type = OpenLDAP
#   core.security.ldap.config.MyOpenLDAPDomain.trust_store =
#   core.security.ldap.config.MyOpenLDAPDomain.trust_store_password =
#   core.security.ldap.config.MyOpenLDAPDomain.uid_attribute_id = member
#   core.security.ldap.config.MyOpenLDAPDomain.updatable_credential_attribute_id = userPassword
#   core.security.ldap.config.MyOpenLDAPDomain.user_certificate_attribute_id = userCertificate
#   core.security.ldap.config.MyOpenLDAPDomain.user_properties_query_string = givenName=firstname,sn=lastname,mail=mail
#   core.security.ldap.config.MyOpenLDAPDomain.users_ctx_dn = ou=Users,dc=my,dc=org
#
# Example 'windows2012' AD endpoint:
#
#   core.security.ldap.config.windows2012.server_type = AD
#   core.security.ldap.config.windows2012.provider_url = ldap://10.0.0.1:389
#   core.security.ldap.config.windows2012.security_principal = cn=admin,cn=Users,dc=corp,dc=localdomain
#   core.security.ldap.config.windows2012.security_credential = adm1n
#   core.security.ldap.config.windows2012.users_ctx_dn = cn=Users,dc=corp,dc=localdomain
#   core.security.ldap.config.windows2012.roles_ctx_dn = ou=GWRoles,dc=corp,dc=localdomain
#
# Example default AD endpoint:
#
#   core.security.ldap.config.server_type = AD
#   core.security.ldap.config.provider_url = ldaps://10.0.0.1:636
#   core.security.ldap.config.security_protocol = SSL
#   core.security.ldap.config.security_principal = cn=admin,cn=Users,dc=corp,dc=localdomain
#   core.security.ldap.config.security_credential = adm1n
#   core.security.ldap.config.users_ctx_dn = cn=Users,dc=corp,dc=localdomain
#   core.security.ldap.config.roles_ctx_dn = ou=GWRoles,dc=corp,dc=localdomain
#
# Example default AD endpoint with self-signed SSL certificate:
#
#   core.security.ldap.config.server_type = AD
#   core.security.ldap.config.provider_url = ldaps://10.0.0.1:636
#   core.security.ldap.config.security_protocol = SSL
#   core.security.ldap.config.security_principal = cn=admin,cn=Users,dc=corp,dc=localdomain
#   core.security.ldap.config.security_credential = adm1n
#   core.security.ldap.config.users_ctx_dn = cn=Users,dc=corp,dc=localdomain
#   core.security.ldap.config.roles_ctx_dn = ou=GWRoles,dc=corp,dc=localdomain
#   core.security.ldap.config.trust_store = /usr/local/groundwork/config/AD.corp.localdomain.ks
#   core.security.ldap.config.trust_store_password = changeit
#
# To generate a Java Keystore trust store for AD endpoint with
# a self-signed SSL certificate, use the following or equivalent
# commands:
#
# > echo -n | openssl s_client -connect 10.0.0.1:636 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > AD.corp.localdomain.crt
# > keytool -import -trustcacerts -keystore AD.corp.localdomain.ks -storepass changeit -noprompt -alias AD.corp.localdomain -file AD.corp.localdomain.crt

# GWMON-11052 soft limit license properties:
# soft.limit.display.list: list of roles that will see softlimit message
# default values for roles: admin user: GWAdmin, root user: GWRoot, operator user: GWOperator and user user: GWUser, and a new user: GWUser
# soft.limit.license.message: message for license warn date exceeded
# soft.limit.count.message: message for warning count exceed# soft.limit.txtcolor: color of text
# color values: red=#FA1A1A, white=#FFFFFF, yellow=#FFFF00, black=#000000
soft.limit.display.list=GWAdmin,GWOperator
# GWMON-9697 add url refs to license and dev count FAQ
# if url properties are set to NONE then no URL links
soft.limit.license.datefaq.url=https://kb.groundworkopensource.com/pages/viewpage.action?pageId=13798193
soft.limit.license.countfaq.url=https://kb.groundworkopensource.com/pages/viewpage.action?pageId=13797325
soft.limit.license.message=warning period exceeded on: %s. Your license expires: %s.
soft.limit.count.message=device soft limit of %d has been exceeded. Your hard limit is:%d.
soft.limit.bgcolor=#FFFF00
soft.limit.txtcolor=#000000

# Operation-level timeout on autoregistration by discovery (optional.  default=30)
#autoregister.discovery.timeout=30

############################################################################
# LogMessage Window Service Configuration
############################################################################
logmessage.window.enabled=true
logmessage.window.size.hours=49
logmessage.window.update.interval.seconds=5
