# logbridge_feeder_localhost.conf - the localhost endpoint configuration file
#
# Copyright 2014 GroundWork Open Source, Inc. ("GroundWork")
# All rights reserved.  This program is free software; you can
# redistribute it and/or modify it under the terms of the GNU
# General Public License version 2 as published by the Free
# Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# The values specified here are used to control the behavior of the Logbridge Feeder
# for this localhost endpoint.

# Disable or enable the feeder for the localhost endpoint.
enable_processing = yes

# Log how long each cycle is taking  
cycle_timings = yes

# Feeder self-monitoring GroundWork hostgroup . This should be different 
# to the gwevents_to_es health_hostgroup. 
health_hostgroup = logbridge_feeder

# REST end point host and credentials are in ws_client_config_file
ws_client_config_file = "/usr/local/groundwork/config/ws_client.properties"
api_timeout = 30

# This option is only used in GW 7.1.0+ versions.
# Forcing a CRL check means the Perl GW::RAPID package will insist on having a
# Certificate Revocation List file available if the server is configured to use SSL
# (as specified in the foundation_rest_url setting of the file listed above as the
# ws_client_config_file option value).  This should be enabled for a properly secure
# SSL setup; you will then need to provide a valid CRL file, even if it doesn't
# list any revoked certificates, in the /usr/local/groundwork/common/openssl/certs/
# directory.  Disabling this is a less-secure setup, as then the HTTPS connection
# does not protect against a man-in-the-middle attack.  If the server does not use
# SSL, this option has no effect.
# [yes/no]
force_crl_check = no

# Bundling options that determine how many to bundle up in one REST API call for CRUD ops
host_bundle_size          = 30
hostgroup_bundle_size     = 30
service_bundle_size       = 50
events_bundle_size        = 50
notifications_bundle_size = 30

# If you want GroundWork's set of hosts and services to always match those that come out of 
# the groups configuration xml, set this to true. Then, hosts/services will be removed from
# GroundWork to make things match. 
# Leaving this to false can cause a trail of orphaned hosts and services, as the content
# of the groups configuration xml changes over time.
foundation_follows_conf = true

# Notification and event options
# Enable/disable notifications for cacti host and service state changes.
post_notifications = yes
# Enable/disable creation of events in Foundation for cacti host and service state changes.
# Generally leave this to yes unless instructed otherwise by GroundWork.
post_events = yes

# Feeder Unique Identifier options
# Globally unique identifier for this feeder instance.
# This is used for setting the value of AgentId which is field that is attached to host, hostgroup and service objects
# in Foundation that are/were created by this feeder.  
# When the feeder runs, if the value of guid is set to 'undefined', then the feeder will 
# write a new value in this config file for this option.
# Generally don't touch this unless otherwise instructed by GroundWork.
guid = undefined

# Auditing options
# The feeder can produce an audit trail of the following things :
#    - creation of new hosts, new hostgroups, new services
#    - deletion of hosts, hostgroups, services
# On each feeder cycle, if any of the above  things happens, Foundation audit events will be created. 
# There is an overhead in performance for auditing. 
auditing = yes

# Set this to true if the feeder should send in host status updates, false if not.
# Note that the feeder will always create a host with a status from the feeder regardless of this setting.
update_hosts_statuses = yes

# The maximum age in seconds of entries in the retry cache. Entries with timestamps older than this 
# maximum age will be discarded during the retry cache import stage (1 day =  86400 seconds).
retry_cache_max_age = 172800

# Foundation feeder application type.  Don't change this.
app_type = LOGBRIDGE

# Send feeder metrics data to performance graphs. This is experimental.
send_feeder_perf_data = no

# Feeder.pm module error emulation (fmee) is used for QA and testing purposes.
# Adding a Feeder.pm sub name into this block will cause that sub to return 0.
# 'timestamp' can also be used to emulate a failure at a specific retry cache entry.
#<fmee>
    #timestamp = some epoch time that matches a retry cache entry timestamp
    #feeder_upsert_hosts
    #feeder_upsert_hostgroups
    #feeder_upsert_services
    #feeder_delete_hosts
    #feeder_delete_services
    #check_foundation_objects_existence
    #flush_audit
    #initialize_health_objects
    #license_installed
    #check_license
#</fmee>

# End of configuration
