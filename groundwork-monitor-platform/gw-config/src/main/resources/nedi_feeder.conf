# nedi_feeder.conf
#
# Copyright (c) 2016 GroundWork, Inc. (www.gwos.com).  All rights reserved.
# Use of this software is subject to commercial license terms.
#
# The values specified here are used to control the behavior of the
# nedi_feeder.pl script. 

# ====================================================================
# GroundWork NeDi Feeder Configuration Parameters
# ====================================================================

# Process NeDi data?
#
# This option is turned off (the value "no", but without quotes) in the
# default configuration file so the NeDi feeder does nothing before
# NeDi itself is locally configured and operating as desired.  To get
# the feeder to run, it must be turned on here (the value "yes", but
# without quotes) once the rest of the setup is correct for your site.
# [yes/no]
enable_processing = no

# Where to log activity and debug messages.
logfile = "/usr/local/groundwork/foundation/container/logs/nedi_feeder.log"

# ----------------------------------------------------------------
# Options for interacting with Foundation
# via the Foundation REST API.
# ----------------------------------------------------------------

# The application name by which the nagios2collage_eventlog.pl process
# will be known to the Foundation REST API.
rest_api_requestor = "NeDi feeder"

# Where to find credentials for accessing the Foundation REST API.
ws_client_config_file = "/usr/local/groundwork/config/ws_client.properties"

# There are six predefined log levels within the Log4perl package:  FATAL,
# ERROR, WARN, INFO, DEBUG, and TRACE (in descending priority).  We define
# two custom levels at the application level to form the full useful set:
# FATAL, ERROR, WARN, NOTICE, STATS, INFO, DEBUG, and TRACE.  To see an
# individual message appear, your configured logging level here has to at
# least match the priority of that logging message in the code.
GW_RAPID_log_level = "WARN"

# Application-level logging configuration, for that portion of the logging
# which is currently handled by the Log4perl package.
#
# As recommended in the Log4perl documentation, we DO NOT try to mirror Perl
# package names here as logging category names.  A more sensible classification
# of categories provides more intelligent control across applications.
log4perl_config = <<EOF

# Use this to send everything from FATAL through ${GW_RAPID_log_level} to the logfile.
log4perl.category.NeDi.Feeder.GW.RAPID = ${GW_RAPID_log_level}, Logfile

# Send all Log4perl lines to the same log file as the rest of this application.
log4perl.appender.Logfile          = Log::Log4perl::Appender::File
log4perl.appender.Logfile.filename = ${logfile}
log4perl.appender.Logfile.utf8     = 0
log4perl.appender.Logfile.layout   = Log::Log4perl::Layout::PatternLayout
log4perl.appender.Logfile.layout.ConversionPattern = [%d{EEE MMM dd HH:mm:ss yyyy}] %m%n

EOF

