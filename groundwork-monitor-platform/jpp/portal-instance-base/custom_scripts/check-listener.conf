# check-listener.conf
#
# The values specified here are used to control the behavior of the
# check-listener.pl script, in its management of portal-deployment
# startup actions.
#
# Copyright (c) 2013 GroundWork, Inc. (www.gwos.com).  All rights reserved.
# Use of this software is subject to commercial license terms.

# ====================================================================
# GroundWork Portal Startup Configuration Parameters
# ====================================================================

# The max cycles values here are for each individual serialized deployment
# (initial and secondary), or for the full set of parallel deployments
# (tertiary).  The cycle sleep time values are specified in seconds, and
# are normally all just set to 1.

initial_deployment_max_cycles = 60 
initial_deployment_cycle_sleep_time = 1

secondary_deployment_max_cycles = 180 
secondary_deployment_cycle_sleep_time = 1

tertiary_deployment_max_cycles = 60 
tertiary_deployment_cycle_sleep_time = 1

# Initial deployments must be performed in sequence, in the order specified
# here.  These war-files must be deployed before anything else below.
initial_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/icefaces-push-server-1.8.2-P06-EE.war
initial_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/foundation-webapp.war
initial_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/legacy-rest.war

# Secondary deployments must be performed in sequence, in the order specified
# here.  These war-files must be deployed after the initial deployments, and
# then after the listener is known to be available.
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/groundwork-enterprise.ear
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/portal-groundwork-base.war
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/portal-reportviewer.war

# Secondary deployments war files that ref php
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/nagvis.war
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/nms-rstools.war
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/nagios-app.war
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/nagvis_share.war
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/nedi.war
secondary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/nms-cacti.war

# Tertiary deployments can be performed all at once.  These war-files can be
# deployed at any time, as they have no dependencies on the other war-files.
# But conventionally, we wait for all the initial and secondary deployments
# before fiddling with these.
# tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/XXX.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/birtviewer.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/cloudhub.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/monarch.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/monarch-export.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/performance.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/profiles.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/reports.war
tertiary_deployment = /usr/local/groundwork/foundation/container/jpp/standalone/deployments/grafana-app.war

