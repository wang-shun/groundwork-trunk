# Configuration file for the check_cacti script.

#######################################################
#
#   General Program Execution Options
#
#######################################################

# Check Cacti thresholds?  If not, just sleep forever.
# This option is turned off (the value "no", but without quotes) in the default 
# configuration file simply so the script can be safely installed before it is
# locally configured.  To get the software to run, it must be turned on here 
# (the value "yes", but without quotes) once the rest of the setup is correct 
# for your site.
enable_processing = yes

# Global Debug Level (controls the output of messages in the logfile)
# NONE    = 0; turn off all debug info
# FATAL   = 1; the application is about to die
# ERROR   = 2; the application has found a serious problem, but will attempt to recover 
# WARNING = 3; the application has found an anomaly, but will try to handle it
# NOTICE  = 4; the application wants to inform you of a significant event
# STATS   = 5; the application wants to log statistical data for later analysis
# INFO    = 6; the application wants to log a potentially interesting event
# DEBUG   = 7; the application wants to log detailed debugging data
debug_level = 4

# Send the passive service check results to Nagios?
# In normal production operation, you want this to happen, but during a
# debugging session you might want to disable it so as not to create
# confusing results on the production monitoring screens.
# [yes/no]
send_to_nagios = yes

# Service name used in the passive service check result sent to Nagios.
cacti_service_name = "cacti"

# Whether to qualify threshold alerts by checking the threshold fail count
# against the threshold fail trigger.
# [yes/no]
check_thold_fail_count = yes

# Whether to qualify baseline alerts by checking the baseline fail count
# against the baseline fail trigger.
# [yes/no]
check_bl_fail_count = yes

# The hostname for which the check_cacti service result is to be reported;
# that is, the host on which this copy of the script runs.
check_cacti_host = "localhost"

# What subset of hosts to check Cacti thresholds for.  This must be either
# a single Cacti group name, to check only the hosts associated with that
# group (generally associated with a particular child server), or an empty
# string, to check all hosts in Cacti.
# FIX MINOR:  We don't actually have support for this (yet).
check_cacti_group = ""

# How often to repeat the entire set of checks (seconds between starts of
# successive passes), if the script is run as a persistent daemon.  Zero
# means don't repeat; instead, exit after one pass, as is appropriate for
# execution as a cron job.
# 300 seconds (5 minutes) is typical.
# Simple arithmetic (e.g., 5*60) is allowed in this expression.
cycle_time = 5*60

# Use NSCA to send results to a (generally remote) Nagios command pipe?
#  no = write directly to a local Nagios command pipe
# yes = use send_nsca to write to a (generally remote) Nagios command pipe
use_nsca = no 

# Absolute pathname of the Nagios command pipe.
nagios_cmd_pipe = "/usr/local/groundwork/nagios/var/spool/nagios.cmd"

# The maximum time in seconds to wait for any single write to the Nagios
# command pipe to complete.
max_command_pipe_wait_time = 3*60

# The maximum size in bytes for any single write operation to the Nagios
# command pipe.  The value chosen here must be no larger than PIPE_BUF
# (getconf -a | fgrep PIPE_BUF) on your platform, unless you have an absolute
# guarantee that no other process will ever write to the command pipe.
max_command_pipe_write_size = 4096

# Default elapsed time threshold for one cycle time, beyond which we declare
# the check_cacti service to be in a CRITICAL state.  This value may be
# overridden on the command line.  Zero means we don't apply a threshold.
# This value is used strictly to determine the final service result, and
# does not cause the script to expire any earlier than it otherwise would.
default_elapsed_time_threshold = 60

# When to quit, if a given pass of the script hasn't completed all its work by
# the time this many seconds have passed.  This is just a precaution against
# unexpected circumstances; we don't have a model for what might cause the
# script to run for a long time.  It could be useful if the script is run
# as a cron job and you don't want overlapping copies of the cron job to run.
# Simple arithmetic (e.g., 15*60) is allowed in this expression.  A value of zero
# disables the timeout, allowing the script to run forever.  Note that if the
# script is run as a Nagios plugin, Nagios itself will kill it if it runs for
# more than a minute.  In version 2.0.0 of the check_cacti.pl script, writing
# directly to the Nagios command pipe interferes with the operation of this
# timeout, so if you want to use it, you will need to send results through NSCA.
max_cycle_time = 0

# How to select the part of a hostname to report out, if the host is not an IP address.
# This pattern must include exactly one part enclosed in parentheses.
# If you don't want any hostname stripping, set this pattern to "".
# For example, to strip the full domain, and only use an unqualified name, use:
# short_hostname_pattern = "(\S+?)\."
# Or to drop just the last part of the domain, use:
# short_hostname_pattern = "(\S+)\.xyzcompany\.com"
short_hostname_pattern = ""

# How to access the Cacti database.
# If you have multiple instances of check_cacti.pl running on a single monitoring
# server, and each instance needs to access a different instance of the Cacti
# database, the way to set that up is to use the "check_cacti.pl -c config_file"
# command-line option to override the standard config-file pathname for each instance
# of the script, and to set up multiple instances of this configuration file.  Such a
# setup lets you independently adjust the other options as well, if that is useful.
cacti_db_type = postgresql
cacti_db_host = localhost
cacti_db_port = 5432
cacti_db_name = cacti
cacti_db_user = cactiuser
cacti_db_pass = cactiuser

#######################################################
# 
#   NSCA Options
#
#######################################################

# The maximum number of hosts for which check results will be passed to
# one call of send_nsca.
max_hosts_per_send_nsca = 500

# Host of target (generally remote) NSCA.
nsca_host = "127.0.0.1"

# NSCA port to send_nsca results to (usually port 5667).
nsca_port = 5667

# The number of seconds before send_nsca times out.
nsca_timeout = 10

# Whether to also send a copy of the Cacti threshold data to a secondary server.
send_to_secondary_NSCA = no

# Host of secondary target NSCA.
secondary_nsca_host = "127.0.0.1"

# Secondary-host NSCA port to send_nsca results to (usually port 5667).
secondary_nsca_port = 5667

# The number of seconds before secondary-host send_nsca times out.
secondary_nsca_timeout = 10
