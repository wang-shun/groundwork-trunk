#!/usr/local/groundwork/perl/bin/perl -w --

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use dassmonarch;

my $VERSION = "1.0.0";
( my $program = $0 ) =~ s{.*/}{};

use vars qw($opt_d $opt_V $opt_h $opt_c $opt_a $opt_man);

# Parse Command Line Opts
Getopt::Long::Configure('bundling');
GetOptions(
    "V"              => \$opt_V,
    "version"        => \$opt_V,
    "h"              => \$opt_h,
    "help"           => \$opt_h,
    "m"              => \$opt_man,
    "man"            => \$opt_man,
    "d=s"            => \$opt_d,
    "debuglevel=s"   => \$opt_d,
    "c=s"            => \$opt_c,
    "contactgroup=s" => \$opt_c,
    "a=s"            => \$opt_a,
    "alias=s"        => \$opt_a,
);

# GetOptions('-h' => \$opt_h, --man => \$opt_man) or pod2usage(2);
pod2usage( -verbose => 1 ) if $opt_h;
pod2usage( -exitval => 0, -verbose => 2 ) if $opt_man;

if ($opt_V) {
    print "$program version $VERSION.\n";
    exit 0;
}

if ( not $opt_c ) {
    print "$program:  contactgroup name not set, use -c to specify a contactgroup name\n";
    exit 1;
}

if ( not $opt_a ) {
    print "$program:  contactgroup alias is not set; use -a to specify a contactgroup alias\n";
    exit 1;
}

my $dm = dassmonarch->new();

$dm->set_debuglevel($opt_d) if $opt_d;

$dm->create_contactgroup( $opt_c, $opt_a );

__END__

=head1 NAME

monarch_create_contactgroup

=head1 SYNOPSIS

monarch_create_contactgroup -c contactgroup -a alias

=head1 DESCRIPTION

Creates a new contactgroup with an alias (mandatory).

=head1 OPTIONS

-d [error,warning,info,verbose]

=head1 ORIGINAL AUTHOR

dass IT GmbH maik.aussendorf@dass-it.de

=cut

# vim: tabstop=8 shiftwidth=4 softtabstop=4 smarttab noexpandtab
