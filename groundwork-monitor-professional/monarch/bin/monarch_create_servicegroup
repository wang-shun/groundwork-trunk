#!/usr/local/groundwork/perl/bin/perl -w --

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use dassmonarch;

my $VERSION = "1.0.0";
( my $program = $0 ) =~ s{.*/}{};

use vars qw($opt_d $opt_V $opt_h $opt_S $opt_a $opt_e $opt_n $opt_man);

# Parse Command Line Opts
Getopt::Long::Configure('bundling');
GetOptions(
    "V"            => \$opt_V,
    "version"      => \$opt_V,
    "h"            => \$opt_h,
    "help"         => \$opt_h,
    "m"            => \$opt_man,
    "man"          => \$opt_man,
    "d=s"          => \$opt_d,
    "debuglevel=s" => \$opt_d,
    "S=s"          => \$opt_S,
    "groupname=s"  => \$opt_S,
    "a=s"          => \$opt_a,
    "alias=s"      => \$opt_a,
    "e=s"          => \$opt_e,
    "escalation=s" => \$opt_e,
    "n=s"          => \$opt_n,
    "notes=s"      => \$opt_n,
);

# GetOptions('-h' => \$opt_h, --man => \$opt_man) or pod2usage(2);
pod2usage( -verbose => 1 ) if $opt_h;
pod2usage( -exitval => 0, -verbose => 2 ) if $opt_man;

if ($opt_V) {
    print "$program version $VERSION.\n";
    exit 0;
}

if ( not $opt_S ) {
    print "$program:  servicegroup name is not set; use -S to specify a servicegroup name\n";
    exit 1;
}

if ( not $opt_a ) {
    print "$program:  servicegroup alias is not set; use -a to specify a servicegroup alias\n";
    exit 1;
}

$opt_n = '' if not $opt_n;
$opt_e = '' if not $opt_e;

my $dm = dassmonarch->new();

$dm->set_debuglevel($opt_d) if $opt_d;

$dm->create_servicegroup( $opt_S, $opt_a, $opt_e, $opt_n );

__END__

=head1 NAME

monarch_create_servicegroup

=head1 SYNOPSIS

monarch_create_servicegroup -s servicegroup -a alias [-e escalation_tree] [-n notes]

=head1 DESCRIPTION

Creates a new servicegroup with an alias (mandatory).

=head1 OPTIONS

-e escalation_tree - service escalation tree

-n notes - Notes

-d [error,warning,info,verbose]

=head1 ORIGINAL AUTHOR

dass IT GmbH maik.aussendorf@dass-it.de

=cut

# vim: tabstop=8 shiftwidth=4 softtabstop=4 smarttab noexpandtab
