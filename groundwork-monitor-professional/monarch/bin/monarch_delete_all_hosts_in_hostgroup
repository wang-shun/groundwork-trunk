#!/usr/local/groundwork/perl/bin/perl -w --

use strict;
use warnings;

use Getopt::Long;
use Pod::Usage;
use dassmonarch;

my $VERSION = "1.0.0";
( my $program = $0 ) =~ s{.*/}{};

use vars qw($opt_d $opt_V $opt_h $opt_H $opt_man);

# Parse Command Line Opts
Getopt::Long::Configure('bundling');
GetOptions(
    "V"               => \$opt_V,
    "version"         => \$opt_V,
    "h"               => \$opt_h,
    "help"            => \$opt_h,
    "m"               => \$opt_man,
    "man"             => \$opt_man,
    "d=s"             => \$opt_d,
    "debuglevel=s"    => \$opt_d,
    "H=s"             => \$opt_H,
    "hostgroupname=s" => \$opt_H,
);

# GetOptions('-h' => \$opt_h, --man => \$opt_man) or pod2usage(2);
pod2usage( -verbose => 1 ) if $opt_h;
pod2usage( -exitval => 0, -verbose => 2 ) if $opt_man;

if ($opt_V) {
    print "$program version $VERSION.\n";
    exit 0;
}

if ( not $opt_H ) {
    print "$program:  hostgroup name is not set; use -H to specify a hostgroup from which to delete hosts\n";
    exit 1;
}

my $dm = dassmonarch->new();

$dm->set_debuglevel( $opt_d || 'error' );

if ( not $dm->hostgroup_exists($opt_H) ) {
    $dm->debug( 'error', "$program:  hostgroup $opt_H was not found in the monarch database" );
    exit 1;
}

my @hosts    = $dm->get_hosts_in_hostgroup($opt_H);
my $exitcode = 0;

foreach my $host (@hosts) {
    if ( $dm->delete_host($host) ) {
	$dm->debug( 'info', "$program:  host $host deleted" );
    }
    else {
	$dm->debug( 'error', "$program:  could not delete host $host" );
	++$exitcode if $exitcode < 127;
    }
}

exit $exitcode;

__END__

=head1 NAME

monarch_delete_all_hosts_in_hostgroup

=head1 SYNOPSIS

monarch_delete_all_hosts_in_hostgroup -H hostgroup

=head1 DESCRIPTION

Deletes all hosts that belong to a specific hostgroup.  This is a seriously-destructive script;
it deletes each entire host, not just the membership of that host in the hostgroup.

=head1 OPTIONS

-d [error,warning,info,verbose]

=head1 ORIGINAL AUTHOR

dass IT GmbH maik.aussendorf@dass-it.de

=head1 LICENSE

GPL v. 3

=cut

# vim: tabstop=8 shiftwidth=4 softtabstop=4 smarttab noexpandtab
