--- noma_2.0.3/notifier/lib/bundler.pm.orig	2011-11-21 03:25:24.000000000 -0800
+++ noma_2.0.3/notifier/lib/bundler.pm	2017-08-01 20:05:01.264267385 -0700
@@ -37,7 +37,7 @@
 
     # select notifications due to be executed that are not currently in progress and that have not already been bundled
     # N.B. a bundled notification will also appear here as a notification with a separate field.
-    my $query = 'select a.id,notify_id,dest,from_user,time_string,user,method,notify_cmd,retries,rule, external_id,host,host_alias,host_address,service,check_type,status,a.stime,notification_type,authors,comments,output from tmp_active as a left join tmp_commands as c on a.command_id=c.id where progress=\'0\' and bundled = \'0\' and a.stime <= \''.time().'\'';
+    my $query = 'select a.id,notify_id,dest,from_user,time_string,'.quoteIdentifier('user').',method,notify_cmd,retries,rule, external_id,host,host_alias,host_address,service,check_type,status,a.stime,notification_type,authors,comments,output from tmp_active as a left join tmp_commands as c on a.command_id=c.id where progress=\'0\' and bundled = \'0\' and a.stime <= \''.time().'\'';
     %dbResult = queryDB($query, undef, 1);
 
     return unless (keys(%dbResult));
@@ -161,7 +161,7 @@
 
                 my $now = time();
                 # create a fake command
-		$sql = sprintf('insert into tmp_commands (operation, external_id, host, host_alias, host_address, hostgroups, service, servicegroups, check_type, status, stime, notification_type, authors, comments, output) values (\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\')',
+		my $sql = sprintf('insert into tmp_commands (operation, external_id, host, host_alias, host_address, hostgroups, service, servicegroups, check_type, status, stime, notification_type, authors, comments, output) values (\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\',\'%s\')',
                     'NOTIFICATION',
                     $notify_id,
                     'multiple alerts',
@@ -179,9 +179,36 @@
                     $recipients{$user}{$cmd}{multi_message});
                 updateDB($sql);
                 
-                # add the bundled command to the tmp_active table as a new notification WITHOUT delay
-                prepareNotification($notify_id, '(bundler)', 'Bundled', $cmd, $user, $recipients{$user}{$cmd}{from_user}, $notify_id, $now,
-'h', 'WARNING','PROBLEM', 'multiple alerts',     'multiple alerts', '127.0.0.1', 'nosvc','','', $recipients{$user}{$cmd}{multi_message}, '0', 1);
+                # Add the bundled command to the tmp_active table as a new notification WITHOUT delay.
+                # Since the prepareNotification() arguments are so numerous and it's hard to keep track
+                # of them and ensure we have them all specified properly, we comment them here with the
+                # actual subroutine parameter names, so we can more readily spot and correct mistakes
+                # (which there were some of, in previous releases).  The key here is that we want the
+                # nodelay parameter at the end to be a true value.
+                prepareNotification(
+                    $notify_id,                                 # incident_id
+                    '(bundler)',                                # user
+                    'Bundled',                                  # method
+                    $cmd,                                       # short_cmd
+                    $user,                                      # dest
+                    $recipients{$user}{$cmd}{from_user},        # sender
+                    $notify_id,                                 # id
+                    $now,                                       # datetime
+                    'h',                                        # check_type
+                    'WARNING',                                  # status
+                    'PROBLEM',                                  # notification_type
+                    'multiple alerts',                          # host
+                    'multiple alerts',                          # host_alias
+                    '127.0.0.1',                                # host_address
+                    'nohostgroup',                              # hostgroups
+                    'nosvc',                                    # service
+                    'nosvcgroup',                               # servicegroups
+                    '',                                         # authors
+                    '',                                         # comments
+                    $recipients{$user}{$cmd}{multi_message},    # output
+                    '0',                                        # rule
+                    1                                           # nodelay
+                );
 
                 # now create the actual alert
                 
@@ -282,7 +309,13 @@
 
 
     # debug("Checking if $bunid is bundled\n");
-    my %dbResult = queryDB("select count(*) as count from tmp_active where bundled=\"".$bunid."\"");
+    my %dbResult = ();
+    if ($conf->{db}->{type} eq 'postgresql') {
+        %dbResult = queryDB("select count(*) as count from tmp_active where bundled=".$bunid);
+    }
+    else {
+        %dbResult = queryDB("select count(*) as count from tmp_active where bundled=\"".$bunid."\"");
+    }
 
     return 0 unless (defined($dbResult{0}->{count}) and ($dbResult{0}->{count} > 0));
     debug("$bunid is bundled (".$dbResult{0}->{count}." alerts)", 2);
