--- noma_2.0.3/notifier/lib/contacts.pm.orig	2012-06-11 08:25:02.000000000 -0700
+++ noma_2.0.3/notifier/lib/contacts.pm	2017-07-18 22:48:39.603225302 -0700
@@ -15,6 +15,7 @@
 use time_frames;
 use datetime;
 use Data::Dumper;
+$Data::Dumper::Sortkeys = 1;
 
 
 ##############################################################################
@@ -25,14 +26,14 @@
 sub getContacts
 {
 
-    my ($ids, $notificationCounter, $status, $notification_type, $incident_id) = @_;
+    my ($ids, $notificationCounter, $status, $notification_type, $incident_id, $counterHasRolledOver) = @_;
     debug('trying to getUsersAndMethods', 2);
     my %contacts_c =
-    getUsersAndMethods( $ids, $notificationCounter, $notification_type,$status );
+    getUsersAndMethods( $ids, $notificationCounter, $notification_type,$status, $counterHasRolledOver );
     debug("Users from rules: ". debugHashUsers(%contacts_c), 2);
     my %contacts_cg =
     getUsersAndMethodsFromGroups( $ids, $notificationCounter, $notification_type,
-        $status );
+        $status, $counterHasRolledOver );
     debug( 'Users from groups: '.debugHashUsers(%contacts_cg), 2);
 
     # merge contact hashes
@@ -249,7 +250,7 @@
 sub getUsersAndMethods
 {
 
-	my ( $ids, $notificationCounter, $notification_type, $status ) = @_;
+	my ( $ids, $notificationCounter, $notification_type, $status, $counterHasRolledOver ) = @_;
 
 	my %dbResult;
 	my @dbResult_arr;
@@ -274,7 +275,7 @@
 		}
 
 		$query =
-			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, n.notify_after_tries, n.let_notifier_handle, n.id rule from notifications n
+			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, n.notify_after_tries, n.let_notifier_handle, n.id as rule from notifications n
 			left join notifications_to_methods nm on n.id=nm.notification_id
 			left join notification_methods m on m.id=nm.method_id
 			left join notifications_to_contacts nc on n.id=nc.notification_id
@@ -287,7 +288,7 @@
 		$where =~ s/n\.id/ec\.notification_id/g;
 
 		$query =
-			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, ec.notify_after_tries, n.let_notifier_handle, n.id rule from escalations_contacts ec
+			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, ec.notify_after_tries, n.let_notifier_handle, n.id as rule from escalations_contacts ec
 			left join escalations_contacts_to_contacts ecc on ec.id=ecc.escalation_contacts_id
 			left join contacts c on c.id=ecc.contacts_id
 			left join escalations_contacts_to_methods ecm on ec.id=ecm.escalation_contacts_id
@@ -300,7 +301,7 @@
 
 		@dbResult_tmp_arr = ( @dbResult_not_arr, @dbResult_esc_arr );
 		@dbResult_arr =
-		filterNotificationsByEscalation( \@dbResult_tmp_arr, $notificationCounter, $notification_type, $status );
+		filterNotificationsByEscalation( \@dbResult_tmp_arr, $notificationCounter, $notification_type, $status, $counterHasRolledOver );
 
 
 		debug("To be notified: ".Dumper(@dbResult_arr), 3);
@@ -318,7 +319,7 @@
 sub getUsersAndMethodsFromGroups
 {
 
-	my ( $ids, $notificationCounter, $notification_type, $status ) = @_;
+	my ( $ids, $notificationCounter, $notification_type, $status, $counterHasRolledOver ) = @_;
 
 	my %dbResult;
 	my @dbResult_arr;
@@ -327,7 +328,6 @@
 	my @dbResult_tmp_arr;
 	my $where = '';
 	my @ignoreCGs;
-	my $notcg = '';
 	my $query;
 
 	# get count of notification id's
@@ -351,7 +351,7 @@
 			}
 			$query_temp = 'select eccg.contactgroup_id from escalations_contacts ec left join escalations_contacts_to_contactgroups eccg on ec.id=eccg.escalation_contacts_id where ec.notification_id=\''.$ids->[0].'\'';
 			%dbResult_temp = queryDB($query_temp);
-			foreach my $cg (keys %dbResult )
+			foreach my $cg (keys %dbResult_temp )
 			{
 				if(contactgroupInTimeFrame($dbResult_temp{$cg}->{contactgroup_id}) eq 0)
 				{
@@ -364,9 +364,9 @@
 		}
 		else
 		{
-			my $query_temp = 'select ncg.contactgroup_id from notifications_to_contactgroups ncg where ncg.notification_id=\''.$ids->[0].'\'';
+			my $query_temp = 'select ncg.contactgroup_id from notifications_to_contactgroups ncg where ncg.notification_id in (' . join( ',', @$ids ) . ')';
 			my %dbResult_temp = queryDB($query_temp);
-			foreach my $cg (keys %dbResult )
+			foreach my $cg (keys %dbResult_temp )
 			{
 				if(contactgroupInTimeFrame($dbResult_temp{$cg}->{contactgroup_id}) eq 0)
 				{
@@ -374,9 +374,9 @@
 					push(@ignoreCGs, $dbResult_temp{$cg}->{contactgroup_id});
 				}
 			}
-			$query_temp = 'select eccg.contactgroup_id from escalations_contacts ec left join escalations_contacts_to_contactgroups eccg on ec.id=eccg.escalation_contacts_id where ec.notification_id=\''.$ids->[0].'\'';
+			$query_temp = 'select eccg.contactgroup_id from escalations_contacts ec left join escalations_contacts_to_contactgroups eccg on ec.id=eccg.escalation_contacts_id where ec.notification_id in (' . join( ',', @$ids ) . ')';
 			%dbResult_temp = queryDB($query_temp);
-			foreach my $cg (keys %dbResult )
+			foreach my $cg (keys %dbResult_temp )
 			{
 				if(contactgroupInTimeFrame($dbResult_temp{$cg}->{contactgroup_id}) eq 0)
 				{
@@ -387,25 +387,12 @@
 			$where = join( '\' or n.id=\'', @$ids );
 		}
 
-		# get count of contactgroups to ignore.
-		my $ignoreCGs_cnt = @ignoreCGs;
-
-		if ( $ignoreCGs_cnt == 1)
-		{
-			$notcg = $ignoreCGs[0];
-		}
-		else
-		{
-			$notcg = join( '\' or eccg.contactgroup_id<>\'', @ignore_cgs);
-		}
-
-
 		# get contactgroups of ID's
 		# figure out what ID's NOT to select.
 
 		# query db for contacts
 		$query =
-			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, n.notify_after_tries, n.let_notifier_handle, n.id rule from notifications n
+			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, n.notify_after_tries, n.let_notifier_handle, n.id as rule from notifications n
 			left join notifications_to_methods nm on n.id=nm.notification_id
 			left join notification_methods m on m.id=nm.method_id
 			left join notifications_to_contactgroups ncg on n.id=ncg.notification_id
@@ -413,15 +400,15 @@
 			left join contactgroups_to_contacts cgc on cgc.contactgroup_id=cg.id
 			left join contacts c on c.id=cgc.contact_id
 			left join timezones tz on c.timezone_id=tz.id
-			where cg.view_only=\'0\' and n.active=\'1\' and (n.id=\'' . $where . '\') and (ncg.contactgroup_id<>\'' . $notcg . '\')';
+			where cg.view_only=\'0\' and n.active=\'1\' and (n.id=\'' . $where . '\')'
+			. ( @ignoreCGs ? ' and ncg.contactgroup_id not in (' . join( ',', @ignoreCGs ) . ')' : '' );
 
 		@dbResult_not_arr = queryDB( $query, 1 );
 
 		$where =~ s/n\.id/ec\.notification_id/g;
-		$where =~ s/ncg\.contactgroup_id/eccg\.contactgroup_id/g;
 
 		$query =
-			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, ec.notify_after_tries, n.let_notifier_handle, n.id rule from escalations_contacts ec
+			'select distinct c.username, c.phone, c.mobile, c.growladdress, c.email, tz.timezone, m.id mid, m.method, m.command, m.contact_field, m.sender, m.on_fail, m.ack_able, ec.notify_after_tries, n.let_notifier_handle, n.id as rule from escalations_contacts ec
 			left join escalations_contacts_to_contactgroups eccg on ec.id=eccg.escalation_contacts_id
 			left join contactgroups_to_contacts cgc on eccg.contactgroup_id=cgc.contactgroup_id
 			left join contacts c on cgc.contact_id=c.id
@@ -430,13 +417,14 @@
 			left join timezones tz on c.timezone_id=tz.id
 			left join notifications n on ec.notification_id=n.id
 			left join contactgroups cg on cgc.contactgroup_id=cg.id
-			where cg.view_only=\'0\' and n.active=\'1\' and (ec.notification_id=\'' . $where . '\')  and (eccg.contactgroup_id<>\'' . $notcg . '\')';
+			where cg.view_only=\'0\' and n.active=\'1\' and (ec.notification_id=\'' . $where . '\')'
+			. ( @ignoreCGs ? ' and eccg.contactgroup_id not in (' . join( ',', @ignoreCGs ) . ')' : '' );
 
 		@dbResult_esc_arr = queryDB( $query, 1 );
 		@dbResult_tmp_arr = ( @dbResult_not_arr, @dbResult_esc_arr );
 
 		@dbResult_arr =
-			filterNotificationsByEscalation( \@dbResult_tmp_arr, $notificationCounter, $notification_type, $status );
+			filterNotificationsByEscalation( \@dbResult_tmp_arr, $notificationCounter, $notification_type, $status, $counterHasRolledOver );
 
 
 		debug("To be notified: ".Dumper(@dbResult_arr), 3);
@@ -460,8 +448,8 @@
     	return %contacts if not (scalar %contacts);
 
 	# get list of users we don't want to inform
-	$query = 'select distinct c.username from contacts as c
-					left join notification_logs as l on c.username=l.user 
+	my $query = 'select distinct c.username from contacts as c
+					left join notification_logs as l on c.username='.quoteIdentifier('l.user').'
 					where l.incident_id=\'' . $id . '\' and restrict_alerts=1';
 					
 
@@ -469,7 +457,9 @@
 
 	foreach my $contact (@dbResult)
 	{
-		delete $contacts{$contact};
+		foreach my $contact_key ( keys %contacts ) {
+			delete $contacts{$contact_key} if $contacts{$contact_key}{username} eq $contact->{username};
+		}
 	}
 
     return %contacts;
@@ -493,7 +483,7 @@
         $on_holiday = 0;
 
         # get holiday entries for current contact
-        $query = 'select h.holiday_start,h.holiday_end from holidays h
+        my $query = 'select h.holiday_start,h.holiday_end from holidays h
 					left join contacts c on c.id=h.contact_id
 					where c.username=\'' . $contacts{$contact}->{username} . '\'';
 
@@ -566,30 +556,39 @@
 
 
 
-# TODO consider counter wrap
 # only send alerts to contacts that have the correct notification nr.
 # or recoveries / OKs to all preceding
 sub filterNotificationsByEscalation
 {
 
-    my ( $dbResult_arr, $filter, $notification_type, $status ) = @_;
+    my ( $dbResult_arr, $filter, $notification_type, $status, $counterHasRolledOver ) = @_;
+    my $ignoreFilter = 0;
     my @return_arr;
 
-    debug('filter: '.$filter.' notification_type: '.$notification_type.' status: '.$status, 2);
+    debug('filter: '.$filter.' notification_type: '.$notification_type.' status: '.$status.' counterHasRolledOver: '.$counterHasRolledOver, 2);
     debug("dbResult_arr Array: ".Dumper($dbResult_arr), 3);
 
     # prepare search filter
     if ( $status eq 'OK' || $status eq 'UP' || $notification_type eq 'ACKNOWLEDGEMENT' || $notification_type eq 'CUSTOM' || $notification_type eq 'FLAPPINGSTART' || $notification_type eq 'FLAPPINGSTOP' || $notification_type eq 'FLAPPINGDISABLED' || $notification_type eq 'DOWNTIMESTART' || $notification_type eq 'DOWNTIMEEND' || $notification_type eq 'DOWNTIMECANCELLED')
     {
-        my @filter_entries;
-        for ( my $x = 0 ; $x <= $filter ; $x++ )
-        {
-            push( @filter_entries, $x );
+        if ($counterHasRolledOver) {
+            ## In this case, we can assume that all contacts listed in @$dbResult_arr with some specification for when
+            ## they would be sent a notification already got notified before the rollover occurred.  (This will be true
+            ## provided that the notification rules have been stable over this period, which we really have no direct
+            ## control over.)  So all such contacts should now be notified of the recovery condition, regardless of
+            ## where their particular notification rule is now positioned within the rolled-over counter sequencing.
+            $ignoreFilter = 1;
+        }
+        else {
+            my @filter_entries;
+            for ( my $x = 0 ; $x <= $filter ; $x++ ) {
+                push( @filter_entries, $x );
+            }
+            $filter = '(' . join( '|', @filter_entries ) . ')';
         }
-        $filter = '[' . join( '|', @filter_entries ) . ']';
     }
 
-    debug('filter2: '.$filter, 2);
+    debug('filter2: '.($ignoreFilter ? 'notify all contacts' : $filter), 2);
 
     # apply filter
     foreach my $row (@$dbResult_arr)
@@ -599,7 +598,7 @@
           if ( !defined( $row->{notify_after_tries} )
             || $row->{notify_after_tries} eq '' );
         my @notify_after_tries = getArrayOfNums( $row->{notify_after_tries} );
-        if (   grep( /^$filter$/, @notify_after_tries )
+        if (   ( $ignoreFilter || grep( /^$filter$/, @notify_after_tries ) )
             && defined( $row->{username} )
             && $row->{username} ne '' )
         {
