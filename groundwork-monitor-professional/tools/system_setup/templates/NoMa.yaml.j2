---
command:
  dummy: /bin/true
  growl: /usr/local/groundwork/noma/notifier/sendGrowl.pl
  nagios: /usr/local/groundwork/noma/notifier/sendToNagios.pl
  sendemail: /usr/local/groundwork/noma/notifier/sendEmail_gwos.pl
  sendsms: /usr/local/groundwork/noma/notifier/sendSMS.pl
  voicecall: /usr/local/groundwork/noma/notifier/sendVoice.pl
db:
  type: postgresql
  automatic_db_upgrade: yes
  db_example_dir: /usr/local/groundwork/noma/sql
  mysql:
   type: mysql
   database: noma
   host: localhost
   password: noma
   user: noma
   persistent: 0
  postgresql:
   type: postgresql
   database: noma
   host: localhost
   password: nomapass
   user: noma
   persistent: 0
  sqlite3:
   type: sqlite3
   dbfile: /usr/local/groundwork/noma/var/NoMa.db
api:
  type: postgresql
  database: gwcollagedb
  host: localhost
  password: gwrk
  user: collage
  persistent: 0
  table_prefix: nagios_
frontend:
  language: en
  authentication_type: native # false, native, ldap, http
  ldap:
   version: 3
   server: ldap://
   base_dn: OU=someUnit,DC=some,DC=org
   dir_user: CN=DirUser,OU=someUnit,DC=some,DC=org
   dir_password: secret
   filter: "(|(objectClass=contact)(objectClass=user))" # simple filter
#   filter: "(|(objectClass=person)(uid=###USER###))" # complex filter: ###USER### will be replaced by the login name
   key_find_user: samaccountname # LDAP key to find login name
   key_set_user: distinguishedname # LDAP key to return login name to set in session
  http:
   username_is_email: true
   check_local_user: true
  notifications:
   add_owner: true
   host_service_preview: true
   preview_width: 250
   preview_max_length: 1000
   preview_scroll: true
   preview_max_height: 120
  contactgroups:
   admin_only: true
  statuspage:
   admin_only: true
  logs:
   admin_only: true
   pages_per_line: 10
   num_results:
    10: 10
    20: 20
    50: 50
    100: 100
  timeframes:
   admin_only: true
  overview: # length of overview fields
   overview_recipients: 40
   overview_hostgroups: 50
   overview_host: 40
   overview_servicegroups: 50
   overview_service: 40
  debug:
   file: /usr/local/groundwork/noma/var/NoMa-logfile.log
   logging: false
   queries: false
debug:
  daemonize: 1
  file: /usr/local/groundwork/noma/var/noma_debug.log
  logging: 1
  paramlog: ~
  queries: 1
  sms: ~
  voice: ~
  watchdogEnabled: 1
  watchdogMaxRSS: 1524288
  watchdogMaxRuntime: ~
  watchdogMaxVSS: 2500000
escalator:
  internalEscalation: 0
  stopAfter: 5400
  timeToWait: 300
input:
  pipeEnabled: 1
  pipePath: /usr/local/groundwork/noma/var/noma.pipe
  socketAddress: localhost
  socketEnabled: 1
  socketMaxConns: 10
  socketPort: 5670
log:
  delimiter: " | "
  hostServiceOutput: 1
  pluginOutput: 1
methods:
  growl:
    ackmessage:
      host: "$incident_id: $notification_type on host $host. State is $status. Alias: $host_alias. Author $authors. Comment $comments. Time: $datetime"
      service: "$incident_id: $notification_type for service $service on host $host. State is $status. Author $authors Comment $comments. Time: $datetime"
    application_name: NoMa
    message:
      host: "$incident_id: $notification_type on host $host. State is $status. Alias: $host_alias. $output Time: $datetime"
      service: "$incident_id: $notification_type for service $service on host $host. State is $status. Info: $output Time: $datetime"
    password: somepassw0rd
    return_ack: 0
    subject_host: "NoMa - $notification_type: Host $host is $status"
    subject_service: "NoMa - $notification_type: Service $service on host $host is $status"
  sendemail:
    message:
      host:
        ackmessage: "***** NoMa *****\n\nID: $incident_id\nNotification Type: $notification_type\nHost: $host\nAuthor: $authors\nComment: $comments\nState: $status\nLink: {{ protocol }}://{{ servername }}/portal-statusviewer/urlmap?host=$host\nInfo: $output\n\nDate/Time: $datetime"
        message: "***** NoMa *****\n\nID: $incident_id\nNotification Type: $notification_type\nHost: $host\nHost Alias: $host_alias\nState: $status\nAddress: $host_address\nLink: {{ protocol }}://{{ servername }}/portal-statusviewer/urlmap?host=$host\nInfo: $output\n\nDate/Time: $datetime"
        subject: "NoMa: Host $host is $status"
      service:
        ackmessage: "***** NoMa *****\n\nID: $incident_id\nNotification Type: $notification_type\nAuthor: $authors\nComment: $comments\nService: $service\nHost: $host\nState: $status\n\nLink: {{ protocol }}://{{ servername }}/portal-statusviewer/urlmap?host=$host&service=$service\nInfo: $output\n\nDate/Time: $datetime"
        message: "***** NoMa *****\n\nID: $incident_id\nNotification Type: $notification_type\nService: $service\nHost: $host\nHost Alias: $host_alias\nState: $status\nAddress: $host_address\nLink: {{ protocol }}://{{ servername }}/portal-statusviewer/urlmap?host=$host&service=$service\nInfo: $output\n\nDate/Time: $datetime"
        subject: "NoMa: Service $service on host $host is $status"
    sendmail: /usr/local/groundwork/common/bin/sendEmail
  sendsms:
    ackmessage:
      host: "$incident_id: $notification_type on host $host. State is $status. Alias: $host_alias. Author $authors. Comment $comments. Time: $datetime"
      service: "$incident_id: $notification_type for service $service on host $host. State is $status. Author $authors Comment $comments. Time: $datetime"
    check_command: /usr/local/groundwork/nagios/libexec/check_smsfinder.pl -H $server -u admin -p admin -w 2 -c 1
    message:
      host: "$incident_id: $notification_type on host $host. State is $status. Alias: $host_alias. $output Time: $datetime"
      service: "$incident_id: $notification_type for service $service on host $host. State is $status. Info: $output Time: $datetime"
    suppression: 0
  voicecall:
    bundled_message:
      header: "this is a message from nagios "
      host: there are $count alerts. $output.
    callerID: 0
    channel: Srx/g31
    check_command: "/usr/local/groundwork/nagios/libexec/check_snmp -H $server -u $channel -l Starface -R \"ISDN Channels: OK:1\" -t 1 -o .1.3.6.1.4.1.32354.1.2.999.4.1.2.9.98.117.108.107.99.104.101.99.107.1"
    message:
      header: "this is a message from nagios "
      host: the host $host is $status
      service: the service $service on host $host is status $status
    return_ack: 0
    server: 192.168.1.1
    starface: 1
    suffix: ''
    suppression: 0
notifier:
  ackPipe: /usr/local/groundwork/nagios/var/spool/nagios.cmd
  bundle: 0
  delay: 0
  locale: en_US
  maxAttempts: 4
  pattern: "%F %T"
  nap_time: 0.01
  sleep_time: 30
  timeToWait: 60
  timezone:
  generate_IDs: 1
path:
  cache: /usr/local/groundwork/noma/var/noma.cache
  pidfile: /usr/local/groundwork/noma/var/noma.pid
